<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:rx="http://www.renderx.com/XSL/Extensions" xmlns:xlink="http://www.w3.org/1999/xlink" class="normal" data="creator-name=Monika Aarti; creator-company=ABB; creator-dpt=ATMA/RO/RWD; vnum=I05-11-10-13-32-11" xml:lang="en">
   <meta-text class="user">semaek</meta-text>
   <meta-block class="date">
      <meta-text class="year">2024</meta-text>
      <meta-text class="month">08</meta-text>
      <meta-text class="day">07</meta-text>
   </meta-block>
   <meta-text class="time">10:06:18</meta-text>
   <meta-text class="identity">http://138.221.40.209:8080/davlns/root/bl(1616089)/bl(1616090)/ABB/Files/Robots/Manuals/RAPID manuals/Master/id(68629)ix(1617392)v(a101a1)RAPID Overview supermanual_en.xml</meta-text>
   <meta-text class="file">id(68629)ix(1617392)v(a101a1)RAPID Overview supermanual_en.xml</meta-text>
   <meta-text class="prepared"/>
   <meta-text class="issue"/>
   <meta-text class="notice"/>
   <meta-flag class="language" xml:lang="en"/>
   <meta-flag class="security" value="Open"/>
   <meta-block class="license-info">
      <meta-text class="line"/>
   </meta-block>
   <meta-block class="contact-info">
      <meta-text class="line"/>
   </meta-block>
   <meta-block class="allowed-words">
      <meta-text class="word">ABB</meta-text>
      <meta-text class="word">FlexPendant</meta-text>
      <meta-text class="word">IRB</meta-text>
      <meta-text class="word">quaternion</meta-text>
      <meta-text class="word">singularities</meta-text>
   </meta-block>
   <part class="frontmatter">
      <maintitle>RAPID overview</maintitle>
      <subtitle>Technical reference manual</subtitle>
      <wrapper class="um-header">
         <paragraph class="prod-version">
            <phrase class="variable" type="Document.ProdVersion">RobotWare 7.16</phrase>
         </paragraph>
         <paragraph class="document-id">
            <phrase class="variable" type="Document.ID">3HAC065040</phrase>
         </paragraph>
         <paragraph class="revision">
            <phrase class="variable" type="Document.Revision">
               <phrase>
                  <phrase class="value">L</phrase>
               </phrase>
            </phrase>
         </paragraph>
      </wrapper>
      <wrapper class="juridics">
         <wrapper class="limitation-of-liability" id="newid-1">
            <paragraph>The information in this manual is subject to change without notice and should not be construed as a commitment by ABB. ABB assumes no responsibility for any errors that may appear in this manual.</paragraph>
            <paragraph>Except as may be expressly stated anywhere in this manual, nothing herein shall be construed as any kind of guarantee or warranty by ABB for losses, damage to persons or property, fitness for a specific purpose or the like.</paragraph>
            <paragraph>In no event shall ABB be liable for incidental or consequential damages arising from use of this manual and products described herein.</paragraph>
            <paragraph>This manual and parts thereof must not be reproduced or copied without ABB's written permission.</paragraph>
            <paragraph>Keep for future reference.</paragraph>
            <paragraph>Additional copies of this manual may be obtained from ABB.</paragraph>
         </wrapper>
         <wrapper class="copyright" id="newid-2">
            <paragraph>Â© Copyright <phrase class="variable" type="ABB.Copyright.StartYear">2019-</phrase>
               <phrase class="variable" type="ABB.Copyright.StopYear">2024</phrase> ABB. All rights reserved.</paragraph>
            <paragraph>Specifications subject to change without notice.</paragraph>
         </wrapper>
      </wrapper>
      <section>
         <title>Overview of this manual</title>
         <wrapper class="block">
            <title>About this manual</title>
            <paragraph>This is a reference manual containing a detailed explanation of the programming language as well as all instructions, functions, and data types. This manual is particularly useful when programming offline. Inexperienced users should start with <phrase class="variable" type="Reference.OM.Controller">
                  <phrase>
                     <paragraph class="abb.subtitle">Operating manual</paragraph>
                     <paragraph class="abb.maintitle">OmniCore</paragraph>
                  </phrase>
               </phrase>.</paragraph>
            <paragraph>This manual describes RobotWare 7.</paragraph>
         </wrapper>
         <wrapper class="block" data="principle-type=guideline">
            <title>Usage</title>
            <paragraph>This manual should be read during programming.</paragraph>
         </wrapper>
         <wrapper class="block">
            <title>Who should read this manual?</title>
            <paragraph>This manual is intended for someone with some previous experience in programming, for example, a robot programmer.</paragraph>
         </wrapper>
         <wrapper class="block" data="parts-type=parts-function; parts-content=general">
            <title>Organization of chapters</title>
            <paragraph>The manual is organized in the following chapters:</paragraph>
            <table type="proc-set;">
               <col/>
               <col/>
               <thead>
                  <tr>
                     <td>
                        <paragraph>Chapter</paragraph>
                     </td>
                     <td>
                        <paragraph>Contents</paragraph>
                     </td>
                  </tr>
               </thead>
               <tbody>
                  <tr>
                     <td>
                        <paragraph>Basic RAPID programming</paragraph>
                     </td>
                     <td>
                        <paragraph>Answers questions like "Which instruction should I use?" or "What does this instruction mean?". This chapter briefly describes all instructions, functions, and data types grouped in accordance with the instruction pick-lists you use when programming. It also includes a summary of the syntax, which is particularly useful when programming offline. It also explains the inner details of the language.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Motion and I/O programming</paragraph>
                     </td>
                     <td>
                        <paragraph>This chapter describes the coordinate systems of the robot, its velocity and other motion characteristics during execution.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Glossary</paragraph>
                     </td>
                     <td>
                        <paragraph>A glossary to make things easier to understand.</paragraph>
                     </td>
                  </tr>
               </tbody>
            </table>
         </wrapper>
         <wrapper class="block" data="fact-type=other" id="newid-3">
            <title>References</title>
            <table>
               <col/>
               <col/>
               <thead>
                  <tr>
                     <td>
                        <paragraph>Reference</paragraph>
                     </td>
                     <td>
                        <paragraph>Document ID</paragraph>
                     </td>
                  </tr>
               </thead>
               <tbody>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.OM.Controller">
                              <phrase>
                                 <paragraph class="abb.subtitle">Operating manual</paragraph>
                                 <paragraph class="abb.maintitle">OmniCore</paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.OM.ControllerID">
                              <phrase>
                                 <paragraph class="abb.documentId">
                                    <phrase class="value">3HAC065036-001</phrase>
                                 </paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.TRM.RAPID">
                              <phrase>
                                 <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                 <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.TRM.RAPIDID">
                              <phrase>
                                 <paragraph class="abb.documentId">
                                    <phrase class="value">3HAC065038-001</phrase>
                                 </paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.TRM.RAPIDKernel">
                              <phrase>
                                 <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                 <paragraph class="abb.maintitle">RAPID kernel</paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.TRM.RAPIDKernelID">
                              <phrase>
                                 <paragraph class="abb.documentId">
                                    <phrase class="value">3HAC065039-001</phrase>
                                 </paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.TRM.SystemParameters">
                              <phrase>
                                 <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                 <paragraph class="abb.maintitle">System parameters</paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.TRM.SystemParametersID">
                              <phrase>
                                 <paragraph class="abb.documentId">
                                    <phrase class="value">3HAC065041-001</phrase>
                                 </paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.AM.ControllerSoftware">
                              <phrase>
                                 <paragraph class="abb.subtitle">Application manual</paragraph>
                                 <paragraph class="abb.maintitle">Controller software OmniCore</paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>
                           <phrase class="variable" type="Reference.AM.ControllerSoftwareID">
                              <phrase>
                                 <paragraph class="abb.documentId">
                                    <phrase class="value">3HAC066554-001</phrase>
                                 </paragraph>
                              </phrase>
                           </phrase>
                        </paragraph>
                     </td>
                  </tr>
               </tbody>
            </table>
         </wrapper>
         <wrapper class="block" data="fact-type=revision-note">
            <title>Revisions</title>
            <table>
               <col/>
               <col/>
               <thead>
                  <tr>
                     <td>
                        <paragraph>Revision</paragraph>
                     </td>
                     <td>
                        <paragraph>Description</paragraph>
                     </td>
                  </tr>
               </thead>
               <tbody>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">A</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.0</phrase>.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">B</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.0.2</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Image added in section <link type="Reference;" xlink:type="simple" xlink:href="#newid-34">Behavior of the backward execution</link>.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">C</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.1</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added support for UTF-8 (UNICODE) symbols, see <link type="Reference;" xlink:type="simple" xlink:href="#newid-4">Strings</link>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Added information about file formats <phrase class="script">.modx</phrase> and <phrase class="script">.sysx</phrase>, see <link type="Reference;" xlink:type="simple" xlink:href="#newid-6">Modules</link>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>The instruction <phrase class="value">
                                    <phrase class="script">Break</phrase>
                                 </phrase> has changed name to <phrase class="value">
                                    <phrase class="script">DebugBreak</phrase>
                                 </phrase>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Added <phrase class="script">StrFormat</phrase> to <link type="Reference;" xlink:type="simple" xlink:href="#newid-30">String functions</link>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Added information about independent collision stop without brake.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">D</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.2</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Updated information about signals, see <link type="Reference;" xlink:type="simple" xlink:href="#newid-21">Inputs and outputs</link>.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">E</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.6</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added support for division of <phrase class="notranslate">pos</phrase>, see <link type="Reference;" xlink:type="simple" xlink:href="#newid-11">ArithmeticExpressions</link>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Added information that both <italic>PP to Main</italic> and <italic>PP to routine</italic> will remove temporary world zones.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Clarified limitation for backward execution and execution errors.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">F</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.8</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added support for scalar vector division of <phrase class="notranslate">pos</phrase>, see <link type="Reference;" xlink:type="simple" xlink:href="#newid-11">ArithmeticExpressions</link>.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">G</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.10</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added information about <phrase class="notranslate">
                                    <phrase class="script">FitX</phrase>
                                 </phrase> instructions, see <link type="Reference;" xlink:type="simple" xlink:href="#newid-27">Fitting</link>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>The instruction <phrase class="notranslate">
                                    <phrase class="script">UIShow</phrase>
                                 </phrase> and the data type <phrase class="notranslate">
                                    <phrase class="script">uishownum</phrase>
                                 </phrase> are removed from the manual as they do not work in RobotWare 7.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">H</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.12</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added the functions <phrase class="value">
                                    <phrase class="script">GetNextOption</phrase>
                                 </phrase> and <phrase class="value">
                                    <phrase class="script">GetNextProduct</phrase>
                                 </phrase>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Added the instructions <phrase class="value">
                                    <phrase class="script">Break</phrase>
                                 </phrase>, <phrase class="value">
                                    <phrase class="script">Continue</phrase>
                                 </phrase>, and <phrase class="value">
                                    <phrase class="script">TriggAbsJ</phrase>
                                 </phrase>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Added information about file extensions, see <link type="Reference;" xlink:type="simple" xlink:href="#newid-7">FileExtensionForUTF8</link>.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">J</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.13</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added new matrix instructions.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Added instruction <phrase class="value">
                                    <phrase class="script">WristOpt</phrase>
                                 </phrase>.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">K</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.15</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added information about MultiMove.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Updated general information about backward execution.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Removed all objects for and references to <phrase class="notranslate">
                                    <italic>Machine Synchronization</italic>
                                 </phrase>.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>
                           <phrase class="value">L</phrase>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Released with <phrase class="value">RobotWare 7.16</phrase>.</paragraph>
                        <list class="list-unordered">
                           <listitem>
                              <paragraph>Added instruction <phrase class="value">
                                    <phrase class="script">MoveAbsL</phrase>
                                 </phrase>.</paragraph>
                           </listitem>
                           <listitem>
                              <paragraph>Minor corrections.</paragraph>
                           </listitem>
                        </list>
                     </td>
                  </tr>
               </tbody>
            </table>
         </wrapper>
      </section>
      <section>
         <title>How to read this manual</title>
         <wrapper class="block">
            <title>Typographic conventions</title>
            <paragraph>Examples of programs are always displayed in the same way as they are output to a file or printer. This differs from what is displayed on the FlexPendant in the following ways:</paragraph>
            <list class="list-unordered">
               <listitem>
                  <paragraph>Certain control words that are masked in the FlexPendant display are printed, for example words indicating the start and end of a routine.</paragraph>
               </listitem>
               <listitem>
                  <paragraph>Data and routine declarations are printed in the formal form, for example <italic>VAR num reg1</italic>;.</paragraph>
               </listitem>
            </list>
            <paragraph>In descriptions in this manual, all names of instructions, functions, and data types are written in monospace font, for example: <phrase class="notranslate">
                  <phrase class="script">TPWrite</phrase>
               </phrase>. Names of variables, system parameters, and options are written in italic font. Comments in example code are not translated (even if the manual is translated).</paragraph>
         </wrapper>
         <wrapper class="block">
            <title>Syntax rules<indexterm id="index1">
                  <primary>syntax rules</primary>
               </indexterm>
            </title>
            <paragraph>Instructions and functions are described using both simplified syntax and formal syntax. If you use the FlexPendant to program, you generally only need to know the simplified syntax, since the robot automatically makes sure that the correct syntax is used.</paragraph>
            <wrapper class="titled-block">
               <title>Example of simplified syntax</title>
               <paragraph>This is an example of simplified syntax with the instruction <phrase class="notranslate">
                     <phrase class="script">TPWrite</phrase>
                  </phrase>.</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">TPWrite String [\Num] | [\Bool] | [\Pos] | [\Orient] | [\Dnum]</phrase>
                  </paragraph>
               </wrapper>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Mandatory arguments are not enclosed in brackets.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Optional arguments are enclosed in square brackets [ ]. These arguments can be omitted.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Arguments that are mutually exclusive, that is cannot exist in the instruction at the same time, are separated by a vertical bar |.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Arguments that can be repeated an arbitrary number of times are enclosed in curly brackets { }.</paragraph>
                  </listitem>
               </list>
               <paragraph>The above example uses the following arguments:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">
                           <phrase class="script">String</phrase>
                        </phrase> is a compulsory argument.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">
                           <phrase class="script">Num</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">Bool</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">Pos</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">Orient</phrase>
                        </phrase>, and <phrase class="notranslate">
                           <phrase class="script">Dnum</phrase>
                        </phrase> are optional arguments.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">
                           <phrase class="script">Num</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">Bool</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">Pos</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">Orient</phrase>
                        </phrase>, and <phrase class="notranslate">
                           <phrase class="script">Dnum</phrase>
                        </phrase> are mutually exclusive.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="titled-block">
               <title>Example of formal syntax</title>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">TPWrite </phrase>
                  </paragraph>
                  <wrapper class="preformatted">
                     <paragraph>
                        <phrase class="notranslate">[String ':='] &lt;expression (IN) of string&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">['\'Num':=' &lt;expression (IN) of num&gt; ] |</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">['\'Bool':=' &lt;expression (IN) of bool&gt; ] |</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">['\'Pos':=' &lt;expression (IN) of pos&gt; ] |</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">['\'Orient ':=' &lt;expression (IN) of orient&gt; ] |</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">['\' Dnum':=' &lt;expression (IN) of dnum]';'</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>The text within the square brackets [ ] may be omitted.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Arguments that are mutually exclusive, that is cannot exist in the instruction at the same time, are separated by a vertical bar |.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Arguments that can be repeated an arbitrary number of times are enclosed in curly brackets { }.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Symbols that are written in order to obtain the correct syntax are enclosed in single quotation marks (apostrophes) ' '.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>The data type of the argument and other characteristics are enclosed in angle brackets &lt; &gt;. See the description of the parameters of a routine for more detailed information.</paragraph>
                  </listitem>
               </list>
               <paragraph>The basic elements of the language and certain instructions are written using a special syntax, EBNF. This is based on the same rules, but with some additions.</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>The symbol <phrase class="notranslate">::=</phrase> means <italic>is defined as</italic>.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Text enclosed in angle brackets &lt; &gt; is defined in a separate line.</paragraph>
                  </listitem>
               </list>
               <wrapper class="titled-block">
                  <title>Example</title>
                  <wrapper class="preformatted">
                     <paragraph>
                        <phrase class="notranslate">GOTO &lt;identifier&gt; ';'</phrase>
                     </paragraph>
                     <wrapper class="preformatted">
                        <paragraph>
                           <phrase class="notranslate">&lt;identifier&gt; ::= &lt;ident&gt; | &lt;ID&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;ident&gt; ::= &lt;letter&gt; {&lt;letter&gt; | &lt;digit&gt; | '_'}</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
            </wrapper>
         </wrapper>
      </section>
   </part>
   <part class="body">
      <section>
         <title>Basic RAPID programming</title>
         <section>
            <title>Program structure</title>
            <section>
               <title>Introduction</title>
               <wrapper class="block">
                  <title>Instructions<indexterm id="index2">
                        <primary>instructions</primary>
                        <secondary>description</secondary>
                     </indexterm>
                     <indexterm id="index3">
                        <primary>arguments</primary>
                        <secondary>description</secondary>
                     </indexterm>
                  </title>
                  <paragraph>The program consists of a number of instructions which describe the work of the robot. Thus, there are specific instructions for the various commands, such as one to move the robot, one to set an output, etc.</paragraph>
                  <paragraph>The instructions generally have a number of associated arguments which define what is to take place in a specific instruction. For example, the instruction for resetting an output contains an argument which defines which output is to be reset; for example <phrase class="notranslate">
                        <phrase class="script">Reset do5</phrase>
                     </phrase>. These arguments can be specified in one of the following ways:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>as a numeric value, for example <phrase class="notranslate">
                              <phrase class="script">5</phrase>
                           </phrase> or <phrase class="notranslate">
                              <phrase class="script">4.6</phrase>
                           </phrase>
                        </paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>as a reference to data, for example <phrase class="notranslate">
                              <phrase class="script">reg1</phrase>
                           </phrase>
                        </paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>as an expression, for example <phrase class="notranslate">
                              <phrase class="script">5+reg1*2</phrase>
                           </phrase>
                        </paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>as a function call, for example <phrase class="notranslate">
                              <phrase class="script">Abs(reg1)</phrase>
                           </phrase>
                        </paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>as a string value, for example <phrase class="notranslate">
                              <phrase class="script">"Producing part A"</phrase>
                           </phrase>
                        </paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block">
                  <title>Routines<indexterm id="index4">
                        <primary>routines</primary>
                        <secondary>description</secondary>
                     </indexterm>
                  </title>
                  <paragraph>There are three types of routines â <italic>procedures</italic>, <italic>functions</italic> and <italic>trap routines</italic>.</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>A procedure is used as a subprogram.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>A function returns a value of a specific type and is used as an argument of an instruction.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Trap routines provide a means of responding to interrupts. A trap routine can be associated with a specific interrupt; for example when an input is set, it is automatically executed if that particular interrupt occurs.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block">
                  <title>Data<indexterm id="index5">
                        <primary>data</primary>
                        <secondary>description</secondary>
                     </indexterm>
                  </title>
                  <paragraph>Information can also be stored in data, for example tool data (which contains all information on a tool, such as its TCP and weight) and numerical data (which can be used, for example, to count the number of parts to be processed). Data is grouped into different data types which describe different types of information, such as tools, positions and loads. As this data can be created and assigned arbitrary names, there is no limit (except that imposed by memory) on the number of data. These data can exist either globally in the program or locally within a routine.</paragraph>
                  <paragraph>There are three kinds of data â <italic>constants</italic>, <italic>variables</italic> and <italic>persistents</italic>.</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>A constant represents a static value and can only be assigned a new value manually.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>A variable can also be assigned a new value during program execution.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>A persistent can be described as a âpersistentâ variable. When a program is saved the initialization value reflects the current value of the persistent.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block">
                  <title>Other features<indexterm id="index6">
                        <primary>case sensitivity</primary>
                     </indexterm>
                  </title>
                  <paragraph>Other features in the language are:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>Routine parameters</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Arithmetic and logical expressions</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Automatic error handling</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Modular programs</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Multitasking</paragraph>
                     </listitem>
                  </list>
                  <paragraph>The language is not case sensitive, for example upper case and lower case letters are considered the same.</paragraph>
               </wrapper>
            </section>
            <section>
               <title>Basic elements</title>
               <wrapper class="block">
                  <title>Identifiers<indexterm id="index7">
                        <primary>identifiers</primary>
                     </indexterm>
                  </title>
                  <paragraph>Identifiers are used to name modules, routines, data, and labels, for example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MODULE <italic>module_name</italic>
                        </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC <italic>routine_name()</italic>
                        </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR pos <italic>data_name;</italic>
                        </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">
                           <italic>label_name:</italic>
                        </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>Only characters in ISO 8859-1 are allowed.</paragraph>
                  <paragraph>The first character in an identifier must be a letter. The other characters can be letters, digits, or underscores (_).</paragraph>
                  <paragraph>The maximum length of any identifier is 32 characters, each of these characters being significant. Identifiers that are the same except that they are typed in the upper case, and vice versa, are considered the same.</paragraph>
                  <wrapper class="titled-block">
                     <title>Reserved words<indexterm id="index8">
                           <primary>reserved words</primary>
                        </indexterm>
                     </title>
                     <paragraph>The words listed below are reserved. They have a special meaning in the RAPID language and thus must not be used as identifiers.</paragraph>
                     <paragraph>There are also a number of predefined names for data types, system data, instructions, and functions, that must not be used as identifiers.</paragraph>
                     <table>
                        <col/>
                        <col/>
                        <col/>
                        <col/>
                        <tbody>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ALIAS</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">AND</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">BACKWARD</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">BREAK</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">CASE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">CONNECT</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">CONST</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">CONTINUE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">DEFAULT</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">DIV</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">DO</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ELSE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ELSEIF</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDFOR</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDFUNC</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDIF</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDMODULE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDPROC</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDRECORD</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDTEST</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDTRAP</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ENDWHILE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">ERROR</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">EXIT</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">FALSE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">FOR</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">FROM</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">FUNC</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">GOTO</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">IF</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">INOUT</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">LOCAL</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">MOD</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">MODULE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">NOSTEPIN</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">NOT</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">NOVIEW</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">OR</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">PERS</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">PROC</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">RAISE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">READONLY</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">RECORD</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">RETRY</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">RETURN</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">STEP</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">SYSMODULE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">TEST</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">THEN</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">TO</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">TRAP</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">TRUE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">TRYNEXT</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">UNDO</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">VAR</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">VIEWONLY</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WHILE</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WITH</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">XOR</phrase>
                                    </phrase>
                                 </paragraph>
                              </td>
                              <td>
                                 <paragraph/>
                              </td>
                           </tr>
                        </tbody>
                     </table>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Spaces and new-line characters</title>
                  <paragraph>The RAPID programming language is a free format language, meaning that spaces can be used anywhere except for in:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>identifiers</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>reserved words</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>numerical values</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>placeholders</paragraph>
                     </listitem>
                  </list>
                  <paragraph>New-line, tab and form-feed characters can be used wherever a space can be used, except for within comments.</paragraph>
                  <paragraph>Identifiers, reserved words, and numeric values must be separated from one another by a space, a new-line, tab, or form-feed character.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Numeric values<indexterm id="index9">
                        <primary>numeric values</primary>
                     </indexterm>
                  </title>
                  <paragraph>A numeric value can be expressed as:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>an integer, for example 3, -100, 3E2</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>a decimal number, for example 3.5, -0.345, -245E-2</paragraph>
                     </listitem>
                  </list>
                  <paragraph>The value must be in the range specified by the ANSI IEEE 754 Standard for Floating-Point Arithmetic.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Logical values<indexterm id="index10">
                        <primary>logical values</primary>
                     </indexterm>
                  </title>
                  <paragraph>A logical value can be expressed as <phrase class="notranslate">
                        <phrase class="script">TRUE</phrase>
                     </phrase> or <phrase class="notranslate">
                        <phrase class="script">FALSE</phrase>
                     </phrase>.</paragraph>
               </wrapper>
               <wrapper class="block" id="newid-4">
                  <title>String values<indexterm id="index11">
                        <primary>string</primary>
                     </indexterm>
                  </title>
                  <paragraph>A string value is a sequence of UTF-8 symbols and control characters (non-ISO 8859-1 (Latin-1)). Character codes can be included, making it possible to include non-printable characters (binary data) in the string as well. The string length can be maximum 80 bytes.</paragraph>
                  <paragraph>
                     <indexterm id="index12">
                        <primary>UTF-8</primary>
                     </indexterm>
                     <indexterm id="index13">
                        <primary>symbols</primary>
                     </indexterm>UTF-8 symbols are supported only in the following places:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>Comments in RAPID code</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Content in RAPID strings</paragraph>
                     </listitem>
                  </list>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">"This is a string" </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">"This string ends with the BEL control character \07" </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>If a backslash (which indicates character code) or double quote character is included, it must be written twice.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">"This string contains a "" character" </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">"This string contains a \\ character" </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Comments<indexterm id="index14">
                        <primary>comment</primary>
                     </indexterm>
                  </title>
                  <paragraph>Comments are used to make the program easier to understand. They do not affect the meaning of the program in any way.</paragraph>
                  <paragraph>
                     <indexterm id="index15">
                        <primary>comments in UTF-8</primary>
                     </indexterm>Comments use UTF-8 format, which means all symbols are supported, including symbols used in different languages, and emojis.</paragraph>
                  <paragraph>A comment starts with an exclamation mark (!) and ends with a new-line character. It occupies the remainder of the line (starting from the exclamation mark) and cannot occur outside a module declaration.</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">! comment </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">IF reg1 &gt; 5 THEN </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">! comment </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">reg2 := 0; </phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDIF</phrase> 
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Placeholders<indexterm id="index16">
                        <primary>placeholders</primary>
                     </indexterm>
                  </title>
                  <paragraph>Placeholders can be used to temporarily represent parts of a program that are not yet defined. A program that contains placeholders is syntactically correct and may be loaded into the program memory.</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Placeholder</paragraph>
                           </td>
                           <td>
                              <paragraph>Description</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;TDN&gt; </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>data type definition</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;DDN&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>data declaration</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;RDN&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>routine declaration</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;PAR&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>formal optional alternative parameter</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;ALT&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>optional formal parameter</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;DIM&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>formal (conformant) array dimension</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;SMT&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>instruction</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;VAR&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>data object (variable, persistent or parameter) reference</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;EIT&gt; </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>else if clause of if instruction</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;CSE&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>case clause of test instruction</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;EXP&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>expression</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;ARG&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>procedure call argument</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;ID&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>identifier</paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
               <wrapper class="block">
                  <title>File header<indexterm id="index17">
                        <primary>file header</primary>
                     </indexterm>
                  </title>
                  <paragraph>A program file can start with the following file header (it is not required):</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">%%%</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">VERSION:1</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">LANGUAGE:ENGLISH</phrase> 
                           </paragraph>
                        </wrapper>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">%%%</phrase> 
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Syntax</title>
                  <wrapper class="titled-block">
                     <title>Identifiers</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;identifier&gt; ::= &lt;ident&gt; | &lt;ID&gt;</phrase> 
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;ident&gt; ::= &lt;letter&gt; {&lt;letter&gt; | &lt;digit&gt; | '_'}</phrase> 
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Numeric values</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;num literal&gt; ::=  </phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;integer&gt; [ &lt;exponent&gt; ] </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;decimal integer&gt;) [&lt;exponent&gt;] </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;hex integer&gt; | &lt;octal integer&gt; </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;binary integer&gt; </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;integer&gt; '.' [ &lt;integer&gt; ] [ &lt;exponent&gt; ] </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| [ &lt;integer&gt; ] '.' &lt;integer&gt; [ &lt;exponent&gt; ] </phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;integer&gt; ::= &lt;digit&gt; {&lt;digit&gt;} </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;hex integer&gt; ::= '0' ('X' | 'x') </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;hex digit&gt; {&lt;hex digit&gt;} </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;octal integer&gt; ::= '0' ('O' | 'o') &lt;octal digit&gt; {&lt;octal digit&gt;} </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;binary integer&gt; ::= '0' ('B' | 'b') &lt;binary digit&gt; {&lt;binary digit&gt;}</phrase>
                        </paragraph>
                        <paragraph> </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;exponent&gt; ::= ('E' | 'e') ['+' | '-'] &lt;integer&gt; </phrase>
                        </paragraph>
                        <paragraph/>
                        <paragraph>
                           <phrase class="notranslate">&lt;digit&gt; ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;hex digit&gt; ::= &lt;digit&gt; | A | B | C | D | E | F | a | b | c | d | e | f</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;octal digit&gt; ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;binary digit&gt; ::= 0 | 1 </phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Logical values</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;bool literal&gt; ::= TRUE | FALSE </phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>String values</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;string literal&gt; ::= '"' {&lt;character&gt; | &lt;character code&gt; } '"'</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;character code&gt; ::= '\' &lt;hex digit&gt; &lt;hex digit&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;hex digit&gt; ::= &lt;digit&gt; | A | B | C | D | E | F | a | b | c | d | e | f </phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Comments</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;comment&gt; ::= '!' {&lt;character&gt; | &lt;tab&gt;} &lt;newline&gt; </phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Characters</title>
                     <wrapper class="preformatted" id="newid-5" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;character&gt; ::= -- UTF-8 symbols --</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;newline&gt; ::= -- newline control character --</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;digit&gt; ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;hex digit&gt; ::= &lt;digit&gt; | A | B | C | D | E | F | a | b | c | d | e | f </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;letter&gt; ::= &lt;upper case letter&gt; | &lt;lower case letter&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;upper case letter&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate"> A | B | C | D | E | F | G | H | I | J </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| K | L | M | N | O | P | Q | R | S | T </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| U | V | W | X | Y | Z | Ã | Ã | Ã | Ã </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| Ã | Ã | Ã | Ã | Ã | Ã | Ã | Ã | Ã | Ã </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| Ã | Ã | Ã | Ã | Ã | Ã | Ã | Ã | Ã | Ã </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| Ã | Ã | Ã | Ã | Ã | Ã | Ã </phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;lower case letter&gt; ::= </phrase>
                        </paragraph>
                        <wrapper class="preformattedxml:lang">
                           <paragraph>
                              <phrase class="notranslate">a | b | c | d | e | f | g | h | i | j </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| k | l | m | n | o | p | q | r | s | t </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| u | v | w | x | y | z | Ã | Ã  | Ã¡ | Ã¢ | Ã£</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| Ã¤ | Ã¥ | Ã¦ | Ã§ | Ã¨ | Ã© | Ãª | Ã« | Ã¬ | Ã­ </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| Ã® | Ã¯ | Ã° | Ã± | Ã² | Ã³ | Ã´ | Ãµ | Ã¶ | Ã¸ </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| Ã¹ | Ãº | Ã» | Ã¼ | Ã½ | Ã¾ | Ã¿ </phrase>
                           </paragraph>
                        </wrapper>
                     </wrapper>
                  </wrapper>
               </wrapper>
            </section>
            <section id="newid-6">
               <title>Modules<indexterm id="index18">
                     <primary>modules</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>
                     <indexterm id="index19">
                        <primary>program</primary>
                     </indexterm>
                     <indexterm id="index20">
                        <primary>modules</primary>
                        <secondary>description</secondary>
                     </indexterm>The program is divided into <italic>program modules</italic> and <italic>system modules</italic>.</paragraph>
                  <paragraph>
                     <indexterm id="index21">
                        <primary>.modx</primary>
                     </indexterm>
                     <indexterm id="index22">
                        <primary>.sysx</primary>
                     </indexterm>The file format for a program module is <phrase class="script">.modx</phrase> and for system module is <phrase class="script">.sysx</phrase>.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(116539)xx1100000550_Program_and_System_modules" fileref="url(file:/F:/SkribentaFiles/ImageCache/8/4/9/09_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/8/4/9/09_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" src="images/xx1100000550_Program_and_System_modules.png"/>
                  </wrapper>
                  <wrapper class="titled-block" id="newid-7">
                     <title>File format will enable using UTF8 characters in strings and comments</title>
                     <paragraph>When using the file extensions .modx and .sysx, the compiler reads that the file is using UTF8 encoding. With UTF8 encoding it is possible to use all Unicode characters in strings and comments. It will be possible to have, for example, Chinese and Cyrillic characters, and emojis.</paragraph>
                     <paragraph>Example:</paragraph>
                     <paragraph>
                        <phrase class="value">
                           <phrase class="script">MODULE Module1</phrase>
                        </phrase>   
                     </paragraph>
                     <paragraph>
                        <phrase class="value">
                           <phrase class="script">   PROC main()</phrase>
                        </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="value">
                           <phrase class="script">      ! Alert that robot needs service </phrase>
                        </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="value">
                           <phrase class="script">      TPWrite "Robot needs service:</phrase> â ";</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="value">
                           <phrase class="script">   ENDPROC</phrase>
                        </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="value">
                           <phrase class="script">ENDMODULE</phrase>
                        </phrase>
                     </paragraph>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Files in .mod or .sys format</title>
                     <paragraph>In RobotWare 7.0 and earlier, the formats were <phrase class="script">.mod</phrase> and <phrase class="script">.sys</phrase>. To use these files in newer releases, the files must be converted, not just renamed. To convert a file manually, the file must be saved as UTF-8 without BOM (Byte Order Mark). When loading these in a RobotWare 7.1 controller or later using RobotStudio, they are automatically converted when saved.</paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Program modules<indexterm id="index23">
                        <primary>program module</primary>
                     </indexterm>
                  </title>
                  <paragraph>A program module can consist of different data and routines. Each module, or the whole program, can be copied to disk, etc., and vice versa.</paragraph>
                  <paragraph>
                     <indexterm id="index24">
                        <primary>main routine</primary>
                     </indexterm>One of the modules contains the entry procedure, a global procedure called <phrase class="notranslate">
                        <phrase class="script">Main</phrase>
                     </phrase>. Executing the program means, in actual fact, executing the <phrase class="notranslate">
                        <phrase class="script">Main</phrase>
                     </phrase> procedure. The program can include many modules, but only one of these will have a main procedure.</paragraph>
                  <paragraph>A module may, for example, define the interface with external equipment or contain geometrical data that is either generated from CAD systems or created on-line by digitizing (teach programming).</paragraph>
                  <paragraph>Whereas small installations are often contained in one module, larger installations may have a main module that references routines and/or data contained in one or several other modules.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>System modules<indexterm id="index25">
                        <primary>system module</primary>
                     </indexterm>
                  </title>
                  <paragraph>System modules are used to define common, system-specific data and routines, such as tools. They are not included when a program is saved, meaning that any update made to a system module will affect all existing programs currently in, or loaded at a later stage into the program memory.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Module declarations<indexterm id="index26">
                        <primary>module declaration</primary>
                     </indexterm>
                     <indexterm id="index27">
                        <primary>declaration</primary>
                        <secondary>module</secondary>
                     </indexterm>
                  </title>
                  <paragraph>A module declaration specifies the name and attributes of that module. These attributes can only be added off-line, not using the FlexPendant. The following are examples of the attributes of a module:</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Attribute</paragraph>
                           </td>
                           <td>
                              <paragraph>If specified</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">SYSMODULE</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>The module is a system module, otherwise a program module</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">NOSTEPIN</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>The module cannot be entered during stepwise execution</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">VIEWONLY</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>The module cannot be modified</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">READONLY</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>The module cannot be modified, but the attribute can be removed</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">NOVIEW</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>The module cannot be viewed, only executed. Global routines can be reached from other modules and are always run as <phrase class="notranslate">
                                    <phrase class="script">NOSTEPIN</phrase>
                                 </phrase>. The current values for global data can be reached from other modules or from the data window on the FlexPendant. <phrase class="notranslate">
                                    <phrase class="script">NOVIEW</phrase>
                                 </phrase> can only be defined offline from a PC.</paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
                  <paragraph>For example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>MODULE module_name (SYSMODULE, VIEWONLY)</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph> !data type definition</paragraph>
                        <paragraph> !data declarations</paragraph>
                        <paragraph> !routine declarations</paragraph>
                     </wrapper>
                     <paragraph>ENDMODULE</paragraph>
                  </wrapper>
                  <paragraph>A module may not have the same name as another module or a global routine or data.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Program file structure</title>
                  <paragraph>As indicated above all program modules are contained in a program with a specific program name. When saving a program, then a new directory is created with the name of the program. In this directory all program modules will be saved with a file extension <phrase class="notranslate">.modx</phrase> together with a description file with the same name as the program and with the extension <phrase class="notranslate">.pgf</phrase>. The description file will include a list of all modules contained in the program.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Syntax</title>
                  <wrapper class="titled-block">
                     <title>Module declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;module declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>MODULE </bold>&lt;module name&gt; [ &lt;module attribute list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;type definition list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;data declaration list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;routine declaration list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <bold>
                                 <phrase class="notranslate">ENDMODULE</phrase>
                              </bold>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;module name&gt; ::= &lt;identifier&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;module attribute list&gt; ::= '(' &lt;module attribute&gt; { ',' &lt;module attribute&gt; } ')'</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;module attribute&gt; ::=</phrase>
                        </paragraph>
                        <paragraph/>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <bold>
                                 <phrase class="notranslate">SYSMODULE</phrase>
                              </bold>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| <bold>NOVIEW</bold>
                              </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| <bold>NOSTEPIN</bold>
                              </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">|<bold> VIEWONLY</bold>
                              </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| <bold>READONLY</bold>
                              </phrase>
                           </paragraph>
                        </wrapper>
                     </wrapper>
                     <wrapper class="note" fileref="url(file:/E:/Skribenta/server/temp/file-7166463227813206592-ix-43622-xx010000.eps.pdf)">
                        <paragraph>If two or more attributes are used they must be in the above order, the <phrase class="notranslate">
                              <phrase class="script">NOVIEW</phrase>
                           </phrase> attribute can only be specified alone or together with the attribute <phrase class="notranslate">
                              <phrase class="script">SYSMODULE</phrase>
                           </phrase>.</paragraph>
                     </wrapper>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;type definition list&gt; ::= { &lt;type definition&gt; }</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;data declaration list&gt; ::= { &lt;data declaration&gt; }</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;routine declaration list&gt; ::= { &lt;routine declaration&gt; }</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
            </section>
            <section>
               <title>Predefined data<indexterm id="index28">
                     <primary>predefined data</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>In order to simplify programming, predefined data is supplied with the robot. This data does not have to be created and, consequently, can be used directly.</paragraph>
                  <paragraph>If this data is used, initial programming is made easier. It is, however, usually better to give your own names to the data you use, since this makes the program easier for you to read.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Contents</title>
                  <paragraph>There are five numerical data (registers) and one clock predefined.</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Name</paragraph>
                           </td>
                           <td>
                              <paragraph>Data type</paragraph>
                           </td>
                           <td>
                              <paragraph>Declaration</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">reg1</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">VAR num reg1:=0</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">reg2</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">VAR num reg2:=0</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">reg3</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">VAR num reg3:=0</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">reg4</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">VAR num reg4:=0</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">reg5</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">VAR num reg5:=0</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">clock1</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">clock</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">VAR clock clock1</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
            </section>
            <section>
               <title>Routines<indexterm id="index29">
                     <primary>routine</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>There are three types of routines (subprograms): procedures, functions, and traps.</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>
                           <indexterm id="index30">
                              <primary>procedure</primary>
                           </indexterm>Procedures do not return a value and are used in the context of instructions.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>
                           <indexterm id="index31">
                              <primary>function</primary>
                           </indexterm>Functions return a value of a specific type and are used in the context of expressions.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>
                           <indexterm id="index32">
                              <primary>trap routine</primary>
                           </indexterm>Trap routines provide a means of dealing with interrupts. A trap routine can be associated with a specific interrupt and then, if that particular interrupt occurs at a later stage, will automatically be executed. A trap routine can never be explicitly called from the program.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block">
                  <title>Routine scope<indexterm id="index33">
                        <primary>scope</primary>
                        <secondary>routine</secondary>
                     </indexterm>
                     <indexterm id="index34">
                        <primary>global</primary>
                        <secondary>routine</secondary>
                     </indexterm>
                     <indexterm id="index35">
                        <primary>local</primary>
                        <secondary>routine</secondary>
                     </indexterm>
                  </title>
                  <paragraph>The scope of a routine denotes the area in which the routine is visible. The optional local directive of a routine declaration classifies a routine as local (within the module), otherwise it is global.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">LOCAL PROC local_routine (...</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC global_routine (...</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>The following scope rules apply to routines:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>The scope of a global routine may include any module in the task.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The scope of a local routine comprises the module in which it is contained.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Within its scope, a local routine hides any global routine or data with the same name.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Within its scope, a routine hides instructions and predefined routines and data with the same name.</paragraph>
                     </listitem>
                  </list>
                  <wrapper class="figure">
                     <image alt="id(116547)xx1100000551_Routines" fileref="url(file:/F:/SkribentaFiles/FileRepository/8/4/9/36)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/8/4/9/36" xsize="279" ysize="143" src="images/xx1100000551_Routines.jpg"/>
                  </wrapper>
                  <paragraph>In the example above, the following routines can be called from Routine h:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>Module1: Routine c, d.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Module2: All routines.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>A routine may not have the same name as another routine, data, or data type in the same module. A global routine may not have the same name as a module or a global routine, global data or global data type in another module.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Parameters<indexterm id="index36">
                        <primary>parameter</primary>
                     </indexterm>
                  </title>
                  <paragraph>The parameter list of a routine declaration specifies the arguments (actual parameters) that must/can be supplied when the routine is called.</paragraph>
                  <paragraph>There are four different types of parameters (in the access mode):</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>Normally, a parameter is used only as an input and is treated as a routine variable. Changing this variable will not change the corresponding argument.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>
                           <indexterm id="index37">
                              <primary>INOUT</primary>
                           </indexterm>An <phrase class="notranslate">
                              <phrase class="script">INOUT</phrase>
                           </phrase> parameter specifies that a corresponding argument must be a variable (entire, element or component) or an entire persistent which can be changed by the routine.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>A <phrase class="notranslate">
                              <phrase class="script">VAR</phrase>
                           </phrase> parameter specifies that a corresponding argument must be a variable (entire, element or component) which can be changed by the routine.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>A <phrase class="notranslate">
                              <phrase class="script">PERS</phrase>
                           </phrase> parameter specifies that a corresponding argument must be an entire persistent which can be changed by the routine.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>If an <phrase class="script">INOUT</phrase>, <phrase class="script">VAR</phrase> or <phrase class="script">PERS</phrase> parameter is updated, this means, in actual fact, that the argument itself is updated, that is it makes it possible to use arguments to return values to the calling routine.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC routine1 (num in_par, INOUT num inout_par,</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR num var_par, PERS num pers_par)</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <indexterm id="index38">
                        <primary>optional parameter</primary>
                     </indexterm>A parameter can be optional and may be omitted from the argument list of a routine call. An optional parameter is denoted by a backslash (\) before the parameter.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC routine2 (num required_par \num optional_par)</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>The value of an optional parameter that is omitted in a routine call may not be referenced. This means that routine calls must be checked for optional parameters before an optional parameter is used.</paragraph>
                  <paragraph>Two or more optional parameters may be mutually exclusive (that is declared to exclude each other), which means that only one of them may be present in a routine call. This is indicated by a stroke (pipe charachter, | ) between the parameters in question.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC routine3 (\num exclude1 | num exclude2)</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <indexterm id="index39">
                        <primary>
                           <phrase class="notranslate">switch</phrase>
                        </primary>
                     </indexterm>The special type, <phrase class="script">switch</phrase>, may (only) be assigned to optional parameters and provides a means to use switch arguments, that is arguments that are only specified by names (not values). A value cannot be transferred to a <phrase class="script">switch</phrase> parameter. The only way to use a <phrase class="script">switch</phrase> parameter is to check for its presence using the predefined function, <phrase class="script">Present</phrase>.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC routine4 (\switch on | switch off)</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">...</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">IF Present (off ) THEN</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">...</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>Arrays may be passed as arguments. The degree of an array argument must comply with the degree of the corresponding formal parameter. The dimension of an array parameter is conformant (marked with *). The actual dimension thus depends on the dimension of the corresponding argument in a routine call. A routine can determine the actual dimension of a parameter using the predefined function, <italic>
                        <phrase class="notranslate">Dim</phrase>
                     </italic>.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC routine5 (VAR num pallet{*,*})</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Routine termination<indexterm id="index40">
                        <primary>terminating routine</primary>
                     </indexterm>
                  </title>
                  <paragraph>The execution of a procedure is either explicitly terminated by a <phrase class="notranslate">
                        <phrase class="script">RETURN</phrase>
                     </phrase> instruction or implicitly terminated when the end (<phrase class="notranslate">
                        <phrase class="script">ENDPROC</phrase>
                     </phrase>, <phrase class="notranslate">
                        <phrase class="script">BACKWARD</phrase>
                     </phrase>, <phrase class="notranslate">
                        <phrase class="script">ERROR</phrase>
                     </phrase>, or <phrase class="notranslate">
                        <phrase class="script">UNDO</phrase>
                     </phrase>) of the procedure is reached.</paragraph>
                  <paragraph>The evaluation of a function must be terminated by a <phrase class="notranslate">
                        <phrase class="script">RETURN</phrase>
                     </phrase> instruction.</paragraph>
                  <paragraph>The execution of a trap routine is explicitly terminated using the <phrase class="notranslate">
                        <phrase class="script">RETURN</phrase>
                     </phrase> instruction or implicitly terminated when the end (<phrase class="notranslate">
                        <phrase class="script">ENDTRAP</phrase>
                     </phrase>, <phrase class="notranslate">
                        <phrase class="script">ERROR</phrase>
                     </phrase>, or <phrase class="notranslate">
                        <phrase class="script">UNDO</phrase>
                     </phrase>) of that trap routine is reached. Execution continues from the point where the interrupt occurred.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Routine declarations<indexterm id="index41">
                        <primary>routine declaration</primary>
                     </indexterm>
                     <indexterm id="index42">
                        <primary>declaration</primary>
                        <secondary>routine</secondary>
                     </indexterm>
                  </title>
                  <paragraph>A routine can contain routine declarations (including parameters), data, a body, a backward handler (only procedures), an error handler, and an undo handler. Routine declarations cannot be nested, that is it is not possible to declare a routine within a routine.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(116555)xx1100000553_Routine_declarations" fileref="url(file:/F:/SkribentaFiles/FileRepository/8/4/9/41)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/8/4/9/41" xsize="391" ysize="189" src="images/xx1100000553_Routine_declarations.jpg"/>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Procedure declaration<indexterm id="index43">
                           <primary>procedure declaration</primary>
                        </indexterm>
                     </title>
                     <paragraph>For example, multiply all elements in a num array by a factor:</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">PROC arrmul( VAR num array{*}, num factor)</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">FOR index FROM 1 TO dim( array, 1 ) DO</phrase>
                           </paragraph>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">array{index} := array{index} * factor;</phrase>
                              </paragraph>
                           </wrapper>
                           <paragraph>
                              <phrase class="notranslate">ENDFOR</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">ENDPROC</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Function declaration<indexterm id="index44">
                           <primary>function declaration</primary>
                        </indexterm>
                     </title>
                     <paragraph>A function can return any data type value, but not an array value.</paragraph>
                     <paragraph>For example, return the length of a vector.</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">FUNC num veclen (pos vector)</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">RETURN Sqrt(Pow(vector.x,2)+Pow(vector.y,2)+Pow(vector.z,2));</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">ENDFUNC</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Trap declaration<indexterm id="index45">
                           <primary>trap declaration</primary>
                        </indexterm>
                     </title>
                     <paragraph>For example, respond to feeder empty interrupt:</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">TRAP feeder_empty</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">wait_feeder;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">RETURN;</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">ENDTRAP</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Procedure call<indexterm id="index46">
                        <primary>procedure call</primary>
                     </indexterm>
                  </title>
                  <paragraph>When a procedure is called, the arguments that correspond to the parameters of the procedure shall be used:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>Mandatory parameters must be specified. They must also be specified in the correct order.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Optional arguments can be omitted.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Conditional arguments can be used to transfer parameters from one routine call to another.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>See <link type="Reference;" xlink:type="simple" xlink:href="#newid-16">Using function calls in expressions</link>.</paragraph>
                  <paragraph>The procedure name may either be statically specified by using an identifier (early binding) or evaluated during runtime from a string type expression (late binding). Even though early binding should be considered to be the normal procedure call form, late binding sometimes provides very efficient and compact code. Late binding is defined by putting percent signs before and after the string that denotes the name of the procedure.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">! early binding</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>TEST </bold>products_id</phrase>
                     </paragraph>
                     <paragraph>
                        <bold>
                           <phrase class="notranslate">CASE 1:</phrase>
                        </bold>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">proc1 x, y, z;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <bold>
                           <phrase class="notranslate">CASE 2:</phrase>
                        </bold>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">proc2 x, y, z;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>CASE 3</bold>:</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">...</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">! same example using late binding</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">% âprocâ + NumToStr(product_id, 0) % x, y, z;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">...</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">! same example again using another variant of late binding</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>VAR</bold> string procname {3} :=[âproc1â, âproc2â, âproc3â];</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">...</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">% procname{product_id} % x, y, z;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">...</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>Note that the late binding is available for procedure calls only, and not for function calls. If a reference is made to an unknown procedure using late binding, the system variable <phrase class="script">ERRNO</phrase> is set to <phrase class="script">ERR_REFUNKPRC</phrase>. If a reference is made to a procedure call error (syntax, not procedure) using late binding, the system variable <phrase class="script">ERRNO</phrase> is set to <phrase class="script">ERR_CALLPROC</phrase>.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Syntax</title>
                  <wrapper class="titled-block">
                     <title>Routine declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;routine declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>[LOCAL]</bold> ( &lt;procedure declaration&gt;</phrase>
                           </paragraph>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">| &lt;function declaration&gt;</phrase>
                              </paragraph>
                              <paragraph>
                                 <phrase class="notranslate">| &lt;trap declaration&gt; )</phrase>
                              </paragraph>
                           </wrapper>
                           <paragraph>
                              <phrase class="notranslate">| &lt;comment&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| <bold>&lt;RDN&gt;</bold>
                              </phrase>
                           </paragraph>
                        </wrapper>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Parameters</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;parameter list&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;first parameter declaration&gt; { &lt;next parameter declaration&gt; }</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;first parameter declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;parameter declaration&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;optional parameter declaration&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| <bold>&lt;PAR&gt;</bold>
                              </phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;next parameter declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">',' &lt;parameter declaration&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;optional parameter declaration&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| ','&lt;optional parameter declaration&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| ','<bold> &lt;PAR&gt;</bold>
                              </phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;optional parameter declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">'\' ( &lt;parameter declaration&gt; | <bold>&lt;ALT&gt;</bold> )</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">{ '|' ( &lt;parameter declaration&gt; | <bold>&lt;ALT&gt; </bold>) }</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;parameter declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">[<bold> VAR | PERS | INOUT</bold>] &lt;data type&gt; </phrase>
                           </paragraph>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">&lt;identifier&gt; [ '{' ( '*' { ',' '*' } ) | <bold>&lt;DIM&gt;</bold>] '}'</phrase>
                              </paragraph>
                           </wrapper>
                           <paragraph>
                              <phrase class="notranslate">| 'switch' &lt;identifier&gt;</phrase>
                           </paragraph>
                        </wrapper>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Procedure declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;procedure declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>PROC </bold>&lt;procedure name&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">'(' [ &lt;parameter list&gt; ] ')'</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;data declaration list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;instruction list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">[ <bold>BACKWARD</bold> &lt;instruction list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">[ <bold>ERROR </bold>&lt;instruction list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">[ <bold>UNDO</bold> &lt;instruction list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <bold>
                                 <phrase class="notranslate">ENDPROC</phrase>
                              </bold>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;procedure name&gt; ::= &lt;identifier&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;data declaration list&gt; ::= {&lt;data declaration&gt;}</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Function declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;function declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>FUNC </bold>&lt;value data type&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;function name&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">'(' [ &lt;parameter list&gt; ] ')'</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;data declaration list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;instruction list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">[ <bold>ERROR</bold> &lt;instruction list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">[ <bold>UNDO </bold>&lt;instruction list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <bold>
                                 <phrase class="notranslate">ENDFUNC</phrase>
                              </bold>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;function name&gt; ::= &lt;identifier&gt;</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Trap routine declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;trap declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>TRAP</bold> &lt;trap name&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;data declaration list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">&lt;instruction list&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">[ ERROR &lt;instruction list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">[ <bold>UNDO </bold>&lt;instruction list&gt; ]</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">ENDTRAP</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;trap name&gt; ::= &lt;identifier&gt;</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Procedure call</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;procedure call&gt; ::= &lt;procedure&gt; [ &lt;procedure argument list&gt; ] ';'</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;procedure&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;identifier&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| '%' &lt;expression&gt; '%'</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;procedure argument list&gt; ::= &lt;first procedure argument&gt; { &lt;procedure argument&gt; }</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;first procedure argument&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;required procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;optional procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;conditional procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| <bold>&lt;ARG&gt;</bold>
                              </phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;procedure argument&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">',' &lt;required procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;optional procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| ',' &lt;optional procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;conditional procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| ',' &lt;conditional procedure argument&gt;</phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| ','<bold> &lt;ARG&gt;</bold>
                              </phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;required procedure argument&gt; ::= [ &lt;identifier&gt; ':=' ] &lt;expression&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;optional procedure argument&gt; ::= '\' &lt;identifier&gt; [ ':=' &lt;expression&gt; ]</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;conditional procedure argument&gt; ::= '\' &lt;identifier&gt; '?' ( &lt;parameter&gt; | <bold>&lt;VAR&gt;</bold> )</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
            </section>
         </section>
         <section>
            <title>Program data<indexterm id="index47">
                  <primary>program data</primary>
               </indexterm>
               <indexterm id="index48">
                  <primary>data</primary>
               </indexterm>
            </title>
            <section>
               <title>Data types<indexterm id="index49">
                     <primary>data types</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>There are three different kinds of data types:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>
                           <indexterm id="index50">
                              <primary>atomic data type</primary>
                           </indexterm>
                           <indexterm id="index51">
                              <primary>data types</primary>
                              <secondary>atomic</secondary>
                           </indexterm>An <italic>atomic</italic> type is atomic in the sense that it is not defined based on any other type and cannot be divided into parts or components, for example <phrase class="script">num</phrase>.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>
                           <indexterm id="index52">
                              <primary>record</primary>
                           </indexterm>
                           <indexterm id="index53">
                              <primary>data types</primary>
                              <secondary>record</secondary>
                           </indexterm>A <italic>record</italic> data type is a composite type with named, ordered components, for example pos. A component may be of an atomic or record type.</paragraph>
                        <paragraph>
                           <indexterm id="index54">
                              <primary>aggregate</primary>
                           </indexterm>
                           <indexterm id="index55">
                              <primary>data types</primary>
                              <secondary>aggregates</secondary>
                           </indexterm>A record value can be expressed using an aggregate representation, for example [ 300, 500, depth ] pos record aggregate value.</paragraph>
                        <paragraph>
                           <indexterm id="index56">
                              <primary>component of a record</primary>
                           </indexterm>
                           <indexterm id="index57">
                              <primary>data types</primary>
                              <secondary>components</secondary>
                           </indexterm>A specific component of a record data can be accessed by using the name of that component, for example pos1.x := 300; assignment of the x-component of pos1.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>An <italic>
                              <phrase class="notranslate">alias</phrase>
                           </italic> data type is by definition equal to another type. <italic>
                              <phrase class="notranslate">Alias</phrase>
                           </italic> types make it possible to classify data objects.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block" id="newid-8">
                  <title>Non-value data types<indexterm id="index58">
                        <primary>non-value data types</primary>
                     </indexterm>
                     <indexterm id="index59">
                        <primary>data types</primary>
                        <secondary>non-value</secondary>
                     </indexterm>
                  </title>
                  <paragraph>Each available data type is either a <italic>value</italic> data type or a <italic>non-value</italic> data type. Simply speaking, a value data type represents some form of value. Non-value data cannot be used in value-oriented operations:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>Initialization</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Assignment (:=)</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Equal to (=) and not equal to (&lt;&gt;) checks</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>TEST instructions</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>IN (access mode) parameters in routine calls</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>Function (return) data types</paragraph>
                     </listitem>
                  </list>
                  <paragraph>
                     <indexterm id="index60">
                        <primary>semi value data types</primary>
                     </indexterm>
                     <indexterm id="index61">
                        <primary>data types</primary>
                        <secondary>semi value</secondary>
                     </indexterm>The signal data types (<phrase class="notranslate">
                        <italic>signalai</italic>
                     </phrase>, <phrase class="notranslate">
                        <italic>signaldi</italic>
                     </phrase>, <phrase class="notranslate">
                        <italic>signalgi</italic>
                     </phrase>,<phrase class="notranslate">
                        <italic>signalao</italic>
                     </phrase>, <phrase class="notranslate">
                        <italic>signaldo</italic>
                     </phrase>, <phrase class="notranslate">
                        <italic>signalgo</italic>
                     </phrase>) are of the data type <italic>semi value</italic>. These data can be used in value-oriented operations, except initialization and assignment.</paragraph>
                  <paragraph>In the description of a data type it is only specified when it is a semi value or a non-value data type.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Equal (alias) data types<indexterm id="index62">
                        <primary>equal data types</primary>
                     </indexterm>
                     <indexterm id="index63">
                        <primary>alias data types</primary>
                     </indexterm>
                     <indexterm id="index64">
                        <primary>data types</primary>
                        <secondary>alias</secondary>
                     </indexterm>
                  </title>
                  <paragraph>An <phrase class="notranslate">
                        <italic>alias</italic>
                     </phrase> data type is defined as being equal to another type. Data with the same data types can be substituted for one another.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">VAR num level; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR dionum high:=1;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">level:= high; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>This is OK since <phrase class="notranslate">
                        <phrase class="script">dionum</phrase>
                     </phrase> is an <italic>alias</italic> data type for <phrase class="notranslate">
                        <phrase class="script">num</phrase>
                     </phrase>.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Syntax</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;type definition&gt;::=</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>[LOCAL] </bold>( &lt;record definition&gt;</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">| &lt;alias definition&gt; )</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">| &lt;comment&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">|<bold> &lt;TDN&gt;</bold>
                        </phrase>
                     </paragraph>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">&lt;record definition&gt;::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">
                              <bold>RECORD</bold> &lt;identifier&gt;</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;record component list&gt;</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <bold>
                              <phrase class="notranslate">ENDRECORD</phrase>
                           </bold>
                        </paragraph>
                     </wrapper>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">&lt;record component list&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;record component definition&gt; |</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">&lt;record component definition&gt; &lt;record component list&gt;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">&lt;record component definition&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;data type&gt; &lt;record component name&gt; ';'</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">&lt;alias definition&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">
                              <bold>ALIAS </bold>&lt;data type&gt; &lt;identifier&gt; ';'</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">&lt;data type&gt; ::= &lt;identifier&gt;</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </section>
            <section>
               <title>Data declarations<indexterm id="index65">
                     <primary>data</primary>
                     <secondary>declarations</secondary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>There are three kinds of data:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>
                           <indexterm id="index66">
                              <primary>variable</primary>
                           </indexterm>
                           <indexterm id="index67">
                              <primary>data</primary>
                              <secondary>variable</secondary>
                           </indexterm>A <italic>variable</italic> can be assigned a new value during program execution.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>
                           <indexterm id="index68">
                              <primary>persistent</primary>
                           </indexterm>
                           <indexterm id="index69">
                              <primary>data</primary>
                              <secondary>persistent</secondary>
                           </indexterm>A <italic>persistent</italic> can be described as a persistent variable. This is accomplished by letting an update of the value of a persistent automatically cause the initialization value of the persistent declaration to be updated. (When a program is saved the initialization value of any persistent declaration reflects the current value of the persistent.)</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>
                           <indexterm id="index70">
                              <primary>constant</primary>
                           </indexterm>
                           <indexterm id="index71">
                              <primary>data</primary>
                              <secondary>constant</secondary>
                           </indexterm>A <italic>constant</italic> represents a static value and cannot be assigned a new value.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>A data declaration introduces data by associating a name (identifier) with a data type. Except for predefined data and loop variables, all data used must be declared.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Data scope<indexterm id="index72">
                        <primary>scope</primary>
                        <secondary>data</secondary>
                     </indexterm>
                     <indexterm id="index73">
                        <primary>global</primary>
                        <secondary>data</secondary>
                     </indexterm>
                     <indexterm id="index74">
                        <primary>local</primary>
                        <secondary>data</secondary>
                     </indexterm>
                     <indexterm id="index75">
                        <primary>data</primary>
                        <secondary>scope</secondary>
                     </indexterm>
                  </title>
                  <paragraph>The scope of data denotes the area in which the data is visible. The optional local directive of a data declaration classifies data as local (within the module), otherwise it is global. Note that the local directive may only be used at module level, not inside a routine.</paragraph>
                  <wrapper class="titled-block">
                     <title>Example</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">LOCAL VAR num local_variable; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">VAR num global_variable; </phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Program data</title>
                     <paragraph>
                        <indexterm id="index76">
                           <primary>program data</primary>
                        </indexterm>
                        <indexterm id="index77">
                           <primary>data</primary>
                           <secondary>program</secondary>
                        </indexterm>Data declared outside a routine is called <italic>program data</italic>. The following scope rules apply to program data:</paragraph>
                     <list class="list-unordered">
                        <listitem>
                           <paragraph>The scope of predefined or global program data may include any module.</paragraph>
                        </listitem>
                        <listitem>
                           <paragraph>The scope of local program data comprises the module in which it is contained.</paragraph>
                        </listitem>
                        <listitem>
                           <paragraph>Within its scope, local program data hides any global data or routine with the same name (including instructions and predefined routines and data).</paragraph>
                        </listitem>
                     </list>
                     <paragraph>Program data may not have the same name as other data or a routine in the same module. Global program data may not have the same name as other global data or a routine in another module.</paragraph>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Routine data</title>
                     <paragraph>
                        <indexterm id="index78">
                           <primary>routine data</primary>
                        </indexterm>
                        <indexterm id="index79">
                           <primary>data</primary>
                           <secondary>routine</secondary>
                        </indexterm>Data declared inside a routine is called <italic>routine data</italic>. Note that the parameters of a routine are also handled as routine data. The following scope rules apply to routine data:</paragraph>
                     <list class="list-unordered">
                        <listitem>
                           <paragraph>The scope of routine data comprises the routine in which it is contained.</paragraph>
                        </listitem>
                        <listitem>
                           <paragraph>Within its scope, routine data hides any other routine or data with the same name.</paragraph>
                        </listitem>
                     </list>
                     <paragraph>Routine data may not have the same name as other data or a label in the same routine.</paragraph>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Example</title>
                     <paragraph>In this example, the following data can be called from routine e:</paragraph>
                     <list class="list-unordered">
                        <listitem>
                           <paragraph>Module1: Data c, d.</paragraph>
                        </listitem>
                        <listitem>
                           <paragraph>Module2: Data a, f, g, e1.</paragraph>
                        </listitem>
                     </list>
                     <paragraph>The following data can be called from routine h:</paragraph>
                     <list class="list-unordered">
                        <listitem>
                           <paragraph>Module1: Data d.</paragraph>
                        </listitem>
                        <listitem>
                           <paragraph>Module2: Data a, f, g, h1, c.</paragraph>
                        </listitem>
                     </list>
                     <wrapper class="figure">
                        <image alt="id(116579)xx1100000554_Data_scope" fileref="url(file:/F:/SkribentaFiles/FileRepository/8/4/9/95)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/8/4/9/95" xsize="276" ysize="183" src="images/xx1100000554_Data_scope.jpg"/>
                     </wrapper>
                  </wrapper>
               </wrapper>
               <wrapper class="block" id="newid-9">
                  <title>Variable declaration<indexterm id="index80">
                        <primary>variables</primary>
                     </indexterm>
                     <indexterm id="index81">
                        <primary>declarations</primary>
                        <secondary>variables</secondary>
                     </indexterm>
                     <indexterm id="index82">
                        <primary>
                           <phrase class="notranslate">VAR</phrase>
                        </primary>
                     </indexterm>
                  </title>
                  <paragraph>A variable is introduced by a variable declaration and can be declared as global (no prescript needed) or local.</paragraph>
                  <paragraph>Example:</paragraph>
                  <paragraph>
                     <phrase class="notranslate">
                        <phrase class="script">MainModule</phrase>
                     </phrase> is loaded into task <phrase class="notranslate">
                        <phrase class="script">T_ROB1</phrase>
                     </phrase>.</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>MODULE MainModule</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>! The scope of this variable is within T_ROB1, i.e. it can be </paragraph>
                        <paragraph>! accessed from any module in T_ROB1.</paragraph>
                        <paragraph>VAR num global_var := 123;</paragraph>
                        <paragraph/>
                        <paragraph>! The scope of this variable is within this module. </paragraph>
                        <paragraph>LOCAL VAR num local_var := 789;</paragraph>
                        <paragraph/>
                        <paragraph>PROC main()</paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>! The scope of this variable is within this procedure.</paragraph>
                           <paragraph>VAR num local_var2 := 321;</paragraph>
                           <paragraph>...</paragraph>
                           <paragraph/>
                        </wrapper>
                        <paragraph>ENDPROC</paragraph>
                     </wrapper>
                     <paragraph>ENDMODULE</paragraph>
                  </wrapper>
                  <paragraph>A variable declared in a module that is installed shared can be declared with the prescript <phrase class="notranslate">
                        <phrase class="script">TASK</phrase>
                     </phrase>, see <phrase class="variable" type="Reference.TRM.SystemParameters">
                        <phrase>
                           <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                           <paragraph class="abb.maintitle">System parameters</paragraph>
                        </phrase>
                     </phrase>, topic <italic>
                        <phrase class="notranslate">Controller</phrase>
                     </italic>, type <italic>
                        <phrase class="notranslate">Automatic Loading of Modules</phrase>
                     </italic>. Such a variable will be accessible from all tasks but will have a unique value for each task. For example changing the variables value from one task will have no affect for other tasks.</paragraph>
                  <paragraph>Example:</paragraph>
                  <paragraph>
                     <phrase class="notranslate">
                        <phrase class="script">SharedModule</phrase>
                     </phrase> is installed shared in the system.</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>MODULE SharedModule(SYSMODULE)</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>! This variable is accessible from all tasks, but has a</paragraph>
                        <paragraph>! unique value for each task.</paragraph>
                        <paragraph>TASK VAR num global_var := 123;</paragraph>
                        <paragraph>...</paragraph>
                     </wrapper>
                     <paragraph>ENDMODULE</paragraph>
                  </wrapper>
                  <paragraph>Using the <phrase class="notranslate">
                        <phrase class="script">TASK</phrase>
                     </phrase> prescript in a module that is not installed shared will have no effect.</paragraph>
                  <paragraph>
                     <indexterm id="index83">
                        <primary>arrays</primary>
                        <secondary>variables</secondary>
                     </indexterm>
                     <indexterm id="index84">
                        <primary>variables</primary>
                        <secondary>arrays</secondary>
                     </indexterm>Variables of any type can be given an array (of degree 1, 2 or 3) format by adding dimensional information to the declaration. A dimension is an integer value greater than 0.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">VAR pos pallet{14, 18}; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>Variables with value types may be initialized (given an initial value). The expression used to initialize a program variable must be constant. Note that the value of an uninitialized variable may be used, but it is undefined, that is set to zero if it is a <phrase class="notranslate">num</phrase>. A string is set to empty string, and a boolean is set to <phrase class="notranslate">
                        <phrase class="script">FALSE</phrase>
                     </phrase>.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">VAR string author_name := "John Smith";</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR pos start := [100, 100, 50]; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR num maxno{10} := [1, 2, 3, 9, 8, 7, 6, 5, 4, 3]; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>The initialization value is set when:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>the program/module is loaded.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>the program pointer is reset, for example program pointer to main.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block" id="newid-10">
                  <title>Persistent declaration<indexterm id="index85">
                        <primary>persistents</primary>
                     </indexterm>
                     <indexterm id="index86">
                        <primary>declarations</primary>
                        <secondary>persistents</secondary>
                     </indexterm>
                     <indexterm id="index87">
                        <primary>
                           <phrase class="notranslate">PERS</phrase>
                        </primary>
                     </indexterm>
                  </title>
                  <paragraph>Persistents can only be declared at module level, not inside a routine. Persistents can be declared as system global (no prescript needed), task global, or local.</paragraph>
                  <paragraph>Example:</paragraph>
                  <paragraph>The following module is loaded into both <phrase class="notranslate">
                        <phrase class="script">T_ROB1</phrase>
                     </phrase> and <phrase class="notranslate">
                        <phrase class="script">T_ROB2</phrase>
                     </phrase>.</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>MODULE MainModule</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>! The scope of this persistent is within the task itâs been</paragraph>
                        <paragraph>! loaded to. But, it will share the current value with any</paragraph>
                        <paragraph>! other task declaring the same persistent. I.e. changing the</paragraph>
                        <paragraph>! value in T_ROB1 will automatically change the value in T_ROB2.</paragraph>
                        <paragraph>PERS num globalpers := 123;</paragraph>
                        <paragraph/>
                        <paragraph>! The scope of this persistent is within the task this</paragraph>
                        <paragraph>! module has been loaded to.</paragraph>
                        <paragraph>TASK PERS num taskpers := 456;</paragraph>
                        <paragraph/>
                        <paragraph>! The scope of this persistent is within this module.</paragraph>
                        <paragraph>LOCAL PERS num localpers := 789;</paragraph>
                        <paragraph>...</paragraph>
                     </wrapper>
                     <paragraph>ENDMODULE</paragraph>
                  </wrapper>
                  <paragraph>Local and task global persistents must be given an initialization value. For system global persistents the initial value may be omitted. The initialization value must be a single value (without data references or operands), or a single aggregate with members which, in turn, are single values or single aggregates.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PERS pos refpnt := [100.23, 778.55, 1183.98]; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>Persistents of any type can be given an array (of degree 1, 2 or 3) format by adding dimensional information to the declaration. A dimension is an integer value greater than 0.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PERS pos pallet{14, 18} := [...]; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>Note that if the current value of a persistent is changed, this causes the initialization value (if not omitted) of the persistent declaration to be updated. However, due to performance issues this update will not take place during program execution. The initial value will be updated when the module is saved (Backup, Save Module, Save Program). It will also be updated when editing program. The FlexPendant will always show the current value of the persistent.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PERS num reg1 := 0;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">... </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">reg1 := 5; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>After module save, if the code was executed, the saved module looks like this:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PERS num reg1 := 5; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">... </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">reg1 := 5; </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Constant declaration<indexterm id="index88">
                        <primary>constants</primary>
                     </indexterm>
                     <indexterm id="index89">
                        <primary>declarations</primary>
                        <secondary>constants</secondary>
                     </indexterm>
                     <indexterm id="index90">
                        <primary>
                           <phrase class="notranslate">CONST</phrase>
                        </primary>
                     </indexterm>
                  </title>
                  <paragraph>A constant is introduced by a constant declaration. The value of a constant cannot be modified.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">CONST num pi := 3.141592654; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>A constant of any type can be given an array (of degree 1, 2 or 3) format by adding dimensional information to the declaration. A dimension is an integer value greater than 0.</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">CONST pos seq{3} := [[614, 778, 1020], [914, 998, 1021], [814, 998, 1022]];</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Initiating data<indexterm id="index91">
                        <primary>initiating data</primary>
                     </indexterm>
                     <indexterm id="index92">
                        <primary>data</primary>
                        <secondary>initiating</secondary>
                     </indexterm>
                  </title>
                  <paragraph>
                     <indexterm id="index93">
                        <primary>constants</primary>
                        <secondary>initialization values</secondary>
                     </indexterm>
                     <indexterm id="index94">
                        <primary>variables</primary>
                        <secondary>initialization values</secondary>
                     </indexterm>The initialization value for a constant or variable can be a constant expression.</paragraph>
                  <paragraph>
                     <indexterm id="index95">
                        <primary>persistents</primary>
                        <secondary>initialization values</secondary>
                     </indexterm>The initialization value for a persistent can only be a literal expression.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">CONST num a := 2; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">CONST num b := 3; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">!Correct syntax </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">CONST num ab := a + b;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR num a_b := a + b;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS num a__b := 5; !</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">!Faulty syntax </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS num a__b := a + b; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>In the table below, you can see what is happening in various activities such as restart, new program, program start etc.</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>System event affects</paragraph>
                           </td>
                           <td>
                              <paragraph>Power on (Restart)</paragraph>
                           </td>
                           <td>
                              <paragraph>Open, Close or New program</paragraph>
                           </td>
                           <td>
                              <paragraph>Start program (Move PP to main)</paragraph>
                           </td>
                           <td>
                              <paragraph>Start program (Move PP to Routine)</paragraph>
                           </td>
                           <td>
                              <paragraph>Start program (Move PP to cursor)</paragraph>
                           </td>
                           <td>
                              <paragraph>Start program (Call Routine)</paragraph>
                           </td>
                           <td>
                              <paragraph>Start program (after cycle)</paragraph>
                           </td>
                           <td>
                              <paragraph>Start program (after stop)</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>Constant</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Init</paragraph>
                           </td>
                           <td>
                              <paragraph>Init</paragraph>
                           </td>
                           <td>
                              <paragraph>Init</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Variable</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Init</paragraph>
                           </td>
                           <td>
                              <paragraph>Init</paragraph>
                           </td>
                           <td>
                              <paragraph>Init</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Persistent</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Init<annotation class="table-note">
                                    <title/>
                                    <paragraph>Persistents without initial value is only initialized if not already declared.</paragraph>
                                 </annotation> /</paragraph>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Commanded interrupts</paragraph>
                           </td>
                           <td>
                              <paragraph>Re-ordered</paragraph>
                           </td>
                           <td>
                              <paragraph>Disappears</paragraph>
                           </td>
                           <td>
                              <paragraph>Disappears</paragraph>
                           </td>
                           <td>
                              <paragraph>Disappears</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Startup routine <phrase class="notranslate">SYS_RESET</phrase> (with motion settings)</paragraph>
                           </td>
                           <td>
                              <paragraph>Not run</paragraph>
                           </td>
                           <td>
                              <paragraph>Run<annotation class="table-note">
                                    <title/>
                                    <paragraph>Generates an error when there is a semantic error in the actual task program.</paragraph>
                                 </annotation>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>Run</paragraph>
                           </td>
                           <td>
                              <paragraph>Not run</paragraph>
                           </td>
                           <td>
                              <paragraph>Not run</paragraph>
                           </td>
                           <td>
                              <paragraph>Not run</paragraph>
                           </td>
                           <td>
                              <paragraph>Not run</paragraph>
                           </td>
                           <td>
                              <paragraph>Not run</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Files</paragraph>
                           </td>
                           <td>
                              <paragraph>Closes</paragraph>
                           </td>
                           <td>
                              <paragraph>Closes</paragraph>
                           </td>
                           <td>
                              <paragraph>Closes</paragraph>
                           </td>
                           <td>
                              <paragraph>Closes</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Path</paragraph>
                           </td>
                           <td>
                              <paragraph>Recreated at power on</paragraph>
                           </td>
                           <td>
                              <paragraph>Disappears</paragraph>
                           </td>
                           <td>
                              <paragraph>Disappears</paragraph>
                           </td>
                           <td>
                              <paragraph>Disappears</paragraph>
                           </td>
                           <td>
                              <paragraph>Disappears</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                           <td>
                              <paragraph>Unchanged</paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
               <wrapper class="block">
                  <title>Storage class<indexterm id="index96">
                        <primary>data</primary>
                        <secondary>storage class</secondary>
                     </indexterm>
                  </title>
                  <paragraph>The <italic>storage class</italic> of a data object determines <bold>when</bold> the system allocates and de-allocates memory for the data object. The storage class of a data object is determined by the kind of data object and the context of its declaration and can be either <italic>static</italic> or <italic>volatile</italic>.</paragraph>
                  <paragraph>Constants, persistents, and module variables are static, that is they have the same storage during the lifetime of a task. This means that any value assigned to an persistent or a module variable, always remains unchanged until the next assignment.</paragraph>
                  <paragraph>Routine variables are volatile. The memory needed to store the value of a volatile variable is allocated first upon the call of the routine in which the declaration of the variable is contained. The memory is later de-allocated at the point of the return to the caller of the routine. This means that the value of a routine variable is always undefined before the call of the routine and is always lost (becomes undefined) at the end of the execution of the routine.</paragraph>
                  <paragraph>In a chain of recursive routine calls (a routine calling itself directly or indirectly) each instance of the routine receives its own memory location for the same routine variable - a number of <italic>instances</italic> of the same variable are created.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Syntax</title>
                  <wrapper class="titled-block">
                     <title>Data declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;data declaration&gt; ::= </phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">[<bold>LOCAL</bold>] ( &lt;variable declaration&gt; </phrase>
                           </paragraph>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">| &lt;persistent declaration&gt; </phrase>
                              </paragraph>
                              <paragraph>
                                 <phrase class="notranslate">| &lt;constant declaration&gt; ) </phrase>
                              </paragraph>
                           </wrapper>
                           <paragraph>
                              <phrase class="notranslate">| <bold>TASK</bold> &lt;persistent declaration&gt; </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;comment&gt; </phrase>
                           </paragraph>
                           <paragraph>
                              <phrase class="notranslate">| &lt;<bold>DDN</bold>&gt; </phrase>
                           </paragraph>
                        </wrapper>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Variable declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;variable declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>VAR</bold> &lt;data type&gt; &lt;variable definition&gt; ';'</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;variable definition&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;identifier&gt; [ '{' &lt;dim&gt; { ',' &lt;dim&gt; } '}' ]</phrase>
                           </paragraph>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">[ ':=' &lt;constant expression&gt; ]</phrase>
                              </paragraph>
                           </wrapper>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;dim&gt; ::= &lt;constant expression&gt;</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Persistent declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;persistent declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>PERS</bold> &lt;data type&gt; &lt;persistent definition&gt; ';'</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;persistent definition&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;identifier&gt; [ '{' &lt;dim&gt; { ',' &lt;dim&gt; } '}' ]</phrase>
                           </paragraph>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">[ ':=' &lt;literal expression&gt; ]</phrase>
                              </paragraph>
                           </wrapper>
                        </wrapper>
                     </wrapper>
                     <wrapper class="note" fileref="url(file:/E:/Skribenta/server/temp/file-7166463227813206592-ix-43622-xx010000.eps.pdf)">
                        <paragraph>The literal expression may only be omitted for system global persistents.</paragraph>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Constant declaration</title>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;constant declaration&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">
                                 <bold>CONST</bold> &lt;data type&gt; &lt;constant definition&gt; ';'</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;constant definition&gt; ::=</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">&lt;identifier&gt; [ '{' &lt;dim&gt; { ',' &lt;dim&gt; } '}' ]</phrase>
                           </paragraph>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">':=' &lt;constant expression&gt;</phrase>
                              </paragraph>
                           </wrapper>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">&lt;dim&gt; ::= &lt;constant expression&gt;</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
            </section>
         </section>
         <section>
            <title>Expressions</title>
            <section>
               <title>Types of expressions</title>
               <wrapper class="block">
                  <title>Description</title>
                  <paragraph>An expression specifies the evaluation of a value. It can be used, for example:</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>in an assignment instruction</paragraph>
                           </td>
                           <td>
                              <paragraph>for example: <phrase class="notranslate">
                                    <phrase class="script">a:=3*b/c;</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>as a condition in an <phrase class="notranslate">IF</phrase> instruction</paragraph>
                           </td>
                           <td>
                              <paragraph>for example: <phrase class="notranslate">
                                    <phrase class="script">IF a&gt;=3 THEN ...</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>as an argument in an instruction</paragraph>
                           </td>
                           <td>
                              <paragraph>for example: <phrase class="notranslate">
                                    <phrase class="script">WaitTime time;</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>as an argument in a function call</paragraph>
                           </td>
                           <td>
                              <paragraph>for example: <phrase class="notranslate">
                                    <phrase class="script">a:=Abs(3*b);</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
               <wrapper class="block" id="newid-11">
                  <title>Arithmetic expressions<indexterm id="index97">
                        <primary>arithmetic expressions</primary>
                     </indexterm>
                     <indexterm id="index98">
                        <primary>expressions</primary>
                        <secondary>arithmetic</secondary>
                     </indexterm>
                  </title>
                  <paragraph>An arithmetic expression is used to evaluate a numeric value.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">2*pi*radius </phrase>
                     </paragraph>
                  </wrapper>
                  <table>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Operator</paragraph>
                           </td>
                           <td>
                              <paragraph>Operation</paragraph>
                           </td>
                           <td>
                              <paragraph>Operand types</paragraph>
                           </td>
                           <td>
                              <paragraph>Result type</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">+</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>addition</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num + num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num</phrase> 
                                 <annotation class="table-note" id="newid-12">
                                    <title/>
                                    <paragraph>Preserves integer (exact) representation as long as operands and result are kept within the integer sub-domain of the numerical type.</paragraph>
                                 </annotation>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">+</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>addition</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum + num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">+</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>unary plus; keep sign</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">+num</phrase> or <phrase class="notranslate">+dnum</phrase> or <phrase class="notranslate">+pos</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>same <annotation class="table-note" id="newid-13">
                                    <title/>
                                    <paragraph>The result receives the same type as the operand. If the operand has an alias data type, the result receives the alias "base" type (<phrase class="notranslate">
                                          <phrase class="script">num</phrase>
                                       </phrase>, <phrase class="notranslate">
                                          <phrase class="script">dnum</phrase>
                                       </phrase> or <phrase class="notranslate">
                                          <phrase class="script">pos</phrase>
                                       </phrase>).</paragraph>
                                 </annotation>
                                 <phrase class="superscript">, <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">+</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>vector addition</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos + pos</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">-</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>subtraction</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num - num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">-</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>subtraction</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum - dnum</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">-</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>unary minus; change sign</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">-num</phrase> or <phrase class="notranslate">-pos</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>same <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-13">
                                       <reference class="object-reference"/>
                                    </link>, <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">-</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>unary minus; change sign</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">-num</phrase> or <phrase class="notranslate">-dnum</phrase> or <phrase class="notranslate">-pos</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>same <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-13">
                                       <reference class="object-reference"/>
                                    </link>, <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">-</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>vector subtraction</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos - pos</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">*</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>multiplication</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num * num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">*</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>multiplication</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum * dnum</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-12">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">*</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>scalar vector multiplication</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num * pos</phrase> or <phrase class="notranslate">pos * num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">*</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>vector product</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos * pos</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">*</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>linking of rotations</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">orient * orient</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">orient</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">/</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>division</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num / num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">/</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>division</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum / dnum</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">/</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>scalar vector division</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos / num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">pos</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">DIV</phrase> 
                                 <annotation class="table-note" id="newid-14">
                                    <title/>
                                    <paragraph>Integer operations, for example <phrase class="notranslate">14 DIV 4=3</phrase>, <phrase class="notranslate">14 MOD 4=2</phrase>. (non-integer operands are illegal.)</paragraph>
                                 </annotation>
                                 <indexterm id="index99">
                                    <primary>
                                       <phrase class="notranslate">DIV</phrase>
                                    </primary>
                                 </indexterm>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>integer division</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num DIV num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">DIV</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-14">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>integer division</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum DIV dnum</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">MOD</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-14">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                                 <indexterm id="index100">
                                    <primary>
                                       <phrase class="notranslate">MOD</phrase>
                                    </primary>
                                 </indexterm>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>integer modulo; remainder</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num MOD num</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">num</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">MOD</phrase> 
                                 <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-14">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>integer modulo; remainder</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum MOD dnum</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">dnum</phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
               <wrapper class="block">
                  <title>Logical expressions<indexterm id="index101">
                        <primary>logical expressions</primary>
                     </indexterm>
                     <indexterm id="index102">
                        <primary>expressions</primary>
                        <secondary>logical</secondary>
                     </indexterm>
                  </title>
                  <paragraph>A logical expression is used to evaluate a logical value (<phrase class="notranslate">TRUE</phrase>/<phrase class="notranslate">FALSE</phrase>).</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">a&gt;5 AND b=3 </phrase>
                     </paragraph>
                  </wrapper>
                  <table>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Operator</paragraph>
                           </td>
                           <td>
                              <paragraph>Operation</paragraph>
                           </td>
                           <td>
                              <paragraph>Operand types</paragraph>
                           </td>
                           <td>
                              <paragraph>Result type</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>less than</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num &lt; num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>less than</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">dnum &lt; dnum</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;=</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>less than or equal to</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num &lt;= num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;=</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>less than or equal to</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">dnum &lt;= dnum</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">=</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>equal to</paragraph>
                           </td>
                           <td>
                              <paragraph id="newid-15">any <annotation class="table-note">
                                    <title/>
                                    <paragraph>Only value data types. Operands must have equal types.</paragraph>
                                 </annotation> 
                                 <phrase class="notranslate">=</phrase> any <link xlink:type="simple" xlink:href="#newid-15">
                                    <reference class="object-reference"/>
                                 </link>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&gt;=</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>greater than or equal to</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num &gt;= num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&gt;=</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>greater than or equal to</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">dnum &gt;= dnum</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>greater than</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">num &gt; num</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>greater than or equal to</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">dnum &gt; dnum</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;&gt;</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>not equal to</paragraph>
                           </td>
                           <td>
                              <paragraph>any <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-15">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase> 
                                 <phrase class="notranslate">&lt;&gt;</phrase> any <phrase class="superscript">
                                    <link xlink:type="simple" xlink:href="#newid-15">
                                       <reference class="object-reference"/>
                                    </link>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">AND</phrase>
                                 </phrase>
                                 <indexterm id="index103">
                                    <primary>
                                       <phrase class="notranslate">AND</phrase>
                                    </primary>
                                 </indexterm>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>and</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool AND bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">XOR</phrase>
                                 </phrase>
                                 <indexterm id="index104">
                                    <primary>
                                       <phrase class="notranslate">XOR</phrase>
                                    </primary>
                                 </indexterm>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>exclusive or</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool XOR bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">OR</phrase>
                                 </phrase>
                                 <indexterm id="index105">
                                    <primary>
                                       <phrase class="notranslate">OR</phrase>
                                    </primary>
                                 </indexterm>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>or</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool OR bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">NOT</phrase>
                                 </phrase>
                                 <indexterm id="index106">
                                    <primary>
                                       <phrase class="notranslate">NOT</phrase>
                                    </primary>
                                 </indexterm>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>unary not; negation</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">NOT bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">bool</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
                  <wrapper class="figure">
                     <image alt="id(116585)xx1100000555_logicalexpressions" fileref="url(file:/F:/SkribentaFiles/FileRepository/9/4/9/70)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/9/4/9/70" xsize="203" ysize="166" src="images/xx1100000555_logicalexpressions.jpg"/>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>String expressions<indexterm id="index107">
                        <primary>string expressions</primary>
                     </indexterm>
                     <indexterm id="index108">
                        <primary>expressions</primary>
                        <secondary>string</secondary>
                     </indexterm>
                  </title>
                  <paragraph>A string expression is used to carry out operations on strings.</paragraph>
                  <paragraph>Example: <phrase class="notranslate">"IN" + "PUT"</phrase> gives the result <phrase class="notranslate">"INPUT"</phrase>
                  </paragraph>
                  <table>
                     <col/>
                     <col/>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>
                                 <bold>Operator</bold>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <bold>Operation</bold>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <bold>Operand types</bold>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <bold>Result type</bold>
                              </paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">+</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>string concatenation</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">string + string</phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">string</phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
            </section>
            <section>
               <title>Using data in expressions<indexterm id="index109">
                     <primary>data</primary>
                     <secondary>used in expressions</secondary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>An entire variable, persistent or constant can be a part of an expression.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">2*pi*radius</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Arrays<indexterm id="index110">
                        <primary>arrays</primary>
                        <secondary>expressions</secondary>
                     </indexterm>
                  </title>
                  <paragraph>A variable, persistent or constant declared as an array can be referenced to the whole array or a single element.</paragraph>
                  <paragraph>An array element is referenced using the index number of the element. The index is an integer value greater than 0 and may not violate the declared dimension. Index value 1 selects the first element. The number of elements in the index list must fit the declared degree (1, 2 or 3) of the array.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">VAR num row{3}; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR num column{3}; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR num value; </phrase>
                     </paragraph>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">! get one element from the array</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">value := column{3};</phrase>
                     </paragraph>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">! get all elements in the array</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">row := column;</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Records<indexterm id="index111">
                        <primary>records</primary>
                        <secondary>expressions</secondary>
                     </indexterm>
                  </title>
                  <paragraph>A variable, persistent or constant declared as a record can be referenced to the whole record or a single component.</paragraph>
                  <paragraph>A record component is referenced using the component name.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">VAR pos home; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR pos pos1; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR num yvalue; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">.. </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">! get the Y component only</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">yvalue := home.y;</phrase>
                     </paragraph>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">! get the whole position</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">pos1 := home; </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </section>
            <section>
               <title>Using aggregates in expressions<indexterm id="index112">
                     <primary>aggregates</primary>
                     <secondary>expressions</secondary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>An aggregate is used for record or array values.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">! pos record aggregate</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">pos := [x, y, 2*x];</phrase>
                     </paragraph>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">! pos array aggregate </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">posarr := [[0, 0, 100], [0,0,z]]; </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Prerequisites</title>
                  <paragraph>It must be possible to determine the data type of an aggregate the context. The data type of each aggregate member must be equal to the type of the corresponding member of the determined type.</paragraph>
                  <paragraph>Example (aggregate type pos - determined by p1):</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">VAR pos pl;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">p1 :=[1, -100, 12];</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>Example of what is <bold>not</bold> allowed (not allowed since the data type of neither of the aggregates can be determined by the context):</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">VAR pos pl;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">IF [1, -100, 12] = [a,b,b,] THEN</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </section>
            <section id="newid-16">
               <title>Using function calls in expressions<indexterm id="index113">
                     <primary>function calls</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Introduction</title>
                  <paragraph>A function call initiates the evaluation of a specific function and receives the value returned by the function.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">Sin(angle)</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Arguments</title>
                  <paragraph>The arguments of a function call are used to transfer data to (and possibly from) the called function. The data type of an argument must be equal to the type of the corresponding parameter of the function. Optional arguments may be omitted but the order of the (present) arguments must be the same as the order of the formal parameters. In addition, two or more optional arguments may be declared to exclude each other, in which case, only one of them may be present in the argument list.</paragraph>
                  <paragraph>A required (compulsory) argument is separated from the preceding argument by a comma (,). The formal parameter name may be included or omitted.</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Example</paragraph>
                           </td>
                           <td>
                              <paragraph>Description</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <wrapper class="preformatted" xml:lang="en">
                                 <paragraph>
                                    <phrase class="notranslate">Polar(3.937, 0.785398)</phrase>
                                 </paragraph>
                                 <paragraph>
                                    <phrase class="notranslate">Polar(Dist:=3.937, Angle:=0.785398)</phrase>
                                 </paragraph>
                              </wrapper>
                           </td>
                           <td>
                              <paragraph>Two required arguments, without or with the parameter name.</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <wrapper class="preformatted" xml:lang="en">
                                 <paragraph>
                                    <phrase class="notranslate">Cosine(45)</phrase>
                                 </paragraph>
                                 <paragraph>
                                    <phrase class="notranslate">Cosine(0.785398\Rad)</phrase>
                                 </paragraph>
                              </wrapper>
                           </td>
                           <td>
                              <paragraph>One required argument, without or with one switch.</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <wrapper class="preformatted" xml:lang="en">
                                 <paragraph>
                                    <phrase class="notranslate">Dist(p2)</phrase>
                                 </paragraph>
                                 <paragraph>
                                    <phrase class="notranslate">Dist(\distance:=pos1, p2)</phrase>
                                 </paragraph>
                              </wrapper>
                           </td>
                           <td>
                              <paragraph>One required argument, without or with one optional argument.</paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
                  <paragraph>An optional argument must be preceded by a backslash (\) and the formal parameter name. A switch type argument is somewhat special; it may not include any argument expression. Instead, such an argument can only be either <italic>present</italic> or <italic>not present</italic>.</paragraph>
                  <paragraph>
                     <indexterm id="index114">
                        <primary>conditional argument</primary>
                     </indexterm>
                     <indexterm id="index115">
                        <primary>argument</primary>
                        <secondary>conditional</secondary>
                     </indexterm>Conditional arguments are used to support smooth propagation of optional arguments through chains of routine calls. A conditional argument is considered to be present if the specified optional parameter (of the calling function) is present, otherwise it is simply considered to be omitted. Note that the specified parameter must be optional.</paragraph>
                  <paragraph>Example:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC Read_from_file (iodev File \num Maxtime) </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">.. </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">character:=ReadBin (File \Time?Maxtime); </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">! Max. time is only used if specified when calling the routine </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">! Read_from_file </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">.. </phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Parameters</title>
                  <paragraph>The parameter list of a function assigns an access mode to each parameter. The access mode can be either <phrase class="notranslate">
                        <italic>in</italic>
                     </phrase>, <phrase class="notranslate">
                        <italic>inout</italic>
                     </phrase>, <phrase class="notranslate">
                        <italic>var</italic>
                     </phrase>, or <phrase class="notranslate">
                        <italic>pers</italic>
                     </phrase>:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>An <phrase class="notranslate">
                              <phrase class="script">IN</phrase>
                           </phrase> parameter (default) allows the argument to be any expression. The called function views the parameter as a constant.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>An <phrase class="notranslate">
                              <phrase class="script">INOUT</phrase>
                           </phrase> parameter requires the corresponding argument to be a variable (entire, array element or record component) or an entire persistent. The called function gains full (read/write) access to the argument.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>A <phrase class="notranslate">
                              <phrase class="script">VAR</phrase>
                           </phrase> parameter requires the corresponding argument to be a variable (entire, array element or record component). The called function gains full (read/write) access to the argument.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>A <phrase class="notranslate">
                              <phrase class="script">PERS</phrase>
                           </phrase> parameter requires the corresponding argument to be an entire persistent. The called function gains full (read/update) access to the argument.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
            </section>
            <section>
               <title>Priority between operators<indexterm id="index116">
                     <primary>operator priority</primary>
                  </indexterm>
                  <indexterm id="index117">
                     <primary>priority</primary>
                     <secondary>operators</secondary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Priority rules</title>
                  <paragraph>The relative priority of the operators determines the order in which they are evaluated. Parentheses provide a means to override operator priority. The rules below imply the following operator priority:</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Priority</paragraph>
                           </td>
                           <td>
                              <paragraph>Operators</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>Highest</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">* / DIV MOD</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td/>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">+ -</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td/>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">&lt;  &gt;  &lt;&gt;  &lt;=  &gt;=  =</phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td/>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">AND</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Lowest</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">XOR OR NOT</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
                  <paragraph>An operator with high priority is evaluated prior to an operator with low priority. Operators of the same priority are evaluated from left to right.</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td>
                              <paragraph>Example expression</paragraph>
                           </td>
                           <td>
                              <paragraph>Evaluation order</paragraph>
                           </td>
                           <td>
                              <paragraph>Comment</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">a + b + c</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">(a + b) + c</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>Left to right rule</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">a + b * c</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">a + (b * c)</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">*</phrase> higher than <phrase class="notranslate">+</phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">a OR b OR c</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">(a OR b) OR c</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>Left to right rule</paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">a AND b OR c AND </phrase>
                                 </phrase>d</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">(a AND b) OR (c AND d)</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">AND</phrase>
                                 </phrase> higher than <phrase class="notranslate">
                                    <phrase class="script">OR</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">a &lt; b AND c &lt; d</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">
                                    <phrase class="script">(a &lt; b) AND (c &lt; d)</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="notranslate">&lt;</phrase> higher than <phrase class="notranslate">
                                    <phrase class="script">AND</phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
            </section>
            <section>
               <title>Syntax</title>
               <wrapper class="block">
                  <title>Expressions</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;expression&gt; ::= &lt;expr&gt; | &lt;EXP&gt; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;expr&gt; ::= [ NOT ] &lt;logical term&gt; { ( OR | XOR ) &lt;logical term&gt; } </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;logical term&gt; ::= &lt;relation&gt; { AND &lt;relation&gt; } </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;relation&gt; ::= &lt;simple expr&gt; [ &lt;relop&gt; &lt;simple expr&gt; ] </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;simple expr&gt; ::= [ &lt;addop&gt; ] &lt;term&gt; { &lt;addop&gt; &lt;term&gt; }</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;term&gt; ::= &lt;primary&gt; { &lt;mulop&gt; &lt;primary&gt; } </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;primary&gt; ::= </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;literal&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;variable&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;persistent&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;constant&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;parameter&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;function call&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;aggregate&gt; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| '(' &lt;expr&gt; ')' </phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Operators</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;relop&gt; ::= '&lt;' | '&lt;=' | '=' | '&gt;' | '&gt;=' | '&lt;&gt;' </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;addop&gt; ::= '+' | '-'</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;mulop&gt; ::= '*' | '/' | <bold>DIV</bold> | <bold>MOD </bold>
                        </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Constant values</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;literal&gt; ::= &lt;num literal&gt;</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">| &lt;string literal&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;bool literal&gt;</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Data</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;variable&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;entire variable&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;variable element&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;variable component&gt;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">&lt;entire variable&gt; ::= &lt;ident&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;variable element&gt; ::= &lt;entire variable&gt; '{' &lt;index list&gt; '}'</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;index list&gt; ::= &lt;expr&gt; { ',' &lt;expr&gt; }</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;variable component&gt; ::= &lt;variable&gt; '.' &lt;component name&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;component name&gt; ::= &lt;ident&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;persistent&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;entire persistent&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;persistent element&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;persistent component&gt;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">&lt;constant&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;entire constant&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;constant element&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;constant component&gt;</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Aggregates</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;aggregate&gt; ::= '[' &lt;expr&gt; { ',' &lt;expr&gt; } ']'</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Function calls</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;function call&gt; ::= &lt;function&gt; '(' [ &lt;function argument list&gt; ] ')'</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;function&gt; ::= &lt;ident&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;function argument list&gt; ::= &lt;first function argument&gt; { &lt;function argument&gt; }</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;first function argument&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;required function argument&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;optional function argument&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;conditional function argument&gt;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">&lt;function argument&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">',' &lt;required function argument&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;optional function argument&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| ',' &lt;optional function argument&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;conditional function argument&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| ',' &lt;conditional function argument&gt;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">&lt;required function argument&gt; ::= [ &lt;ident&gt; ':=' ] &lt;expr&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;optional function argument&gt; ::= '\' &lt;ident&gt; [ ':=' &lt;expr&gt; ]</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;conditional function argument&gt; ::= '\' &lt;ident&gt; '?' &lt;parameter&gt;</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Special expressions</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;constant expression&gt; ::= &lt;expression&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;literal expression&gt; ::= &lt;expression&gt;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">&lt;conditional expression&gt; ::= &lt;expression&gt;</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Parameters</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">&lt;parameter&gt; ::=</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">&lt;entire parameter&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;parameter element&gt;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">| &lt;parameter component&gt;</phrase>
                        </paragraph>
                     </wrapper>
                  </wrapper>
               </wrapper>
            </section>
         </section>
         <section>
            <title>Instructions</title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>Instructions are executed in succession unless a program flow instruction or an interrupt or error causes the execution to continue at some other place.</paragraph>
               <paragraph>Most instructions are terminated by a semicolon (;). A label is terminated by a colon (:). Some instructions may contain other instructions and are terminated by specific keywords.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Termination word</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IF</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ENDIF</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">FOR</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ENDFOR</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WHILE</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ENDWHILE</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TEST</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ENDTEST</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <paragraph>Example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">WHILE index &lt; 100 DO</phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">.</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">index := index + 1;</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDWHILE</phrase>
                  </paragraph>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Pick lists<indexterm id="index118">
                     <primary>pick lists</primary>
                  </indexterm>
                  <indexterm id="index119">
                     <primary>instructions</primary>
                     <secondary>pick lists</secondary>
                  </indexterm>
               </title>
               <paragraph>All instructions are collected into specific groups, which are described in the following sections. This grouping is the same as can be found in the pick lists used when adding new instructions to a program on the FlexPendant.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Syntax</title>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">&lt;instruction list&gt; ::= { &lt;instruction&gt; } </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">&lt;instruction&gt; ::= </phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">[&lt;instruction according to separate chapter in this manual&gt; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">| &lt;SMT&gt;</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </wrapper>
         </section>
         <section>
            <title>Controlling the program flow<indexterm id="index120">
                  <primary>program flow instructions</primary>
               </indexterm>
               <indexterm id="index121">
                  <primary>instructions</primary>
                  <secondary>program flow</secondary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Introduction</title>
               <paragraph>The program is executed sequentially as a rule, that is instruction by instruction. Sometimes, instructions which interrupt this sequential execution and call another instruction are required to handle different situations that may arise during execution.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>The program flow can be controlled according to five different principles:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>By calling another routine (procedure) and, when that routine has been executed, continuing execution with the instruction following the routine call.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>By executing different instructions depending on whether or not a given condition is satisfied.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>By repeating a sequence of instructions a number of times or until a given condition is satisfied.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>By going to a label within the same routine.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>By stopping program execution.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Calling another routine</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ProcCall</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Call (jump to) another routine</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CallByVar</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Call procedures with specific names</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RETURN</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Return to the original routine</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Program control within the routine</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>Compact <phrase class="notranslate">
                                 <phrase class="script">IF</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute one instruction only if a condition is satisfied</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IF </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a sequence of different instructions depending on whether or not a condition is satisfied</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">FOR</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Repeat a section of the program a number of times</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WHILE</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Repeat a sequence of instructions as long as a given condition is satisfied</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TEST </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute different instructions depending on the value of an expression</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GOTO </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Jump to a label</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">label </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Specify a label (line name)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Break</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Terminate the smallest enclosing loop, for example, a <phrase class="notranslate">
                                 <phrase class="script">While</phrase>
                              </phrase> loop</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Continue</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Skip the rest of the loop and start the next iteration of the loop</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Stopping program execution<indexterm id="index122">
                     <primary>stopping program execution</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Stop </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop program execution</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EXIT </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop program execution when a program restart is not allowed</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DebugBreak</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop program execution temporarily for debugging purposes</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SystemStopAction</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop program execution and robot movement</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Stop current cycle</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ExitCycle </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop the current cycle and move the program pointer to the first instruction in the main routine.</paragraph>
                           <paragraph>When the execution mode <phrase class="notranslate">
                                 <phrase class="script">CONT</phrase>
                              </phrase> is selected, execution will continue with the next program cycle.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Various instructions</title>
            <wrapper class="block">
               <title>Introduction</title>
               <paragraph>Various instructions are used to</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>assign values to data</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>wait a given amount of time or wait until a condition is satisfied</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>insert a comment into the program</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>load program modules.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Assigning a value to data<indexterm id="index123">
                     <primary>assigning value to data</primary>
                  </indexterm>
                  <indexterm id="index124">
                     <primary>data</primary>
                     <secondary>assigning values</secondary>
                  </indexterm>
               </title>
               <paragraph>Data can be assigned an arbitrary value. It can, for example, be initialized with a constant value, for example 5, or updated with an arithmetic expression, for example <phrase class="notranslate">
                     <phrase class="script">reg1+5*reg3</phrase>
                  </phrase>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">:=</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Assign a value to data</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Wait<indexterm id="index125">
                     <primary>wait instructions</primary>
                  </indexterm>
               </title>
               <paragraph>The robot can be programmed to wait a given amount of time, or to wait until an arbitrary condition is satisfied; for example, to wait until an input is set.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitTime</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait a given amount of time or to wait until the robot stops moving</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitUntil</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a condition is satisfied</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitDI</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a digital input is set</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a digital output is set</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Comments<indexterm id="index126">
                     <primary>comments</primary>
                  </indexterm>
               </title>
               <paragraph>Comments are only inserted into the program to increase its readability. Program execution is not affected by a comment.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">!</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Comment on the program. A line starting with <phrase class="script">!</phrase> (exclamation mark) is a comment and is discarded by the program execution.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Loading program modules<indexterm id="index127">
                     <primary>loading modules</primary>
                  </indexterm>
               </title>
               <paragraph>Program modules can be loaded from mass memory or erased from the program memory. In this way large programs can be handled with only a small memory.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Load</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Load a program module into the program memory</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UnLoad</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Unload a program module from the program memory</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StartLoad</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Load a program module into the program memory during execution</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitLoad</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Connect the module, if loaded with <phrase class="notranslate">
                                 <phrase class="script">StartLoad</phrase>
                              </phrase>, to the program task</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CancelLoad</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Cancel the loading of a module that is being or has been loaded with the instruction <phrase class="notranslate">
                                 <phrase class="script">StartLoad</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CheckProgRef</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check program references</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Save</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Save a program module</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EraseModule</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Erase a module from the program memory</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">loadsession</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Program a load session</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Various functions</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TryInt</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test if data object is a valid integer</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">OpMode</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current operating mode of the robot</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RunMode</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current program execution mode of the robot</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">NonMotionMode</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current Non-Motion execution mode of the program task</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Dim</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Obtain the dimensions of an array</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Present</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Find out whether an optional parameter was present when a routine call was made</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Type</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Return the data type name for a specified variable</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IsPers</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check whether a parameter is a persistent</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IsVar</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check whether a parameter is a variable</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Basic data</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">bool</phrase>
                              </phrase>
                              <indexterm id="index128">
                                 <primary>
                                    <phrase class="notranslate">bool</phrase>
                                 </primary>
                              </indexterm>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Logical data (with the values true or false)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">num</phrase>
                              </phrase>
                              <indexterm id="index129">
                                 <primary>
                                    <phrase class="notranslate">num</phrase>
                                 </primary>
                              </indexterm>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Numeric values (decimal or integer)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">dnum</phrase>
                              </phrase>
                              <indexterm id="index130">
                                 <primary>
                                    <phrase class="notranslate">dnum</phrase>
                                 </primary>
                              </indexterm>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Numeric values (decimal or integer). Data type with larger range than num.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">string</phrase>
                              </phrase>
                              <indexterm id="index131">
                                 <primary>
                                    <phrase class="notranslate">string</phrase>
                                 </primary>
                              </indexterm>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Character strings</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">switch</phrase>
                              </phrase>
                              <indexterm id="index132">
                                 <primary>
                                    <phrase class="notranslate">switch</phrase>
                                 </primary>
                              </indexterm>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Routine parameters without value</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Conversion function<indexterm id="index133">
                     <primary>conversions</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ByteToStr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a byte to a string data with a defined byte data format.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrToByte</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a string with a defined byte data format to a byte data.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section id="newid-17">
            <title>Motion settings<indexterm id="index134">
                  <primary>motion settings</primary>
                  <secondary>instructions</secondary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Introduction</title>
               <paragraph>Some of the motion characteristics of the robot are determined using logical instructions that apply to all movements:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Maximum TCP speed</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Maximum velocity and velocity override</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Acceleration</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Management of different robot configurations</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Payload</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Behavior close to singular points</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Program displacement</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Soft servo</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Tuning values</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Activation and deactivation of event buffer</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Suppress corner path warnings</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>The basic characteristics of the robot motion are determined by data specified for each positioning instruction. Some data, however, is specified in separate instructions which apply to all movements until that data changes.</paragraph>
               <paragraph>The general motion settings are specified using a number of instructions, but can also be read using the system variable <phrase class="script">C_MOTSET</phrase> or <phrase class="script">C_PROGDISP</phrase>.</paragraph>
               <paragraph>Default values are automatically set (by executing the routine <phrase class="script">SYS_RESET</phrase> in system module <phrase class="script">BASE_SHARED</phrase>)</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>when using the restart mode <phrase class="ui-reference">Reset system</phrase>,</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>when a new program is loaded,</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>when the program is started from the beginning.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Maximum TCP speed Function</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MaxRobSpeed</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Return the maximum TCP speed for the used robot type</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Defining velocity</title>
               <paragraph>The absolute velocity is programmed as an argument in the positioning instruction. In addition to this, the maximum velocity and velocity override (a percentage of the programmed velocity) can be defined.</paragraph>
               <paragraph>A limitation of the speed can also be set, and it is later on limited when a system input signal is set.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">VelSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The maximum velocity and velocity override</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SpeedRefresh</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Update speed override for ongoing movement</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SpeedLimAxis</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set speed limitation for an axis. It is later on applied by a system input signal.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SpeedLimCheckPoint</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set speed limitation for check points. It is later on applied by a system input signal.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Defining acceleration</title>
               <paragraph>When fragile parts, for example, are handled, the acceleration can be reduced for part of the program.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">AccSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define the maximum acceleration.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WorldAccLim</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Limiting the acceleration/deceleration of the tool (and gripload) in the world coordinate system.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathAccLim</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set or reset limitations on TCP acceleration and/or TCP deceleration along the movement path.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Defining configuration management</title>
               <paragraph>The robot's configuration is normally checked during motion. If joint (axis-by-axis) motion is used, the correct configuration will be achieved. If linear or circular motion are used, the robot will always move towards the closest configuration, but a check is performed to see if it is the same as the programmed one. It is possible to change this, however.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ConfJ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Configuration control on/off during joint motion</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ConfL</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Configuration check on/off during linear motion</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Defining the payload</title>
               <paragraph>To achieve the best robot performance, the correct payload must be defined.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GripLoad</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define the payload of the gripper</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Defining the behavior near singular points</title>
               <paragraph>The robot can be programmed to avoid singular points by changing the tool orientation automatically.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SingArea</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define the interpolation method through singular points</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Activation and deactivation of event buffer</title>
               <paragraph>To achieve the best robot performance and good application behavior when combining an application using finepoints and a continous application where signals needs to be set in advance due to slow process equipment, the event buffer can be activated and deactivated.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ActEventBuffer</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate the configured event buffer</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DeactEventBuffer</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate the use of the event buffer</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Suppress corner path warnings</title>
               <paragraph>To avoid warning messages on the FlexPendant when a corner path failure occurs, these warnings can be activated and deactivated.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">CornerPathWarning TRUE;</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Suppress corner path warnings</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">CornerPathWarning FALSE;</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Enable corner path warnings</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Displacing a program</title>
               <paragraph>When part of the program must be displaced, for example following a search, a program displacement can be added.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PDispOn</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate program displacement</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PDispSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate program displacement by specifying a value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PDispOff</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate program displacement</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EOffsOn</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate an additional axis offset</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EOffsSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate an additional axis offset by specifying a value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EOffsOff</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate an additional axis offset</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DefDFrame</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate a program displacement from three positions</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DefFrame</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate a program displacement from six positions</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ORobT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Remove program displacement from a position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DefAccFrame</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a frame from original positions and displaced positions</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Soft servo<indexterm id="index135">
                     <primary>soft servo</primary>
                  </indexterm>
               </title>
               <paragraph>One or more of the robot axes can be made âsoftâ. When using this function, the robot will be compliant and can replace, for example, a spring tool.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SoftAct</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate the soft servo for one or more axes</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SoftDeact</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate the soft servo</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Adjust the robot tuning values</title>
               <paragraph>In general, the performance of the robot is self-optimising; however, in certain extreme cases, overrunning, for example, can occur. You can adjust the robot tuning values to obtain the required performance.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TuneServo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Adjust the robot tuning values</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TuneReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset tuning to normal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathResol</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Adjust the geometric path resolution</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CirPathMode</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Choose the way the tool reorientates during circular interpolation.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">tunetype</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent the tuning type as a symbolic constant</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>World zones<indexterm id="index136">
                     <primary>world zones</primary>
                  </indexterm>
               </title>
               <paragraph>Up to 10 different volumes can be defined within the working area of the robot. These can be used for:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Indicating that the robotâs TCP is a definite part of the working area.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Delimiting the working area for the robot and preventing a collision with the tool.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Creating a working area common to two robots. The working area is then available only to one robot at a time.</paragraph>
                  </listitem>
               </list>
               <paragraph>The instructions in the table below are only available when the robot is equipped with the option <italic>
                     <phrase class="notranslate">World Zones</phrase>
                  </italic>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZBoxDef</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a box-shaped global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZCylDef</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a cylindrical global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZSphDef</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a spherical global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZHomeJointDef</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a global zone in joints coordinates</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZLimJointDef</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a global zone in joints coordinates for limitation of working area.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZLimSup</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate limit supervision for a global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZDOSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate global zone to set digital outputs</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZDisable</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate supervision of a temporary global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZEnable</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate supervision of a temporary global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WZFree</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Erase supervision of a temporary global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">wztemporary</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Identify a temporary global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">wzstationary</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Identify a stationary global zone</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">shapedata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Describe the geometry of a global zone</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Various for motion settings</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitRob</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until the robot and additional axis have reached stop point or have zero speed.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">motsetdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Motion settings except program displacement</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">progdisp</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Program displacement</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section id="newid-18">
            <title>Motion<indexterm id="index137">
                  <primary>motion</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Principle for robot movement</title>
               <paragraph>The robot movements are programmed as pose-to-pose movements, that is <italic>move from the current position to a new position</italic>. The path between these two positions is then automatically calculated by the robot.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>The basic motion characteristics, such as the type of path, are specified by choosing the appropriate positioning instruction. The remaining motion characteristics are specified by defining data which are arguments of the instruction.</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Position data (end position for robot and additional axes)</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Speed data (desired speed)</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Zone data (position accuracy)</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Tool data (for example the position of the TCP)</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Work object data (for example the current coordinate system)</paragraph>
                  </listitem>
               </list>
               <paragraph>Some of the motion characteristics of the robot are determined using logical instructions which apply to all movements (see <link type="Reference;" xlink:type="simple" xlink:href="#newid-17">Motion settings</link>):</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Maximum velocity and velocity override</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Acceleration</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Management of different robot configurations</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Payload</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Behavior close to singular points</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Program displacement</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Soft servo</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Tuning values</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Activation and deactivation of event buffer</paragraph>
                  </listitem>
               </list>
               <paragraph>Both the robot and the additional axes are positioned using the same instructions. The additional axes are moved at a constant velocity, arriving at the end position at the same time as the robot.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Positioning instructions<indexterm id="index138">
                     <primary>positioning instructions</primary>
                  </indexterm>
                  <indexterm id="index139">
                     <primary>motion instructions</primary>
                  </indexterm>
                  <indexterm id="index140">
                     <primary>move instructions</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Type of movement</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveC</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>TCP moves along a circular path.<indexterm id="index141">
                                 <primary>circular movement</primary>
                              </indexterm>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveJ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Joint movement.<indexterm id="index142">
                                 <primary>joint movement</primary>
                              </indexterm>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveL</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>TCP moves along a linear path.<indexterm id="index143">
                                 <primary>linear movement</primary>
                              </indexterm>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveAbsJ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Absolute joint movement.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveAbsL</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Absolute linear movement.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveExtJ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves a linear or rotational additional axis without TCP.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveCAO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot circularly and sets analog output in the corner</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveCDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot circularly and sets a digital output in the middle of the corner path.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveCGO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot circularly and set a group output signal in the corner</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveJAO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot by joint movement and sets analog output in the corner</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveJDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot by joint movement and sets a digital output in the middle of the corner path.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveJGO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot by joint movement and set a group output signal in the corner</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveLAO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot linearly and sets analog output in the corner</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveLDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot linearly and sets a digital output in the middle of the corner path.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveLGO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot linearly and sets group output signal in the corner</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveCSync</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot circularly and executes a RAPID procedure.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveJSync</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot by joint movement and executes a RAPID procedure.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MoveLSync</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Moves the robot linearly and executes a RAPID procedure.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Searching<indexterm id="index144">
                     <primary>search instructions</primary>
                  </indexterm>
               </title>
               <paragraph>During the movement, the robot can search for the position of a work object, for example. The searched position (indicated by a sensor signal) is stored and can be used later to position the robot or to calculate a program displacement.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Type of movement</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SearchC</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>TCP along a circular path.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SearchL</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>TCP along a linear path.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SearchExtJ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Joint movement of mechanical unit without TCP.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-19">
               <title>Activating outputs or interrupts at specific positions<indexterm id="index145">
                     <primary>interrupts</primary>
                  </indexterm>
               </title>
               <paragraph>Normally, logical instructions are executed in the transition from one positioning instruction to another. If, however, special motion instructions are used, these can be executed instead when the robot is at a specific position.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggAbsJ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Absolute joint robot movements with events</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggC</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Run the robot (TCP) circularly with an activated trigg condition.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggCheckIO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define an I/O check at a given position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggEquip</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a trigg condition to set an output at a given position with the possibility to include time compensation for the lag in the external equipment.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggDataCopy</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Copy the content in a triggdata variable</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggDataReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset the content in a triggdata variable</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggRampAO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a trigg condition to ramp up or down analog output signal at a given position with the possibility to include time compensation for the lag in the external equipment.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggJ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Run the robot axis-by-axis with an activated trigg condition.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggJIOs</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Run the robot (TCP) axis-by-axis with an activated I/O trigg condition.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggInt</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a trigg condition to execute a trap routine at a given position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggIO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a trigg condition to set an output at a given position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggL</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Run the robot (TCP) linearly with an activated trigg condition.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggLIOs</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Run the robot (TCP) linearly with an activated I/O trigg condition.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StepBwdPath</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Move backwards on its path in a <phrase class="notranslate">
                                 <phrase class="script">RESTART</phrase>
                              </phrase> event routine.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggStopProc</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Create an internal supervision process in the system for zero setting of specified process signals and the generation of restart data in a specified persistent variable at every program stop (STOP) or emergency stop (QSTOP) in the system.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Functions</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggDataValid</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if the content in a triggdata variable is valid</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data types</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">triggdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Trigg conditions</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">aiotrigg</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Analog I/O trigger condition</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">restartdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Data for <phrase class="notranslate">
                                 <phrase class="script">TriggStopProc</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">triggios</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph class="script">Trigg conditions for <phrase class="notranslate">
                                 <phrase class="script">TriggJIOs</phrase>
                              </phrase> and <phrase class="notranslate">
                                 <phrase class="script">TriggLIOs</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">triggstrgo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph class="script">Trigg conditions for <phrase class="notranslate">
                                 <phrase class="script">TriggJIOs</phrase>
                              </phrase> and <phrase class="notranslate">
                                 <phrase class="script">TriggLIOs</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">triggiosdnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph class="script">Trigg conditions for <phrase class="notranslate">
                                 <phrase class="script">TriggJIOs</phrase>
                              </phrase> and <phrase class="notranslate">
                                 <phrase class="script">TriggLIOs</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Control of analog output signal proportional to actual TCP</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggSpeed</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define conditions and actions for control of an analog output signal with output value proportional to the actual TCP speed.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Motion control if an error/interrupt takes place</title>
               <paragraph>To rectify an error or an interrupt, motion can be stopped temporarily and then restarted again.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StopMove</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define conditions and actions for control of an analog output signal with output value proportional to the actual TCP speed.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StartMove</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Restart the robot movements</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StartMoveRetry</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Restart the robot movements and make a retry in one indivisible sequence</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StopMoveReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset the stop move status, but donât start the robot movements</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StorePath</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Store the last path generated</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RestoPath</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Regenerate a path stored earlier</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ClearPath</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Clear the whole motion path on the current motion path level.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathLevel</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the current path level.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SyncMoveSuspend</phrase>
                              </phrase>
                              <annotation class="table-note" id="newid-20">
                                 <title/>
                                 <paragraph>If the robot is equipped with the option <italic>
                                       <phrase class="notranslate">MultiMove Coordinated</phrase>
                                    </italic>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Suspend synchronized coordinated movements on <phrase class="notranslate">StorePath</phrase> level.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SyncMoveResume</phrase>
                              </phrase>
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-20">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Resume synchronized coordinated movements on <phrase class="notranslate">StorePath</phrase> level</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IsStopMoveAct</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get status of the stop move flags.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get robot info in a MultiMove system<indexterm id="index146">
                     <primary>MultiMove</primary>
                  </indexterm>
               </title>
               <paragraph>Used to retrieve name or reference to the robot in current program task.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RobName</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the controlled robot name in current program task, if any.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ROB_ID</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get data containing a reference to the controlled robot in current program task, if any.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Controlling additional axes<indexterm id="index147">
                     <primary>additional axes</primary>
                  </indexterm>
               </title>
               <paragraph>The robot and additional axes are usually positioned using the same instructions. Some instructions, however, only affect the additional axis movements.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DeactUnit</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate an external mechanical unit</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ActUnit</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate an external mechanical unit</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MechUnitLoad</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a payload for a mechanical unit</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetTorqueMargin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the least torque margin</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ResetTorqueMargin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset least torque margin</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetMotorTorque</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current torque of the robot and external axes motors, and can be used to detect if a servo gripper holds a load or not.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetNextMechUnit</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve the name and data for mechanical units</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IsMechUnitActive</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check whether a mechanical unit is activated or not</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Independent axes<indexterm id="index148">
                     <primary>independent axes</primary>
                  </indexterm>
               </title>
               <paragraph>The robot axis 6 (and 4 on IRB 1600, 2600 and 4600 except ID versions) or an additional axis can be moved independently of other movements. The working area of an axis can also be reset, which will reduce the cycle times.</paragraph>
               <paragraph>The instructions in the table below are only available when the robot is equipped with the option <italic>
                     <phrase class="notranslate">Independent Axis</phrase>
                  </italic>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndAMove</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change an axis to independent mode and move the axis to an absolute position.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndCMove</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change an axis to independent mode and start the axis moving continuously.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndDMove</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change an axis to independent mode and move the axis a delta distance.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndRMove</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change an axis to independent mode and move the axis to a relative position (within the axis revolution).</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change an axis to dependent mode or/and reset the working area.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">HollowWristReset</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>Can only be used on IRB 5402 and IRB 5403.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset the position of the wrist joints on hollow wrist manipulators, such as IRB 5402 and IRB 5403.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <paragraph>The functions in the table below are only available when the robot is equipped with the option <italic>
                     <phrase class="notranslate">Independent Axis</phrase>
                  </italic>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndInpos</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check whether an independent axis is in position.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndSpeed</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check whether an independent axis has reached programmed speed.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Path correction<indexterm id="index149">
                     <primary>path correction</primary>
                  </indexterm>
               </title>
               <paragraph>The instructions, functions, and data types in the tables below are only available when the robot is equipped with the options <phrase class="value">
                     <italic>Path Corrections</italic>
                  </phrase> or <phrase class="value">
                     <italic>RobotWare-Arc sensor</italic>
                  </phrase>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CorrCon</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check whether an independent axis is in position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CorrWrite</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check whether an independent axis has reached programmed speed</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CorrDiscon</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Disconnect from a previously connected correction generator</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CorrClear</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Remove all connected correction generators</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CorrRead</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the total corrections delivered by all connected correction generators</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">corrdescr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Add geometric offsets in the path coordinate system</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Path Recorder<indexterm id="index150">
                     <primary>path recorder</primary>
                  </indexterm>
               </title>
               <paragraph>The instructions, functions, and data types in the tables below are only available when the robot is equipped with the option <italic>
                     <phrase class="notranslate">Path Recovery</phrase>
                  </italic>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathRecStart</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Start recording the robotâs path</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathRecStop</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop recording the robotâs path</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathRecMoveBwd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Move the robot backwards along a recorded path</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathRecMoveFwd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Move the robot back to the position where PathRecMoveBwd was executed</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathRecValidBwd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if the path recorder is active and if a recorded backward path is available</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PathRecValidFwd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if the path recorder can be used to move forward</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">pathrecid</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Identify a breakpoint for the path recorder</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Conveyor tracking<indexterm id="index151">
                     <primary>conveyor tracking</primary>
                  </indexterm>
               </title>
               <paragraph>The instructions in the table below are only available when the robot is equipped with the option <italic>
                     <phrase class="notranslate">Conveyor tracking</phrase>
                  </italic>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitWObj</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait for work object on conveyor</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DropWObj</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Drop work object on conveyor</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Servo Tracking for Indexing Conveyor<indexterm id="index152">
                     <primary>servo tracking</primary>
                  </indexterm>
                  <indexterm id="index153">
                     <primary>indexing conveyor</primary>
                  </indexterm>
               </title>
               <paragraph>The instructions in the table below are only available when the robot is equipped with the option <italic>
                     <phrase class="notranslate">Conveyor tracking</phrase>
                  </italic>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndCnvAddObject</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Used to manually add an object to the object queue.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndCnvEnable</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Start to listen to the digital input and execute an indexing movement when triggered.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndCnvDisable</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The system stop listen to the digital input.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndCnvInit</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set up the indexed conveyor functionality</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IndCnvReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>To be able to jog or execute a move instruction for the indexing conveyor the system needs to be set to Normal Mode, and that is done with this instruction, or when moving PP to main.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">indcnvdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Used to setup the behavior of the indexing conveyor functionality.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Load identification and collision detection<indexterm id="index154">
                     <primary>load identification</primary>
                  </indexterm>
                  <indexterm id="index155">
                     <primary>collision detection</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MotionSup</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>Only if the robot is equipped with the option <italic>
                                       <phrase class="notranslate">Collision Detection</phrase>
                                    </italic>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate/activate motion supervision</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ParIdPosValid</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Valid robot position for parameter identification</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ParIdRobValid</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Valid robot type for parameter identification</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">LoadId</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Load identification of tool or payload</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ManLoadId</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Load identification of external manipulator</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">loadidnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent an integer with a symbolic constant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">paridnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent an integer with a symbolic constant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">paridvalidnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent an integer with a symbolic constant</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Position functions<indexterm id="index156">
                     <primary>position functions</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Offs</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Add an offset to a robot position, expressed in relation to the work object</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RelTool</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Add an offset, expressed in the tool coordinate system</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CalcRobT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph class="script">Calculates <phrase class="notranslate">
                                 <phrase class="script">robtarget</phrase>
                              </phrase> from <phrase class="notranslate">
                                 <phrase>jointtarget</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CPos</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current position (only x, y, z of the robot)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CRobT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current position (the complete robtarget)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CJointT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current joint angles</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadMotor</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current motor angles</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CTool</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current tooldata value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CWObj</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current wobjdata value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ORobT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Remove a program displacement from a position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MirPos</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Mirror a position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CalcJointT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate joint angles from <phrase class="notranslate">
                                 <phrase class="script">robtarget</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Distance</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The distance between two positions</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Check interrupted path after power failure<indexterm id="index157">
                     <primary>interrupted path</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PFRestart</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if the path has been interrupted at power failure.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Status functions<indexterm id="index158">
                     <primary>status functions</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CSpeedOverride</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the speed override set by the operator from the <phrase class="ui-reference">Program Editor</phrase> or <phrase class="ui-reference">Production Window</phrase>.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Motion data<indexterm id="index159">
                     <primary>motion data</primary>
                  </indexterm>
               </title>
               <paragraph>Motion data is used as an argument in the positioning instructions.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">robtarget</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The end position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">jointtarget</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph class="script">The end position for a <phrase class="notranslate">
                                 <phrase class="script">MoveAbsJ/L</phrase>
                              </phrase>, <phrase class="notranslate">
                                 <phrase class="script">MoveExtJ</phrase>
                              </phrase>, or <phrase class="notranslate">
                                 <phrase class="script">TriggAbsJ</phrase>
                              </phrase> instruction</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">speeddata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The speed</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">zonedata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The accuracy of the position (stop point or fly-by point)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">tooldata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The tool coordinate system and the load of the tool</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">wobjdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The work object coordinate system</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">stoppointdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The termination of the position</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">identno</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A number used to control synchronizing of two or more coordinated synchronized movement with each other</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Basic data for movements</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">pos</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A position (x, y, z)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">orient</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An orientation</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">pose</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A coordinate system (position + orientation)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">confdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The configuration of the robot axes</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">extjoint</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The position of the additional axes</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">robjoint</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The position of the robot axes</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">loaddata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A load</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">mecunit</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An external mechanical unit</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Options</paragraph>
                        </td>
                        <td>
                           <paragraph>Described in</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <italic>
                                 <phrase class="notranslate">Collision Detection</phrase>
                              </italic>
                           </paragraph>
                           <paragraph>
                              <italic>
                                 <phrase class="notranslate">Independent Axis</phrase>
                              </italic>
                           </paragraph>
                           <paragraph>
                              <italic>
                                 <phrase class="notranslate">Path Recovery</phrase>
                              </italic>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.AM.ControllerSoftware">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Application manual</paragraph>
                                    <paragraph class="abb.maintitle">Controller software OmniCore</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <italic>
                                 <phrase class="notranslate">Conveyor tracking</phrase>
                              </italic>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.AM.ConveyorTracking">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Application manual</paragraph>
                                    <paragraph class="abb.maintitle">Conveyor tracking</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <italic>
                                 <phrase class="notranslate">MultiMove</phrase>
                              </italic>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.AM.MultiMove">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Application manual</paragraph>
                                    <paragraph class="abb.maintitle">MultiMove</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section id="newid-21">
            <title>Input and output signals<indexterm id="index160">
                  <primary>signals</primary>
               </indexterm>
               <indexterm id="index161">
                  <primary>input signals</primary>
               </indexterm>
               <indexterm id="index162">
                  <primary>output signals</primary>
               </indexterm>
               <indexterm id="index163">
                  <primary>I/O signals</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Signals</title>
               <paragraph>The robot can be equipped with a number of digital and analog user signals that can be read and changed from within the program.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>The signal names are defined in the system parameters. These names are always available in the program for reading or setting I/O operations.</paragraph>
               <paragraph>The value of an analog signal, a digital signal, or a group of digital signals is specified as a numeric value. For an analog signal and a digital signal the numeric value is of the type <phrase class="notranslate">
                     <phrase class="script">num</phrase>
                  </phrase>. For a digital group signal the numeric value is of the type <phrase class="notranslate">
                     <phrase class="script">dnum</phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Changing the value of a signal</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">InvertDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Invert the value of a digital output signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PulseDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Generate a pulse on a digital output signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Reset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset a digital output signal (to 0)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Set</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set a digital output signal (to 1)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SetAO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change the value of an analog output signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SetDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change the value of a digital output signal (symbolic value; for example <italic>high/low</italic>)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SetGO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Change the value of a group of digital output signals</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Reading the value of input signals</title>
               <paragraph>The value of an input signal can be read directly in the program, for example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>VAR num mynum;</paragraph>
                  <paragraph>VAR dnum mydnum;</paragraph>
                  <paragraph>! Digital input</paragraph>
                  <paragraph>IF di1 = 1 THEN ...</paragraph>
                  <paragraph>mynum:=di1;</paragraph>
                  <paragraph>! Digital group input</paragraph>
                  <paragraph>IF gi1 = 5 THEN ...</paragraph>
                  <paragraph>mydnum:=gi1;</paragraph>
                  <paragraph>! Analog input</paragraph>
                  <paragraph>IF ai1 &gt; 5.2 THEN ...</paragraph>
                  <paragraph>mynum:=ai1;</paragraph>
               </wrapper>
               <paragraph>The following recoverable errors can be generated. The errors can be handled in an error handler. The system variable ERRNO will be set to:</paragraph>
               <paragraph>
                  <phrase class="notranslate">
                     <phrase class="script">ERR_NO_ALIASIO_DEF</phrase>
                  </phrase> if the signal variable is a variable declared in RAPID. It has not been connected to an I/O signal defined in the I/O configuration with instruction <phrase class="notranslate">
                     <phrase class="script">AliasIO</phrase>
                  </phrase>.</paragraph>
               <paragraph>
                  <phrase class="notranslate">
                     <phrase class="script">ERR_NORUNUNIT</phrase>
                  </phrase> if there is no contact with the I/O unit.</paragraph>
               <paragraph>
                  <phrase class="notranslate">
                     <phrase class="script">ERR_SIG_NOT_VALID</phrase>
                  </phrase> if the I/O signal cannot be accessed (only valid for ICI field bus).</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Reading the value of output signals</title>
               <paragraph>The value of an output signal can be read directly in the program, for example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">! Digital output</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">IF do1 = 1 THEN ...</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">! Digital group output</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">IF go1 = 5 THEN ...</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">! Analog output</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">IF ao1 &gt; 5.2 THEN ...</phrase>
                  </paragraph>
               </wrapper>
               <paragraph>The following recoverable errors can be generated. The errors can be handled in an error handler. The system variable ERRNO will be set to:</paragraph>
               <paragraph>
                  <phrase class="notranslate">
                     <phrase class="script">ERR_NO_ALIASIO_DEF</phrase>
                  </phrase> if the signal variable is a variable declared in RAPID. It has not been connected to an I/O signal defined in the I/O configuration with instruction <phrase class="notranslate">
                     <phrase class="script">AliasIO</phrase>
                  </phrase>.</paragraph>
               <paragraph>
                  <phrase class="notranslate">
                     <phrase class="script">ERR_NORUNUNIT</phrase>
                  </phrase> if there is no contact with the I/O unit.</paragraph>
               <paragraph>
                  <phrase class="notranslate">
                     <phrase class="script">ERR_SIG_NOT_VALID</phrase>
                  </phrase> if the I/O signal cannot be accessed (only valid for ICI fieldbus).</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Testing input or output signals</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitDI</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a digital input is set or reset</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a digital output is set on reset</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitGI</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a group of digital input signals is set to a value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitGO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a group of digital output signals is set to a value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitAI</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a analog input is less or greather then a value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitAO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a analog output is less or greather then a value</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="script">TestDI</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test whether a digital input is set</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="script">ValidIO</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Valid I/O signal to access</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetSignalOrigin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get information about the origin of an I/O signal</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signalorigin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define the I/O signal origin</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Activating and deactivating I/O modules</title>
               <paragraph>I/O modules are automatically activated at start-up, but they can be deactivated during program execution and re-activated later.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IOActivate</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate an I/O module</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IODeactivate</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate an I/O module</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Mute and unmute I/O modules</title>
               <paragraph>I/O modules are unmuted at start-up, but they can be muted, to prevent I/O event messages from being cast, during program execution.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IODeviceMute</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Mute I/O event messages from the device.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Defining input and output signals</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">AliasIO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a signal with an alias name</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">dionum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The symbolic value of a digital signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signalai</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The name of an analog input signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signalao</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The name of an analog output signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signaldi</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The name of a digital input signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signaldo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The name of a digital output signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signalgi</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The name of a group of digital input signals</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signalgo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The name of a group of digital output signals</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">signalorigin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define the I/O signal origin</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get status of I/O network and device</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IODeviceState</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Returns current status of the I/O device</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IONetworkState</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Returns current status of the I/O network</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">iodevice_state</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The status of the I/O device</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ionetwork_state</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The status of the I/O network</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Read group signal information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">GetGroupSignalInfo</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read information about a digital group signal.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Communication<indexterm id="index164">
                  <primary>communication instructions</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Communicating via I/O devices and files</title>
               <paragraph>There are four possible ways to communicate via I/O devices and files:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Messages can be output to the FlexPendant display and the user can answer questions, such as about the number of parts to be processed.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Character-based information can be written to or read from text files in mass memory. In this way, for example, production statistics can be stored and processed later in a PC. Information can also be printed directly on a printer connected to the robot.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Binary information can be transferred between the robot and a sensor, for example.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Binary information can be transferred between the robot and another computer, for example, with a link protocol.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>The decision whether to use character-based or binary information depends on how the equipment with which the robot communicates handles that information. A file, for example, can have data that is stored in character-based or binary form.</paragraph>
               <paragraph>If communication is required in both directions simultaneously, binary transmission is necessary.</paragraph>
               <paragraph>Each I/O device or file used must first be opened. On doing this, the device/file receives a descriptor that is then used as a reference when reading/writing. The FlexPendant can be used at all times and does not need to be opened.</paragraph>
               <paragraph>Both text and the value of certain types of data can be printed.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Communicating using the FlexPendant, function group TP</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TPErase</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Clear the FlexPendant operator display</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TPWrite</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write text on the FlexPendant operator display</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ErrWrite</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write text on the FlexPendant display and simultaneously store that message in the program error log.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TPReadFK</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Label the function keys and to read which key is pressed</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TPReadDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a numeric value from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TPReadNum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a numeric value from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TPShow</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Choose a window on the FlexPendant from RAPID</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">tpnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent FlexPendant window with a symbolic constant</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Communicating using the FlexPendant, function group UI</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UIMsgBox</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write message to FlexPendant</paragraph>
                           <paragraph>Read pressed button from FlexPendant</paragraph>
                           <paragraph>Type basic</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UIMessageBox</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write message to FlexPendant</paragraph>
                           <paragraph>Read pressed button from FlexPendant</paragraph>
                           <paragraph>Type advanced</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UIDnumEntry</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a numeric value from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UIDnumTune</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Tune a numeric value from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UINumEntry</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a numeric value from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UINumTune</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Tune a numeric value from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UIAlphaEntry</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read text from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UIListView</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Select item in a list from the FlexPendant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UIClientExist</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Is the FlexPendant connected to the system</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">icondata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent icon with a symbolic constant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">buttondata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent button with a symbolic constant</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">listitem</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define menu list items</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">btnres</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Represent selected button with a symbolic constant</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Reading from or writing to a character-based I/O device or file<indexterm id="index165">
                     <primary>I/O device communication</primary>
                  </indexterm>
                  <indexterm id="index166">
                     <primary>file instructions</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Open</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Open a channel/file for reading or writing</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Write</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write text to the channel/file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Close</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Close the channel/file</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadNum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a numeric value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadStr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a text string</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Communicating using binary I/O devices or files<indexterm id="index167">
                     <primary>binary communication</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Open</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Open an I/O device or file for binary transfer of data</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WriteBin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write to a binary I/O device or file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WriteAnyBin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write to any binary I/O device or file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WriteStrBin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write a string to a binary I/O device or file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Rewind</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set the file position to the beginning of the file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Close</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Close the I/O device or file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadAnyBin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read from any binary I/O device or file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WriteRawBytes</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write data of type rawbytes to a binary I/O device or file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadRawBytes</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read data of type rawbytes from a binary I/O device or file</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadBin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read from a binary I/O device or file</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadStrBin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a string from a binary I/O device or file</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Communication using rawbytes<indexterm id="index168">
                     <primary>rawbytes communication</primary>
                  </indexterm>
               </title>
               <paragraph>The instructions and functions below are used to support the communication instructions <phrase class="script">WriteRawBytes</phrase> and <phrase class="script">ReadRawBytes</phrase>.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ClearRawBytes</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set a rawbytes variable to zero</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CopyRawBytes</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Copy from one rawbytes variable to another</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PackRawBytes</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Pack the contents of a variable into a container of type rawbytes</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">UnPackRawBytes</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Unpack the contents of a container of type rawbytes to a variable</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PackDNHeader</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Pack the header of a DeviceNet message into a container of rawbytes</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RawBytesLen</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the current length of valid bytes in a rawbyte variable</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Data for I/O devices or files</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">iodev</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A reference to an I/O device or a file, which can then be used for reading and writing</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">rawbytes</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A general data container, used for communication with I/O devices</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Communicating using sockets<indexterm id="index169">
                     <primary>socket communication</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketCreate</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Create a new socket</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketConnect</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Connect to remote computer (only client applications)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketSend</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Send data to remote computer</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketSendTo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Send data to remote computer</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketReceive</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Receive data from remote computer</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketReceiveFrom</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Receive data from remote computer</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketClose</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Close the socket</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketBind</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Bind a socket to a port (only server applications)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketListen</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Listen for connections (only server applications)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketAccept</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Accept connections (only server applications)</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketGetStatus</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get current socket state</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SocketPeek</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test for the presence of data on a socket</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">socketdev</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Socket device</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">socketstatus</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Socket status</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Communication using RAPID Message Queues<indexterm id="index170">
                     <primary>RAPID Message Queues</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph id="newid-22">
                              <phrase class="notranslate">
                                 <phrase class="script">rmqheader</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>Only if the robot is equipped with at least one of the options <phrase class="value">
                                       <italic>RobotStudio Connect</italic>
                                    </phrase> or <phrase class="value">
                                       <italic>Multitasking</italic>
                                    </phrase>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The rmqheader is a part of the data type rmqmessage and is used to describe the message</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">rmqmessage</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A general data container, used when communicate with RAPID Message Queue functionality</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">rmqslot</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Identity number of a RAPID task or SDK client</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IRMQMessage</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Order and enable interrupts for a specific data type</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQFindSlot</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Find the identity number of the queue configured for a RAPID task or SDK client</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQGetMessage</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the first message from the queue of this task</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQGetMsgData</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Extract the data from a message</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQGetMsgHeader</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Extract header information from a message</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQSendMessage</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Send data to the queue of the queue configured for a RAPID task or SDK client</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQSendWait</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Send a message and wait for the answer</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQEmptyQueue</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Empty the RMQ connected to the task executing instruction.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQReadWait</phrase>
                              </phrase> 
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-22">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Wait until a message has arrived, or timeout occurs.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RMQGetSlotName</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>Only if the robot is equipped with at least one of the options <phrase class="value">
                                       <italic>RobotStudio Connect</italic>
                                    </phrase> or <phrase class="value">
                                       <italic>Multitasking</italic>
                                    </phrase>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the name of a RAPID Message Queue client from a given identity number, that is from a given <phrase class="script">rmqslot</phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Interrupts<indexterm id="index171">
                  <primary>interrupts</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Introduction</title>
               <paragraph>Interrupts are program-defined events, identified by <italic>interrupt numbers</italic>. An interrupt occurs when an <italic>interrupt condition</italic> is true. Unlike errors, the occurrence of an interrupt is not directly related to (synchronous with) a specific code position. The occurrence of an interrupt causes suspension of the normal program execution and control is passed to a <italic>trap routine</italic>. <indexterm id="index172">
                     <primary>trap routines</primary>
                  </indexterm>
               </paragraph>
               <paragraph>Even though the robot immediately recognizes the occurrence of an interrupt (only delayed by the speed of the hardware), its response â calling the corresponding trap routine â can only take place at specific program positions, namely:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>when the next instruction is entered,</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>any time during the execution of a waiting instruction, for example <phrase class="notranslate">
                           <phrase class="script">WaitUntil</phrase>
                        </phrase>,</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>any time during the execution of a movement instruction, for example <phrase class="notranslate">
                           <phrase class="script">MoveL</phrase>
                        </phrase>.</paragraph>
                  </listitem>
               </list>
               <paragraph>This normally results in a delay of 2-30 ms between interrupt recognition and response, depending on what type of movement is being performed at the time of the interrupt.</paragraph>
               <paragraph>The raising of interrupts may be <italic>disabled</italic> and <italic>enabled</italic>. If interrupts are disabled, any interrupt that occurs is queued and not raised until interrupts are enabled again. Note that the interrupt queue may contain more than one waiting interrupt. Queued interrupts are raised in <italic>FIFO</italic> order (first in, first out). Interrupts are always disabled during the execution of a trap routine.</paragraph>
               <paragraph>When running stepwise and when the program has been stopped, no interrupts will be handled. Interrupts in queue at stop will be thrown away and any interrupts generated under stop will not be dealt, except for safe interrupts, see <italic>
                     <link type="Reference;" xlink:type="simple" xlink:href="#newid-23">Safe Interrupt</link>
                  </italic>.</paragraph>
               <paragraph>The maximum number of defined interrupts at any one time is limited to 100 <bold>per program task</bold>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>Each interrupt is assigned an interrupt identity. It obtains its identity by creating a variable (of data type intnum) and connecting this to a trap routine.</paragraph>
               <paragraph>The interrupt identity (variable) is then used to order an interrupt, that is to specify the reason for the interrupt. This may be one of the following events:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>An input or output is set to one or to zero.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>A given amount of time elapses after an interrupt is ordered.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>A specific position is reached.</paragraph>
                  </listitem>
               </list>
               <paragraph>When an interrupt is ordered, it is also automatically enabled, but can be temporarily disabled. This can take place in two ways:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>All interrupts can be disabled. Any interrupts occurring during this time are placed in a queue and then automatically generated when interrupts are enabled again.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Individual interrupts can be deactivated. Any interrupts occurring during this time are disregarded.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Connecting interrupts to trap routines</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CONNECT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Connect a variable (interrupt identity) to a trap routine</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Ordering interrupts</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to order</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISignalDI</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt from a digital input signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISignalDO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt from a digital output signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISignalGI</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt from a group of digital input signals</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISignalGO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt from a group of digital output signals</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISignalAI</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt from an analog input signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISignalAO</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt from an analog output signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ITimer</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A timed interrupt</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TriggInt</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>A position-fixed interrupt (from the Motion pick list)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IPers</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt when changing a persistent.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IError</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Order and enable an interrupt when an error occurs</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IRMQMessage</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>Only if the robot is equipped with at least one of the options <phrase class="value">
                                       <italic>RobotStudio Connect</italic>
                                    </phrase> or <phrase class="value">
                                       <italic>Multitasking</italic>
                                    </phrase>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An interrupt when a specified data type is received by a RAPID Message Queue</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Cancelling interrupts</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IDelete</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Cancel (delete) an interrupt</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Enabling/disabling interrupts</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISleep</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Deactivate an individual interrupt</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IWatch</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate an individual interrupt</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IDisable</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Disable all interrupts</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IEnable</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Enable all interrupts</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Interrupt data</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetTrapData</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get interrupt data for current TRAP</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadErrData</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get information about an error</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Data type of interrupts</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">intnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define the identity of an interrupt.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">trapdata</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Contain the interrupt data that caused the current TRAP routine to be executed.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">errtype</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Specify an error type (gravity)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">errdomain</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Order and enable an interrupt when an error occurs.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">errdomain</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Specify an error domain.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-23">
               <title>Safe Interrupt</title>
               <paragraph>Some instructions, for example <phrase class="script">ITimer</phrase> and <phrase class="script">ISignalDI</phrase>, can be used together with Safe Interrupt. Safe Interrupts are interrupts that will be queued if they arrive during stop or stepwise execution.The queued interrupts will be dealt with as soon as continuos execution is started, they will be handled in <italic>FIFO</italic> order. Interrupts in queue at stop will also be dealt with. The instruction <phrase class="script">ISleep</phrase> can not be used together with safe interrupts.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Interrupt manipulation</title>
               <paragraph>Defining an interrupt makes it known to the system. The definition specifies the interrupt condition and activates and enables the interrupt.</paragraph>
               <paragraph>Example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">VAR intnum sig1int; </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">ISignalDI di1, high, sig1int;</phrase>
                  </paragraph>
               </wrapper>
               <paragraph>An activated interrupt may in turn be deactivated (and vice versa).</paragraph>
               <paragraph>During the deactivation time, any generated interrupts of the specified type are thrown away without any trap execution.</paragraph>
               <paragraph>Example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">! deactivate</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">ISleep sig1int;</phrase>
                  </paragraph>
                  <paragraph/>
                  <paragraph>
                     <phrase class="notranslate">! activate</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">IWatch sig1int;</phrase>
                  </paragraph>
               </wrapper>
               <paragraph>An enabled interrupt may in turn be disabled (and vice versa).</paragraph>
               <paragraph>During the disable time, any generated interrupts of the specified type are queued and raised first when the interrupts are enabled again.</paragraph>
               <paragraph>Example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">! disable</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">IDisable sig1int;</phrase>
                  </paragraph>
                  <paragraph/>
                  <paragraph>
                     <phrase class="notranslate">1 enable</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">IEnable sig1int;</phrase>
                  </paragraph>
               </wrapper>
               <paragraph>Deleting an interrupt removes its definition. It is not necessary to explicitly remove an interrupt definition, but a new interrupt cannot be defined to an interrupt variable until the previous definition has been deleted.</paragraph>
               <paragraph>Example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">IDelete sig1int;</phrase>
                  </paragraph>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Trap routines<indexterm id="index173">
                     <primary>trap routines</primary>
                  </indexterm>
               </title>
               <paragraph>Trap routines provide a means of dealing with interrupts. A trap routine can be connected to a particular interrupt using the <phrase class="notranslate">
                     <phrase class="script">CONNECT</phrase>
                  </phrase> instruction. When an interrupt occurs, control is immediately transferred to the associated trap routine (if any). If an interrupt occurs, that does not have any connected trap routine, this is treated as a fatal error, that is causes immediate termination of program execution.</paragraph>
               <paragraph>Example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">VAR intnum empty;</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">VAR intnum full;</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">PROC main()</phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">! Connect trap routines</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">CONNECT empty WITH etrap;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">CONNECT full WITH ftrap;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">! Define feeder interrupts</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ISignalDI di1, high, empty;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ISignalDI di3, high, full;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">...</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">! Delete interrupts</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">IDelete empty;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">IDelete full;</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDPROC</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">! Responds to âfeeder emptyâ interrupt</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">TRAP etrap</phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">open_valve;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">RETURN;</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDTRAP</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">! Responds to âfeeder fullâ interrupt</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">TRAP ftrap</phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">close_valve;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">RETURN;</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDTRAP</phrase>
                  </paragraph>
               </wrapper>
               <paragraph>Several interrupts may be connected to the same trap routine. The system variable <phrase class="notranslate">
                     <phrase class="script">INTNO</phrase>
                  </phrase> contains the interrupt number and can be used by a trap routine to identify an interrupt. After the necessary action has been taken, a trap routine can be terminated using the <phrase class="notranslate">
                     <phrase class="script">RETURN</phrase>
                  </phrase> instruction or when the end (<phrase class="notranslate">
                     <phrase class="script">ENDTRAP</phrase>
                  </phrase> or <phrase class="notranslate">
                     <phrase class="script">ERROR</phrase>
                  </phrase>) of the trap routine is reached. Execution continues from the place where the interrupt occurred.</paragraph>
            </wrapper>
         </section>
         <section>
            <title>Error recovery<indexterm id="index174">
                  <primary>error recovery</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Introduction</title>
               <paragraph>Many of the errors that occur when a program is being executed can be handled in the program, which means that program execution does not have to be interrupted. These errors are either of a type detected by the system, such as division by zero, or of a type that is raised by the program, such as a program raising an error when an incorrect value is read by a bar code reader.</paragraph>
               <paragraph>An execution error is an abnormal situation, related to the execution of a specific piece of a program. An error makes further execution impossible (or at least hazardous). <italic>Overflow</italic> and <italic>division by zero</italic> are examples of errors.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Error numbers</title>
               <paragraph>
                  <indexterm id="index175">
                     <primary>error numbers</primary>
                  </indexterm>Errors are identified by their unique error number and are always recognized by the system. The occurrence of an error causes suspension of the normal program execution and the control is passed to an error handler. The concept of error handlers makes it possible to respond to and, possibly, recover from errors that arise during program execution. If further execution is not possible, the error handler can at least assure that the program is given a graceful abortion.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>When an error occurs, the error handler of the routine is called (if there is one). It is also possible to create an error from within the program and then jump to the error handler.</paragraph>
               <paragraph>In an error handler, errors can be handled using ordinary instructions. The system data <phrase class="notranslate">
                     <phrase class="script">ERRNO</phrase>
                  </phrase> can be used to determine the type of error that has occurred. A return from the error handler can then take place in various ways (<phrase class="notranslate">
                     <phrase class="script">RETURN</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">RETRY</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">TRYNEXT</phrase>
                  </phrase>, and <phrase class="notranslate">
                     <phrase class="script">RAISE</phrase>
                  </phrase>).</paragraph>
               <paragraph>If the current routine does not have an error handler, the internal error handler of the robot takes over directly. The internal error handler gives an error message and stops program execution with the program pointer at the faulty instruction.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Creating an error situation from within the program Instruction</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RAISE</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Create an error and call the error handler</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Booking an error number instruction<indexterm id="index176">
                     <primary>error numbers</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BookErrNo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Book a new RAPID system error number.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Restarting/returning from the error handler</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EXIT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop program execution in the event of a fatal error</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RAISE</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Call the error handler of the routine that called the current routine</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RETRY</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Re-execute the instruction that caused the error</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TRYNEXT</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute the instruction following the instruction that caused the error</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RETURN</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Return to the routine that called the current routine</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RaiseToUser</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>From a NOSTEPIN routine, the error is raised to the error handler at user level.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StartMoveRetry</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>An instruction that replaces the two instructions StartMove and RETRY. It both resumes movements and re-execute the instruction that caused the error.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SkipWarn</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Skip the latest requested warning message.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ResetRetryCount</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset the number of counted retries.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RemainingRetries</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Remaining retries left to do.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Generate process error</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ErrLog</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Display an error message on the <phrase class="notranslate">FlexPendant</phrase> and write it in the robot message log.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ErrRaise</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Create an error in the program and then call the error handler of the routine.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ProcerrRecovery</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Generate process error during robot movement.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Data for error handling</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">errnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The reason for the error</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">errstr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Text in an error message</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Configuration for error handling</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>System parameter</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to define</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <italic>No Of Retry</italic>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>The number of times a failing instruction will be retried if the error handler use <phrase class="notranslate">
                                 <phrase class="script">RETRY</phrase>
                              </phrase>. <phrase class="notranslate">
                                 <italic>No Of Retry</italic>
                              </phrase> belongs to the type <phrase class="notranslate">
                                 <italic>System Misc</italic>
                              </phrase> in the topic <phrase class="notranslate">
                                 <italic>Controller</italic>
                              </phrase>.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Error handlers<indexterm id="index177">
                     <primary>error handlers</primary>
                  </indexterm>
               </title>
               <paragraph>Any routine may include an error handler. The error handler is really a part of the routine, and the scope of any routine data also comprises the error handler of the routine. If an error occurs during the execution of the routine, control is transferred to its error handler.</paragraph>
               <paragraph>Example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">FUNC num safediv( num x, num y) </phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">RETURN x / y; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ERROR</phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">IF ERRNO = ERR_DIVZERO THEN </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">TPWrite "The number cannot be equal to 0"; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">RETURN x; </phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDIF </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDFUNC</phrase> 
                  </paragraph>
               </wrapper>
               <paragraph>
                  <indexterm id="index178">
                     <primary>
                        <phrase class="notranslate">ERRNO</phrase>
                     </primary>
                  </indexterm>The system variable <phrase class="notranslate">
                     <phrase class="script">ERRNO</phrase>
                  </phrase> contains the error number of the (most recent) error and can be used by the error handler to identify that error. After any necessary actions have been taken, the error handler can:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Resume execution, starting with the instruction in which the error occurred. This is done using the <phrase class="notranslate">
                           <phrase class="script">RETRY</phrase>
                        </phrase> instruction. If this instruction causes the same error again, up to four error recoveries will take place; after that execution will stop. To be able to make more than four retries, you have to configure the system parameter <phrase class="notranslate">
                           <italic>No Of Retry</italic>
                        </phrase>, see <phrase class="variable" type="Reference.TRM.SystemParameters">
                           <phrase>
                              <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                              <paragraph class="abb.maintitle">System parameters</paragraph>
                           </phrase>
                        </phrase>.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Resume execution, starting with the instruction following the instruction in which the error occurred. This is done using the <phrase class="notranslate">
                           <phrase class="script">TRYNEXT</phrase>
                        </phrase> instruction.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Return control to the caller of the routine using the <phrase class="notranslate">
                           <phrase class="script">RETURN</phrase>
                        </phrase> instruction. If the routine is a function, the <phrase class="notranslate">
                           <phrase class="script">RETURN</phrase>
                        </phrase> instruction must specify an appropriate return value.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Propagate the error to the caller of the routine using the <phrase class="notranslate">
                           <phrase class="script">RAISE</phrase>
                        </phrase> instruction.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>System error handler</title>
               <paragraph>When an error occurs in a routine that does not contain an error handler or when the end of the error handler is reached (<phrase class="notranslate">
                     <phrase class="script">ENDFUNC</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">ENDPROC</phrase>
                  </phrase> or <phrase class="notranslate">
                     <phrase class="script">ENDTRAP</phrase>
                  </phrase>), the <italic>system error handler</italic> is called. The system error handler just reports the error and stops the execution.</paragraph>
               <paragraph>In a chain of routine calls, each routine may have its own error handler. If an error occurs in a routine with an error handler, and the error is explicitly propagated using the <phrase class="notranslate">RAISE</phrase> instruction, the same error is raised again at the point of the call of the routine - the error is <italic>propagated</italic>. When the top of the call chain (the entry routine of the task) is reached without any error handler being found or when the end of any error handler is reached within the call chain, the system error handler is called. The system error handler just reports the error and stops the execution. Since a trap routine can only be called by the system (as a response to an interrupt), any propagation of an error from a trap routine is made to the system error handler.</paragraph>
               <paragraph>Error recovery is not available for instructions in the backward handler. Such errors are always propagated to the system error handler.</paragraph>
               <paragraph>It is not possible to recover from or respond to errors that occur within an error handler. Such errors are always propagated to the system error handler.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Errors raised by the program</title>
               <paragraph>In addition to errors detected and raised by the robot, a program can explicitly raise errors using the <phrase class="notranslate">RAISE</phrase> instruction. This facility can be used to recover from complex situations. It can, for example, be used to escape from deeply nested code positions. Error numbers 1-90 may be used in the raise instruction. Explicitly raised errors are treated exactly like errors raised by the system.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>The event log<indexterm id="index179">
                     <primary>event log</primary>
                  </indexterm>
               </title>
               <paragraph>Errors that are handled by an error handler still result in a warning in the event log. By looking in the event log it is possible to track what errors that have occurred.</paragraph>
               <paragraph>If you want an error to be handled without writing a warning in the event log, use the instruction <phrase class="notranslate">
                     <phrase class="script">SkipWarn</phrase>
                  </phrase> in the error handler. This can be useful when using the error handler to test something (for example if a file exists) without leaving any trails if the test fails.</paragraph>
            </wrapper>
         </section>
         <section>
            <title>
               <phrase class="notranslate">UNDO</phrase>
               <indexterm id="index180">
                  <primary>
                     <phrase class="notranslate">UNDO</phrase>
                  </primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Introduction</title>
               <paragraph>RAPID routines may contain an <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase> handler. The handler is executed automatically if the program pointer is moved out of the routine. This is supposed to be used for cleaning up remaining side-effects after partially executed routines, for example canceling modal instructions (such as opening a file). Most parts of the RAPID language can be used in an <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase> handler, but there are some limitations, for example motion instructions.</paragraph>
               <paragraph>The code in the UNDO handler shall be executed as fast as possible without any delays, since the user probably is not aware of that any code will be run at that point.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Terminology</title>
               <paragraph>The following terms are related to <phrase class="notranslate">UNDO</phrase>.</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">UNDO</phrase>: The execution of cleaning up code prior to a program reset.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">UNDO</phrase> handler: An optional part of a RAPID procedure or function containing RAPID code that is executed on an <phrase class="notranslate">UNDO</phrase>.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">UNDO</phrase> routine: A procedure or a function with an <phrase class="notranslate">UNDO</phrase> handler.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Call-chain: All procedures or functions currently associated to each other through not-yet finished routine invocations. Assumed to start in the routine <phrase class="notranslate">Main</phrase> if nothing else is specified.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">UNDO</phrase> context: When the current routine is part of a call-chain starting in an <phrase class="notranslate">UNDO</phrase> handler.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>When to use <phrase class="notranslate">UNDO</phrase>
               </title>
               <paragraph>A RAPID routine can be aborted at any point by moving the program pointer out of the routine. In some cases, when the program is executing certain sensitive routines, it is unsuitable to abort. Using <phrase class="notranslate">UNDO</phrase> it is possible to protect such sensitive routines against an unexpected program reset. With <phrase class="notranslate">UNDO</phrase> it is possible to have certain code executed automatically if the routine is aborted. This code should typically perform clean-up actions, for instance closing a file.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>
                  <phrase class="notranslate">UNDO</phrase> behavior in detail</title>
               <paragraph>When <phrase class="notranslate">UNDO</phrase> is activated, all <phrase class="notranslate">UNDO</phrase>-handlers in the current call-chain are executed. These handlers are optional parts of a RAPID procedure or function, containing RAPID code. The currently active <phrase class="notranslate">UNDO</phrase>-handlers are those who belong to procedures or functions that has been invoked but not yet terminated, that is the routines in the current call-chain.</paragraph>
               <paragraph>
                  <phrase class="notranslate">UNDO</phrase> is activated when the program pointer is unexpectedly moved out of an <phrase class="notranslate">UNDO</phrase>-routine, for instance if the user moves the program pointer to <phrase class="notranslate">Main</phrase>. <phrase class="notranslate">UNDO</phrase> is also started if an <phrase class="notranslate">
                     <phrase class="script">EXIT</phrase>
                  </phrase> instruction is executed, causing the program to be reset, or if the program is reset for some other reason, for instance when changing some configuration or if the program or module is deleted. However, <phrase class="notranslate">UNDO</phrase> is not started if the program reaches the end of the routine or a <phrase class="notranslate">
                     <phrase class="script">RETURN</phrase>
                  </phrase> statement and returns as usual from the routine.</paragraph>
               <paragraph>If there is more than one <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase> routine in the call-chain, the <phrase class="notranslate">UNDO</phrase>-handlers of the routines will be processed in the same order the routines would have returned, bottom-up. The <phrase class="notranslate">UNDO</phrase>-handler closest to the end of the call-chain will execute first and the one closest to <phrase class="notranslate">Main</phrase> will execute last.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Limitations</title>
               <paragraph>An <phrase class="notranslate">UNDO</phrase>-handler can access any variable or symbol reachable from the normal routine body, including locally declared variables. RAPID code that are to be executed in <phrase class="notranslate">UNDO</phrase> context has however limitations.</paragraph>
               <paragraph>An <phrase class="notranslate">UNDO</phrase>-handler must not contain <phrase class="notranslate">
                     <phrase class="script">STOP</phrase>
                  </phrase>, <phrase class="value">
                     <phrase class="script">DEBUGBREAK</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">RAISE</phrase>
                  </phrase>, or <phrase class="notranslate">
                     <phrase class="script">RETURN</phrase>
                  </phrase>. If an attempt is made to use any of these instructions in UNDO context, the instruction will be ignored and an <phrase class="notranslate">ELOG</phrase> warning is generated.</paragraph>
               <paragraph>Motion instructions, for example <phrase class="notranslate">
                     <phrase class="script">MoveL</phrase>
                  </phrase>, are not allowed in <phrase class="notranslate">UNDO</phrase> context either.</paragraph>
               <paragraph>The execution is always continuous in <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase>, it is not possible to step. When <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase> starts, the execution mode is set to continuous automatically. After the <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase> session is finished, the old execution mode is restored.</paragraph>
               <paragraph>If the program is stopped while executing an <phrase class="notranslate">UNDO</phrase>-handler, the rest of the handler will not be executed. If there are additional <phrase class="notranslate">UNDO</phrase>-handlers in the call-chain that have not yet been executed, they will be ignored as well. This will result in an <phrase class="notranslate">ELOG</phrase> warning. This also includes stopping due to a runtime error.</paragraph>
               <paragraph>The program pointer is not visible in an <phrase class="notranslate">UNDO</phrase>-handler. When <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase> executes, the program pointer remains at its old location, but is updated when the <phrase class="notranslate">UNDO</phrase>-handler(s) are finished.</paragraph>
               <paragraph>An <phrase class="notranslate">
                     <phrase class="script">EXIT</phrase>
                  </phrase> instruction aborts <phrase class="notranslate">
                     <phrase class="script">UNDO</phrase>
                  </phrase> in similar way as a Run-time error or a <phrase class="notranslate">
                     <phrase class="script">Stop</phrase>
                  </phrase>. The rest of the <phrase class="notranslate">UNDO</phrase>-handlers are ignored and the program pointer is moved to <phrase class="notranslate">Main</phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Example</title>
               <paragraph>The program:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">PROC B </phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">TPWrite "In Routine B"; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">Exit; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">UNDO </phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">TPWrite "In UNDO of routine B"; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDPROC </phrase>
                  </paragraph>
                  <paragraph/>
                  <paragraph>
                     <phrase class="notranslate">PROC A </phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">TPWrite "In Routine A"; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">B; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDPROC </phrase>
                  </paragraph>
                  <paragraph/>
                  <paragraph>
                     <phrase class="notranslate">PROC main </phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">TPWrite "In main"; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">A; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">UNDO </phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">TPWrite "In UNDO of main"; </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">ENDPROC </phrase>
                  </paragraph>
               </wrapper>
               <paragraph>The output:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">In main </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">In Routine A </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">In Routine B </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">In UNDO of routine B </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">In UNDO of main</phrase>
                  </paragraph>
               </wrapper>
               <wrapper class="figure">
                  <image alt="id(120172)xx1100000588_Error_Recovery_Undo" fileref="url(file:/F:/SkribentaFiles/FileRepository/2/7/9/72)" format="75%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/2/7/9/72" xsize="374" ysize="277" src="images/xx1100000588_Error_Recovery_Undo.jpg"/>
               </wrapper>
            </wrapper>
         </section>
         <section>
            <title>System &amp; time<indexterm id="index181">
                  <primary>time instructions</primary>
               </indexterm>
               <indexterm id="index182">
                  <primary>clock</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>System and time instructions allow the user to measure, inspect and record time.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>Clock instructions allow the user to use clocks that function as stopwatches. In this way the robot program can be used to time any desired event.</paragraph>
               <paragraph>The current time or date can be retrieved in a string. This string can then be displayed to the operator on the FlexPendant display or used to time and date-stamp log files.</paragraph>
               <paragraph>It is also possible to retrieve components of the current system time as a numeric value. This allows the robot program to perform an action at a certain time or on a certain day of the week.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Using a clock to time an event</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ClkReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset a clock used for timing</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ClkStart</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Start a clock used for timing</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ClkStop</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop a clock used for timing</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ClkRead</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read a clock used for timing</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">clock</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Timing â stores a time measurement in seconds</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Reading current time and date</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CDate</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current date as a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CTime</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current time as a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetTime</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read the current time as a numeric value</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Retrieve time information from file</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">FileTimeDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve the last time for modification of a file.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ModTimeDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve file modify time for the loaded module.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ModExist</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if program module exist.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get the size of free program memory</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ProgMemFree</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve the size of free program memory.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Mathematics<indexterm id="index183">
                  <primary>mathematical instructions</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>Mathematical instructions and functions are used to calculate and change the value of data.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Programming principles</title>
               <paragraph>Calculations are normally performed using the assignment instruction, for example <phrase class="notranslate">
                     <phrase class="script">reg1:= reg2 + reg3 / 5</phrase>
                  </phrase>. There are also some instructions used for simple calculations, such as to clear a numeric variable.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Simple calculations on numeric data</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Clear</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Clear the value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Add</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Add or subtract a value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Incr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Increment by 1</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Decr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Decrement by 1</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Rand</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Generate a random number</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>More advanced calculations</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">:=</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Perform calculations on any type of data.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-24">
               <title>Arithmetic functions<indexterm id="index184">
                     <primary>arithmetic functions</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Abs</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the absolute value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">AbsDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the absolute value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Round</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Round a numeric value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RoundDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Round a numeric value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Trunc</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Truncate a numeric value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TruncDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Truncate a numeric value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Max</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Returns the largest of two values.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Min</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Returns the smallest of two values.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Sqrt</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the square root</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SqrtDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the square root</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Exp</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the exponential value with the base "e"</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Pow</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the exponential value with an arbitrary base</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PowDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the exponential value with an arbitrary base</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ACos</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc cosine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ACosDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc cosine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ASin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc sine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ASinDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc sine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ATan</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc tangent value in the range <phrase class="value">[-90,90]</phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ATanDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc tangent value in the range <phrase class="value">[-90,90]</phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ATan2</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc tangent value in the range <phrase class="value">[-180,180]</phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ATan2Dnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the arc tangent value in the range <phrase class="value">[-180,180]</phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Cos</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the cosine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CosDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the cosine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Sin</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the sine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SinDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the sine value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">Tan</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the tangent value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TanDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the tangent value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EulerZYX</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate Euler angles from an orientation</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">OrientZYX</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the orientation from Euler angles</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PoseInv</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Invert a pose</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PoseMult</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Multiply a pose</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PoseVect</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Multiply a pose and a vector</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">VectMagn</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the magnitude of a pos vector</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DotProd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the dot (or scalar) product of two pos vectors</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CrossProd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the cross (or vector) product of two pos vectors</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">NOrient</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Normalize unnormalized orientation (quaternion)</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>String digit functions</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrDigCmp</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Numeric compare of two strings with only digits</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrDigCalc</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Arithmetic operations on two strings with only digits</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">stringdig</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>String with only digits</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-25">
               <title>Bit functions<indexterm id="index185">
                     <primary>bit functions</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitClear</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Clear a specified bit in a defined byte or dnum data.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set a specified bit to 1 in a defined byte or dnum data.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitCheck</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if a specified bit in a defined byte data is set to 1.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitCheckDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if a specified bit in a defined dnum data is set to 1.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitAnd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>AND</italic> operation on data types byte.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitAndDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>AND</italic> operation on data types dnum.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitNeg</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise NEGATION operation on data types byte.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitNegDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise NEGATION operation on data types dnum.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitOr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>OR</italic> operation on data types byte.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitOrDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>OR</italic> operation on data types dnum.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitXOr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>XOR</italic> operation on data types byte.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitXOrDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>XOR</italic> operation on data types dnum.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitLSh</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>LEFT SHIFT</italic> operation on data types byte.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitLShDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>LEFT SHIFT</italic> operation on data types dnum.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitRSh</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>RIGHT SHIFT</italic> operation on data types byte.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">BitRShDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execute a logical bitwise <italic>RIGHT SHIFT</italic> operation on data types dnum.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">byte</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Used together with instructions and functions that handle bit manipulation (<phrase class="value">8</phrase> bits).</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">dnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Used together with instructions and functions that handle bit manipulation (<phrase class="value">52</phrase> bits).</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-26">
               <title>Matrix functions</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixAdd</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculates the sum of two matrices.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixInverse</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Inverse a matrix.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixMult</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Multiply two matrices, or multiply matrix with scalar.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set all elements in a matrix to 0.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixSolve</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Solve linear equation systems on the form A*x=b.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixSolveQR</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Compute a QR-factorization of an (m x n) matrix A.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixSub</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculates the difference between two matrices</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixSVD</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Compute a singular value decomposition (SVD).</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">MatrixTranspose</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Transpose a matrix.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-27">
               <title>Fitting shapes to points</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">FitCirle</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Fit a circle to 3D-points.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">FitLine</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Fit a line to a set of points.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">FitPlane</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Fit a plane to a set of points.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">
                                 <phrase class="script">FitSphere</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Fit a sphere to a set of points.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>File operation functions<indexterm id="index186">
                  <primary>file operation functions</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Instructions</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MakeDir</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Create a new directory.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RemoveDir</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Remove a directory.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">OpenDir</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Open a directory for further investigation.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CloseDir</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Close a directory in balance with <phrase class="notranslate">
                                 <phrase class="script">OpenDir</phrase>
                              </phrase>.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph class="script">
                              <phrase class="notranslate">
                                 <phrase class="script">RemoveFile</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Remove a file.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph class="script">
                              <phrase class="notranslate">
                                 <phrase class="script">RenameFile</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Rename a file.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph class="script">
                              <phrase class="notranslate">
                                 <phrase class="script">CopyFile</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Copy a file.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Functions</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ISFile</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check the type of a file.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">FSSize</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve the size of a file system.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">FileSize</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve the size of a specified file.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadDir</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read next entry in a directory.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Data types</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">dir</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Traverse directory structures.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section id="newid-28">
            <title>RAPID support instructions</title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>Various functions for supporting of the RAPID language:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Get system data, system information, memory information</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Read and write configuration data</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Restart the controller</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Test system data</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Get object name</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Get task name</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Search for symbols</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Get current event type, execution handler or execution level</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Read service information</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Get system data<indexterm id="index187">
                     <primary>system data</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetSysData</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get data and name of current active tool or work object.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ResetPPMoved</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset state for the program pointer moved in manual mode.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SetSysData</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Activate a specified system data name for a specified data type.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IsSysID</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test the system identity.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IsStopStateEvent</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get information about the movement of the program pointer (PP).</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">PPMovedInManMode</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test whether the program pointer is moved in manual mode.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">RobOS</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if the execution is performed on robot controller (RC) or virtual controller (VC).</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get information about the system<indexterm id="index188">
                     <primary>system information</primary>
                  </indexterm>
                  <indexterm id="index189">
                     <primary>options</primary>
                  </indexterm>
               </title>
               <paragraph>Functions to get information about options, products, serial number, software version, robot type, LAN IP address, or controller language.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetNextOption</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get name of options installed.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetNextProduct</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get name of products installed.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetSysInfo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get information about the system.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get information about memory<indexterm id="index190">
                     <primary>memory</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ProgMemFree</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the size of free program memory</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Read configuration data<indexterm id="index191">
                     <primary>configuration data</primary>
                  </indexterm>
               </title>
               <paragraph>Instruction to read one attribute of a named system parameter.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ReadCfgData</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read one attribute of a named system parameter.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Write configuration data<indexterm id="index192">
                     <primary>configuration data</primary>
                  </indexterm>
               </title>
               <paragraph>Instruction to write one attribute of a named system parameter.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WriteCfgData</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Write one attribute of a named system parameter.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-29">
               <title>Save configuration data<indexterm id="index193">
                     <primary>configuration data</primary>
                  </indexterm>
               </title>
               <paragraph>Instruction to save system parameter to file.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SaveCfgData</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Save system parameters to file</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Restart the controller<indexterm id="index194">
                     <primary>restart the controller</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WarmStart</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Restart the controller for example when you have changed system parameters from RAPID.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Text tables instructions</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TextTabInstall</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Install a text table in the system.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TextTabGet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the text table number of a user defined text table.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TextGet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get a text string from the system text tables.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TextTabFreeToUse</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test whether the text table name (text resource string) is free to use or not.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get object name</title>
               <paragraph>Instruction to get the name of an original data object for a current argument or current data.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ArgName</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Return the original data object name.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get information about the tasks<indexterm id="index195">
                     <primary>tasks</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetTaskName</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the identity of the current program task, with its name and number.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MotionPlannerNo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the number of the current motion planner.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">TaskIsExecuting</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if a task is executing</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get current event type, execution handler or execution level<indexterm id="index196">
                     <primary>event type</primary>
                  </indexterm>
                  <indexterm id="index197">
                     <primary>execution handler</primary>
                  </indexterm>
                  <indexterm id="index198">
                     <primary>execution level</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">EventType</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get current event routine type.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ExecHandler</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get type of execution handler.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ExecLevel</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get execution level.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">event_type</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Event routine type.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">handler_type</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Type of execution handler.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">exec_level</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Execution level.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Get current task selection panel status for a program task<indexterm id="index199">
                     <primary>task selection panel</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">GetTSPStatus</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get current task selection panel status</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">TaskIsActive</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if a normal task is active</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="value">tsp_status</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Task selection panel status</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Search for symbols</title>
               <paragraph>Instructions to search for data objects in the system.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SetAllDataVal</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set a new value to all data objects of a certain type that match a given grammar.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SetDataSearch</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Together with <phrase class="notranslate">
                                 <phrase class="script">GetNextSym</phrase>
                              </phrase> data objects can be retrieved from the system.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetDataVal</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get a value from a data object that is specified with a string variable.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SetDataVal</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Set a value for a data object that is specified with a string variable.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetNextSym</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Together with <phrase class="notranslate">
                                 <phrase class="script">SetDataSearch</phrase>
                              </phrase> data objects can be retrieved from the system.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">datapos</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Holds information of where a certain object is defined in the system.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Read service information<indexterm id="index200">
                     <primary>service information</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetServiceInfo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read service information from the system.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Calibration &amp; service<indexterm id="index201">
                  <primary>calibration</primary>
               </indexterm>
               <indexterm id="index202">
                  <primary>service</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>A number of instructions are available to calibrate and test the robot system.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Calibration of the tool</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MToolRotCalib</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calibrate the rotation of a moving tool.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">MToolTCPCalib</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calibrate tool center point (TCP) for a moving tool.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SToolRotCalib</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calibrate tool center point (TCP) and rotation of a stationary tool.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SToolTCPCalib</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calibrate tool center point (TCP) for a stationary tool</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Various calibration methods</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CalcRotAxisFrame</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the user coordinate system of a rotational axis type.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">CalcRotAxFrameZ</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Calculate the user coordinate system of a rotational axis type when the master robot and the additional axis are located in different RAPID tasks.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DefAccFrame</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a frame from original positions and displaced positions.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Directing a value to the robotâs test signal</title>
               <paragraph>A reference signal, such as the speed of a motor, can be directed to an analog output signal located on the backplane of the robot.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TestSignDefine</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Define a test signal</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TestSignReset</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset all test signals definitions</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TestSignRead</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Read test signal value</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">testsignal</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>For programming instruction <phrase class="notranslate">
                                 <phrase class="script">TestSignDefine</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Recording of an execution</title>
               <paragraph>The recorded data is stored in a file for later analysis, and is intended for debugging RAPID programs, specifically for multi-tasking systems.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SpyStart</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Start the recording of instruction and time data during execution.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SpyStop</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Stop the recording of time data during execution.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section id="newid-30">
            <title>String functions<indexterm id="index203">
                  <primary>string functions</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>String functions are used for operations with strings such as copying, concatenation, comparison, searching, conversion, etc.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Basic operations</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">string</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>String.</paragraph>
                           <paragraph>Predefined constants <phrase class="notranslate">
                                 <phrase class="script">STR_DIGIT</phrase>
                              </phrase>, <phrase class="notranslate">
                                 <phrase class="script">STR_UPPER</phrase>
                              </phrase>, <phrase class="notranslate">
                                 <phrase class="script">STR_LOWER</phrase>
                              </phrase>, and <phrase class="notranslate">
                                 <phrase class="script">STR_WHITE</phrase>
                              </phrase>.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction/operator</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrFormat</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Format a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">:=</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Assign a value (copy of string)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">+</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>String concatenation</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrLen</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Find string length</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrPart</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Obtain part of a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrSize</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Find string size</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Comparison and searching</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Operator</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">=</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test if equal to</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">&lt;&gt;</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Test if not equal to</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrMemb</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if character belongs to a set</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrFind</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Search for character in a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrMatch</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Search for pattern in a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrOrder</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if strings are in order</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Conversion<indexterm id="index204">
                     <primary>conversion</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DnumToNum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a dnum numeric value to a num numeric value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DnumToStr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a numeric value to a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">NumToDnum</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a num numeric value to a dnum numeric value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">NumToStr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a numeric value to a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ValToStr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a value to a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrToVal</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a string to a value</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrMap</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Map a string</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">StrToByte</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a string to a byte</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">ByteToStr</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a byte to string data</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">DecToHex</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a number specified in a readable string in the base 10 to the base 16</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">HexToDec</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Convert a number specified in a readable string in the base 16 to the base 10</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Multitasking<indexterm id="index205">
                  <primary>Multitasking</primary>
               </indexterm>
               <indexterm id="index206">
                  <primary>tasks</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>The events in a robot cell are often in parallel, so why are the programs not in parallel?</paragraph>
               <paragraph>
                  <italic>Multitasking RAPID</italic> is a way to execute programs in (pseudo) parallel. One parallel program can be placed in the background or foreground of another program. It can also be on the same level as another program.</paragraph>
               <paragraph>For all settings, see <phrase class="variable" type="Reference.TRM.SystemParameters">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">System parameters</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Limitations</title>
               <paragraph>There are a few restrictions on the use of Multitasking RAPID.</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Do not mix up parallel programs with a PLC. The response time is the same as the interrupt response time for one task. This is true, of course, when the task is not in the background of another busy program.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>When running a <phrase class="notranslate">
                           <phrase class="script">Wait</phrase>
                        </phrase> instruction in manual mode, a simulation box will come up after 3 seconds. This will only occur in a <phrase class="notranslate">
                           <bold>NORMAL</bold>
                        </phrase> task.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Move instructions can only be executed in the motion task (the task bind to program instance 0, see <phrase class="variable" type="Reference.TRM.SystemParameters">
                           <phrase>
                              <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                              <paragraph class="abb.maintitle">System parameters</paragraph>
                           </phrase>
                        </phrase>).</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>The execution of a task will halt during the time that some other tasks are accessing the file system, that is if the operator chooses to save or open a program, or if the program in a task uses the load/erase/read/write instructions.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>The FlexPendant cannot access other tasks than a <bold>
                           <phrase class="notranslate">NORMAL</phrase>
                        </bold> task. So, the development of RAPID programs for other <phrase class="notranslate">
                           <bold>SEMISTATIC </bold>
                        </phrase>or <phrase class="notranslate">
                           <bold>STATIC</bold>
                        </phrase> tasks can only be done if the code is loaded into a <phrase class="notranslate">
                           <bold>NORMAL</bold>
                        </phrase> task, or offline.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Basics</title>
               <paragraph>To use this function the robot must be configured with one extra TASK for each additional program. Each task can be of type <phrase class="notranslate">
                     <bold>NORMAL</bold>
                  </phrase>, <phrase class="notranslate">
                     <bold>STATIC</bold>
                  </phrase>, or <phrase class="notranslate">
                     <bold>SEMISTATIC</bold>
                  </phrase>.</paragraph>
               <paragraph>Up to 20 different tasks can be run in pseudo parallel. Each task consists of a set of modules, in the same way as the normal program. All the modules are local in each task.</paragraph>
               <paragraph>Variables, constants, and persistents are local in each task, but global persistents are not. A persistent is global by default, if not declared as <phrase class="notranslate">LOCAL</phrase> or <phrase class="notranslate">TASK</phrase>. A global persistent with the same name and type is reachable in all tasks that it is declared in. If two global persistents have the same name, but their type or size (array dimension) differ, a runtime error will occur.</paragraph>
               <paragraph>A task has its own trap handling and the event routines are triggered only on its own task system states (for example Start/Stop/Restart....).</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>General instructions and functions</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitSyncTask</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>If the robot is equipped with the option <italic>
                                       <phrase class="notranslate">MultiTasking</phrase>
                                    </italic>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Synchronize several program tasks at a special point in each program</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TestAndSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve exclusive right to specific RAPID code areas or system resources (type user poll)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">WaitTestAndSet</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Retrieve exclusive right to specific RAPID code areas or system resources (type interrupt control)</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TaskRunMec</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if the program task controls any mechanical unit.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TaskRunRob</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Check if the program task controls any TCP-robot</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">GetMecUnitName</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Get the name of the mechanical unit</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">taskid</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Identify available program tasks in the system.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">syncident</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Specify the name of a synchronization point</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">tasks</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Specify several RAPID program tasks</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>MultiMove system with coordinated robots<indexterm id="index207">
                     <primary>MultiMove</primary>
                  </indexterm>
               </title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Instruction</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph id="newid-31">
                              <phrase class="notranslate">
                                 <phrase class="script">SyncMoveOn</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>If the robot is equipped with the option <italic>
                                       <phrase class="notranslate">MultiMove Coordinated</phrase>
                                    </italic>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Start a sequence of synchronized movements</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SyncMoveOff</phrase>
                              </phrase>
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-31">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>To end synchronized movements</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">SyncMoveUndo</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Reset synchronized movements</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Function</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">IsSyncMoveOn</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Tell if the current task is in synchronized mode</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">TasksInSync</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Returns the number of synchronized tasks</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Data type</paragraph>
                        </td>
                        <td>
                           <paragraph>Used to</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph id="newid-32">
                              <phrase class="notranslate">
                                 <phrase class="script">syncident</phrase>
                              </phrase> 
                              <annotation class="table-note">
                                 <title/>
                                 <paragraph>If the robot is equipped with the option <italic>
                                       <phrase class="notranslate">MultiTasking</phrase>
                                    </italic>.</paragraph>
                              </annotation>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>To specify the name of a synchronization point</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">tasks</phrase>
                              </phrase>
                              <phrase class="superscript">
                                 <link xlink:type="simple" xlink:href="#newid-32">
                                    <reference class="object-reference"/>
                                 </link>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Specify several RAPID program tasks</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">identno</phrase>
                              </phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>Identity for move instructions</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Synchronizing the tasks</title>
               <paragraph>In many applications a parallel task only supervises some cell unit, quite independently of the other tasks being executed. In such cases, no synchronization mechanism is necessary. But there are other applications which need to know what the main task is doing, for example.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Synchronizing using polling</title>
               <paragraph>This is the easiest way to do it, but the performance will be the slowest. Persistents are used together with the instructions <phrase class="notranslate">
                     <phrase class="script">WaitUntil</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">IF</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">WHILE</phrase>
                  </phrase>, or <phrase class="notranslate">
                     <phrase class="script">GOTO</phrase>
                  </phrase>.</paragraph>
               <paragraph>If the instruction <phrase class="notranslate">
                     <phrase class="script">WaitUntil</phrase>
                  </phrase> is used, it will poll internally every 100 ms. Do not poll more frequently in other implementations.</paragraph>
               <wrapper class="titled-block">
                  <title>Example</title>
                  <paragraph>TASK 1:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MODULE module1 </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS bool startsync:=FALSE; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC main()</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">startsync:= TRUE; </phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ENDMODULE </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>TASK 2:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MODULE module2</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS bool startsync:=FALSE;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC main()</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">WaitUntil startsync;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ENDMODULE</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Synchronizing using an interrupt</title>
               <paragraph>The instructions <phrase class="notranslate">
                     <phrase class="script">SetDO</phrase>
                  </phrase> and <phrase class="notranslate">
                     <phrase class="script">ISignalDO</phrase>
                  </phrase> are used.</paragraph>
               <wrapper class="titled-block">
                  <title>Example</title>
                  <paragraph>TASK 1:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MODULE module1 </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC main() </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">SetDO do1,1; </phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ENDMODULE </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>TASK 2:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MODULE module2 </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">VAR intnum isiint1; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC main() </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">CONNECT isiint1 WITH isi_trap; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">ISignalDO do1, 1, isiint1; </phrase>
                        </paragraph>
                        <paragraph/>
                        <paragraph>
                           <phrase class="notranslate">WHILE TRUE DO </phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">WaitTime 200; </phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">ENDWHILE </phrase>
                        </paragraph>
                        <paragraph/>
                        <paragraph>
                           <phrase class="notranslate">IDelete isiint1; </phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC</phrase>
                     </paragraph>
                     <paragraph/>
                     <paragraph>
                        <phrase class="notranslate">TRAP isi_trap</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">.</phrase> 
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDTRAP </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ENDMODULE </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Intertask communication</title>
               <paragraph>All types of data can be sent between two (or more) tasks with global persistent variables.</paragraph>
               <paragraph>A global persistent variable is global in all tasks. The persistent variable must be of the same type and size (array dimension) in all tasks that declared it. Otherwise a runtime error will occur.</paragraph>
               <wrapper class="titled-block">
                  <title>Example</title>
                  <paragraph>TASK 1:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MODULE module1 </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS bool startsync:=FALSE; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS string stringtosend:=ââ; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC main() </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph/>
                        <paragraph>
                           <phrase class="notranslate">stringtosend:=âthis is a testâ;</phrase>
                        </paragraph>
                        <paragraph/>
                        <paragraph>
                           <phrase class="notranslate">startsync:= TRUE </phrase>
                        </paragraph>
                        <paragraph/>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ENDMODULE </phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>
                     <phrase class="notranslate">TASK 2:</phrase>
                  </paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MODULE module2 </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS bool startsync:=FALSE; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PERS string stringtosend:=ââ; </phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">PROC main() </phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph/>
                        <paragraph>
                           <phrase class="notranslate">WaitUntil startsync; </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">!read string </phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">IF stringtosend = âthis is a testâ THEN</phrase>
                        </paragraph>
                        <wrapper class="preformatted" xml:lang="en">
                           <paragraph>
                              <phrase class="notranslate">...</phrase>
                           </paragraph>
                        </wrapper>
                        <paragraph>
                           <phrase class="notranslate">ENDIF</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">ENDMODULE </phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Type of task</title>
               <paragraph>Each task can be of type <phrase class="notranslate">
                     <bold>NORMAL</bold>
                  </phrase>, <phrase class="notranslate">
                     <bold>STATIC </bold>
                  </phrase>or <phrase class="notranslate">
                     <bold>SEMISTATIC</bold>
                  </phrase>.</paragraph>
               <paragraph>
                  <phrase class="notranslate">
                     <bold>STATIC </bold>
                  </phrase>and <phrase class="notranslate">
                     <bold>SEMISTATIC</bold>
                  </phrase> tasks are started in the system startup sequence. If the task is of type <bold>STATIC</bold>, it will be restarted at the current position (where PP was when the system was powered off). If the type is set to <phrase class="notranslate">
                     <bold>SEMISTATIC</bold>
                  </phrase>, it will be started from the beginning each time the power is turned on, and modules specified in the system parameters will be reloaded if the module file is newer that the loaded module.</paragraph>
               <paragraph>Tasks of type <phrase class="notranslate">
                     <bold>NORMAL</bold>
                  </phrase> will not be started at startup. They are started in the normal way, for example, from the FlexPendant.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Priorities<indexterm id="index208">
                     <primary>priority</primary>
                     <secondary>tasks</secondary>
                  </indexterm>
               </title>
               <paragraph>The way to run the tasks as default is to run all tasks at the same level in a round robbin way (one basic step on each instance). But it is possible to change the priority of one task by putting the task in the background of another. Then the background will only execute when the foreground is waiting for some events, or has stopped the execution (idle). A robot program with move instructions will be in an idle state most of the time.</paragraph>
               <paragraph>The example below describes some situations where the system has 10 tasks (see <italic>Figure 9</italic>).</paragraph>
               <paragraph>Round robbin chain 1: tasks 1, 2, and 9 are busy.</paragraph>
               <paragraph>Round robbin chain 2: tasks 1, 4, 5, 6 and 9 are busy tasks 2 and 3 are idle.</paragraph>
               <paragraph>Round robbin chain 3: tasks 3, 5 and 6 are busy tasks 1, 2, 9 and 10 are idle.</paragraph>
               <paragraph>Round robbin chain 4: tasks 7 and 8 are busy tasks 1, 2, 3, 4, 5, 6, 9 and 10 are idle.</paragraph>
               <wrapper class="figure">
                  <image alt="id(120176)xx1100000589_Intertask_communication" fileref="url(file:/F:/SkribentaFiles/FileRepository/2/7/9/73)" format="75%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/2/7/9/73" xsize="376" ysize="382" src="images/xx1100000589_Intertask_communication.jpg"/>
                  <paragraph>
                     <italic>
                        <phrase class="superscript">Figure 9: The tasks can have different priorities</phrase>
                     </italic>
                  </paragraph>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>TrustLevel</title>
               <paragraph>TrustLevel handles the system behavior when a <phrase class="notranslate">
                     <bold>SEMISTATIC</bold>
                  </phrase> or <phrase class="notranslate">
                     <bold>STATIC</bold>
                  </phrase> task is stopped for some reason or not executable.</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>SysFail</bold>
                        </phrase> - This is the default behavior, all other <phrase class="notranslate">
                           <bold>NORMAL</bold>
                        </phrase> tasks will also stop, and the system is set to state <phrase class="notranslate">SYS_FAIL</phrase>. All jog and program start orders will be rejected. Only a new warm start reset the system. This should be used when the task has some security supervisions.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>SysHalt</bold>
                        </phrase> - All <phrase class="notranslate">NORMAL</phrase> tasks will be stopped. The system is forced to motors off. When taking up the system to motors on it is possible to jog the robot, but a new attempt to start the program will be rejected. A new warm start will reset the system.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>SysStop</bold>
                        </phrase> - All <phrase class="notranslate">NORMAL</phrase> tasks will be stopped, but can be restarted. Jogging is also possible.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>
                        <phrase class="notranslate">
                           <bold>NoSafety </bold>
                        </phrase>- Only the actual task itself will stop.</paragraph>
                  </listitem>
               </list>
               <paragraph>See <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                  <paragraph class="abb.maintitle">System parameters</paragraph>, topic <italic>
                     <phrase class="notranslate">Controller</phrase>
                  </italic>, type <italic>
                     <phrase class="notranslate">Task</phrase>
                  </italic>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Recommendation</title>
               <paragraph>When specifying task priorities, think about the following:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>Always use the interrupt mechanism or loops with delays in supervision tasks. Otherwise the FlexPendant will never get any time to interact with the user. And if the supervision task is in foreground, it will never allow another task in background to execute.</paragraph>
                  </listitem>
               </list>
            </wrapper>
         </section>
         <section id="newid-33">
            <title>Backward execution<indexterm id="index209">
                  <primary>backward execution</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>A program can be executed backwards one instruction at a time. The following general restrictions are valid for backward execution:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>It is not possible to step backwards out of a <phrase class="notranslate">
                           <phrase class="script">IF</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">FOR</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">WHILE</phrase>
                        </phrase> and <phrase class="notranslate">
                           <phrase class="script">TEST</phrase>
                        </phrase> statement.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>It is not possible to step backwards out of a routine when reaching the beginning of the routine.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Motion settings instructions, and some other instructions affecting the motion, cannot be executed backwards. If attempting to execute such an instruction a warning will be written in the event log.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Most instructions and functions do not do anything when they are executed backwards.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>When executing backward handlers and there is an execution error, it will not be possible to handle the error in an error handler.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Backward handlers<indexterm id="index210">
                     <primary>backward handler</primary>
                  </indexterm>
               </title>
               <paragraph>Procedures may contain a backward handler that defines the backward execution of a procedure call. If calling a routine inside the backward handler, the routine is executed forward.</paragraph>
               <paragraph>The backward handler is really a part of the procedure and the scope of any routine data also comprises the backward handler of the procedure.</paragraph>
               <paragraph>Instructions in the backward or error handler of a routine may not be executed backwards. Backward execution cannot be nested, that is two instructions in a call chain may not simultaneously be executed backwards.</paragraph>
               <paragraph>A procedure with no backward handler cannot be executed backwards. A procedure with an empty backward handler is executed as âno operationâ.</paragraph>
               <wrapper class="titled-block">
                  <title>Example 1</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC MoveTo ()</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">MoveL p1,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveC p2,p3,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveL p4,v500,z10,tool1;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">BACKWARD</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">MoveL p4,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveC p2,p3,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveL p1,v500,z10,tool1;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>When the procedure is called during forward execution, the following occurs:</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MoveL p1,v500,z10,tool1;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">MoveC p2,p3,v500,z10,tool1;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">MoveL p4,v500,z10,tool1;</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="titled-block">
                  <title>Example 2</title>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">PROC MoveTo ()</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">MoveL p1,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveC p2,p3,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveL p4,v500,z10,tool1;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">BACKWARD</phrase>
                     </paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>
                           <phrase class="notranslate">MoveL p4,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveC p2,p3,v500,z10,tool1;</phrase>
                        </paragraph>
                        <paragraph>
                           <phrase class="notranslate">MoveL p1,v500,z10,tool1;</phrase>
                        </paragraph>
                     </wrapper>
                     <paragraph>
                        <phrase class="notranslate">ENDPROC</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>When the procedure is called during forward execution, the following code is executed (the code of the procedure until the backward handler):</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MoveL p1,v500,z10,tool1;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">MoveC p2,p3,v500,z10,tool1;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">MoveL p4,v500,z10,tool1;</phrase>
                     </paragraph>
                  </wrapper>
                  <paragraph>When the procedure is called during backwards execution, the following code is executed (the code in the backward handler):</paragraph>
                  <wrapper class="preformatted" xml:lang="en">
                     <paragraph>
                        <phrase class="notranslate">MoveL p4,v500,z10,tool1;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">MoveC p2,p3,v500,z10,tool1;</phrase>
                     </paragraph>
                     <paragraph>
                        <phrase class="notranslate">MoveL p1,v500,z10,tool1;</phrase>
                     </paragraph>
                  </wrapper>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Limitation of move instructions in the backward handler</title>
               <paragraph>The move instruction type and sequence in the backward handler must be a mirror of the move instruction type and sequence for forward execution in the same routine:</paragraph>
               <wrapper class="figure">
                  <image alt="id(163155)xx1100000633_Mirror_Plane" fileref="url(file:/F:/SkribentaFiles/FileRepository/3/9/5/1/69)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/3/9/5/1/69" xsize="473" ysize="136" src="images/xx1100000633_Mirror_Plane.jpg"/>
               </wrapper>
               <paragraph>Note that the order of <phrase class="notranslate">
                     <phrase class="script">CirPoint p2</phrase>
                  </phrase> and <phrase class="notranslate">
                     <phrase class="script">ToPoint p3</phrase>
                  </phrase> in the <phrase class="notranslate">
                     <phrase class="script">MoveC</phrase>
                  </phrase> should be the same.</paragraph>
               <paragraph>Move instructions includes all instructions that result in some movement of the robot or additional axes, such as <phrase class="notranslate">
                     <phrase class="script">MoveL</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">SearchC</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">TriggJ</phrase>
                  </phrase>, <phrase class="notranslate">
                     <phrase class="script">ArcC</phrase>
                  </phrase>, or <phrase class="notranslate">
                     <phrase class="script">PaintL</phrase>
                  </phrase>.</paragraph>
               <wrapper class="warning" fileref="url(file:/E:/Skribenta/server/temp/file-8790743963052213589-ix-43626-xx0100000002.eps.pdf)">
                  <paragraph>Any departures from this programming limitation in the backward handler can result in faulty backward movement. Linear movement can result in circular movement and vice versa, for some part of the backward path.</paragraph>
               </wrapper>
            </wrapper>
            <wrapper class="block" id="newid-34">
               <title>Behavior of the backward execution</title>
               <wrapper class="titled-block">
                  <title>
                     <phrase class="notranslate">MoveC</phrase> and <phrase class="notranslate">nostepin</phrase> routines</title>
                  <paragraph>When stepping forward through a <phrase class="notranslate">
                        <phrase class="script">MoveC</phrase>
                     </phrase> instruction, the robot stops at the circular point (the instruction is executed in two steps). However, when stepping backwards though a <phrase class="notranslate">
                        <phrase class="script">MoveC</phrase>
                     </phrase> instruction, the robot does not stop at the circular point (the instruction is executed in one step).</paragraph>
                  <paragraph>It is not allowed to change from forward to backward execution when the robot is executing a <phrase class="notranslate">
                        <phrase class="script">MoveC</phrase>
                     </phrase> instruction.</paragraph>
                  <paragraph>To be able to change from forward to backward execution in a nostepin routine, or vice versa, the system parameter <phrase class="value">
                        <italic>StepOutNoStepin</italic>
                     </phrase> must be set.</paragraph>
               </wrapper>
               <wrapper class="titled-block">
                  <title>Target, movement type and speed</title>
                  <paragraph>When stepping forward though the program code, a program pointer indicates the next instruction to execute and a motion pointer indicates the move instruction that the robot is performing.</paragraph>
                  <paragraph>When stepping backward though the program code, the program pointer indicates the instruction above the motion pointer. When the program pointer indicates one move instruction and the motion pointer indicates another, the next backward movement will move to the target indicated by the program pointer, using the movement type and speed indicated by the motion pointer.</paragraph>
                  <paragraph>An exception, in terms of backward execution speed, is the instruction <phrase class="notranslate">
                        <phrase class="script">MoveExtJ</phrase>
                     </phrase>. This instruction use the speed related to the <phrase class="notranslate">
                        <phrase class="script">robtarget</phrase>
                     </phrase> for both forward and backward execution.</paragraph>
               </wrapper>
               <wrapper class="titled-block">
                  <title>Example</title>
                  <paragraph>This example illustrates the behavior when stepping backwards through move instructions. The program pointer and motion pointer helps you keep track of where the RAPID execution is and where the robot is.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(1167764)xx1900002301_Backward execution" fileref="url(file:/F:/SkribentaFiles/ImageCache/1/9/9/9/54_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/1/9/9/9/54_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="629" ysize="398" src="images/xx1900002301_Backward execution.png"/>
                     <table>
                        <col/>
                        <col/>
                        <tbody>
                           <tr>
                              <td>
                                 <paragraph>A</paragraph>
                              </td>
                              <td>
                                 <paragraph>Program pointer</paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>B</paragraph>
                              </td>
                              <td>
                                 <paragraph>Motion pointer</paragraph>
                              </td>
                           </tr>
                           <tr>
                              <td>
                                 <paragraph>C</paragraph>
                              </td>
                              <td>
                                 <paragraph>Highlighting of the <phrase class="notranslate">
                                       <phrase class="script">robtarget</phrase>
                                    </phrase> that the robot is moving towards, or already have reached</paragraph>
                              </td>
                           </tr>
                        </tbody>
                     </table>
                  </wrapper>
                  <list class="list-ordered">
                     <listitem>
                        <paragraph>The program is stepped forward until the robot is in p5. The motion pointer will indicate p5 and the program pointer will indicate the next move instruction (<phrase class="notranslate">
                              <phrase class="script">MoveL p6</phrase>
                           </phrase>).</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The first press of the backward button will not move the robot, but the program pointer will move to the previous instruction (<phrase class="notranslate">
                              <phrase class="script">MoveC p3, p4</phrase>
                           </phrase>). This indicates that this is the instruction that will be executed the next time backward button is pressed.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The second press of the backward button will move the robot to p4 linearly with the speed v300. The target for this movement (p4) is taken from the <phrase class="notranslate">
                              <phrase class="script">MoveC</phrase>
                           </phrase> instruction. The type of movement (linear) and the speed are taken from the instruction below (<phrase class="notranslate">
                              <phrase class="script">MoveL p5</phrase>
                           </phrase>). The motion pointer will indicate p4 and the program pointer will move up to <phrase class="notranslate">
                              <phrase class="script">MoveL p2</phrase>
                           </phrase>.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The third press of the backward button will move the robot circularly, via p3, to p2 with the speed v100. The target p2 is taken from the instruction <phrase class="notranslate">
                              <phrase class="script">MoveL p2</phrase>
                           </phrase>. The type of movement (circular), the circular point (p3) and the speed are taken from the <phrase class="notranslate">
                              <phrase class="script">MoveC</phrase>
                           </phrase> instruction. The motion pointer will indicate p2 and the program pointer will move up to <phrase class="notranslate">
                              <phrase class="script">MoveL p1</phrase>
                           </phrase>.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The fourth press of the backward button will move the robot linearly to p1 with the speed v200. The motion pointer will indicate p1 and the program pointer will move up to <phrase class="notranslate">
                              <phrase class="script">MoveJ p0</phrase>
                           </phrase>.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The first press of the forward button will not move the robot, but the program pointer will move to the next instruction (<phrase class="notranslate">
                              <phrase class="script">MoveL p2</phrase>
                           </phrase>).</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The second press of the forward button will move the robot to p2 with the speed v200.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
            </wrapper>
         </section>
      </section>
      <section>
         <title>Motion and I/O programming</title>
         <section>
            <title>Coordinate systems<indexterm id="index211">
                  <primary>coordinate systems</primary>
               </indexterm>
            </title>
            <section>
               <title>The tool center point of the robot (TCP)<indexterm id="index212">
                     <primary>tool center point</primary>
                  </indexterm>
                  <indexterm id="index213">
                     <primary>TCP</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Description</title>
                  <paragraph>The position of the robot and its movements are always related to the tool center point (TCP). This point is normally defined as being somewhere on the tool, for example in the muzzle of a glue gun, at the center of a gripper or at the end of a grading tool.</paragraph>
                  <paragraph>Several TCPs (tools) may be defined, but only one may be active at any one time. When a position is recorded, it is the position of the TCP that is recorded. This is also the point that moves along a given path, at a given velocity.</paragraph>
                  <paragraph>If the robot is holding a work object and working on a stationary tool, a stationary TCP is used. If that tool is active, the programmed path and speed are related to the work object. See <link type="Reference;" xlink:type="simple" xlink:href="#newid-35">Stationary TCPs</link>.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Related information</title>
                  <table>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td/>
                           <td>
                              <paragraph>Described in</paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>Definition of the world coordinate system</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.SystemParameters">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">System parameters</paragraph>
                                    </phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Definition of the user coordinate system</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.OM.Controller">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Operating manual</paragraph>
                                       <paragraph class="abb.maintitle">OmniCore</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Definition of the object coordinate system</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.OM.Controller">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Operating manual</paragraph>
                                       <paragraph class="abb.maintitle">OmniCore</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Definition of the tool coordinate system</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.OM.Controller">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Operating manual</paragraph>
                                       <paragraph class="abb.maintitle">OmniCore</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Definition of a tool center point</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.OM.Controller">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Operating manual</paragraph>
                                       <paragraph class="abb.maintitle">OmniCore</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Definition of displacement frame</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.OM.Controller">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Operating manual</paragraph>
                                       <paragraph class="abb.maintitle">OmniCore</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Jogging in different coordinate systems</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.OM.Controller">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Operating manual</paragraph>
                                       <paragraph class="abb.maintitle">OmniCore</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
            </section>
            <section>
               <title>Coordinate systems used to determine the position of the TCP</title>
               <wrapper class="block">
                  <title>Description</title>
                  <paragraph>The tool (TCP) position can be specified in different coordinate systems to facilitate programming and adjustment of programs.</paragraph>
                  <paragraph>The coordinate system defined depends on what the robot has to do. When no coordinate system is defined, the robotâs positions are defined in the base coordinate system.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Base coordinate system<indexterm id="index214">
                        <primary>base coordinate system</primary>
                     </indexterm>
                  </title>
                  <paragraph>In a simple application, programming can be done in the base coordinate system; here the z-axis is coincident with axis 1 of the robot.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(141858)xx1100000611_BaseCoordinateSystem" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/5/0/1/33)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/5/0/1/33" xsize="152" ysize="137" src="images/xx1100000611_BaseCoordinateSystem.jpg"/>
                  </wrapper>
                  <paragraph>The base coordinate system is located on the base of the robot:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>The <italic>origin</italic> is situated at the intersection of axis 1 and the base mounting surface.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The <italic>xy plane</italic> is the same as the base mounting surface.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The <italic>x-axis</italic> points forwards.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The <italic>y-axis</italic> points to the left (from the perspective of the robot).</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The <italic>z-axis</italic> points upwards.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block">
                  <title>World coordinate system<indexterm id="index215">
                        <primary>world coordinate system</primary>
                     </indexterm>
                  </title>
                  <paragraph>If the robot is floor mounted, programming in the base coordinate system is easy. If, however, the robot is mounted upside down (suspended), programming in the base coordinate system is more difficult because the directions of the axes are not the same as the principal directions in the working space. In such cases, it is useful to define a world coordinate system. The world coordinate system will be coincident with the base coordinate system, if it is not specifically defined.</paragraph>
                  <paragraph>Sometimes, several robots work within the same working space. A common world coordinate system is used in this case to enable the robot programs to communicate with one another. It can also be a good idea to use this when the positions are related to a fixed point in the workshop.</paragraph>
                  <paragraph>The following figure shows two robots (one suspended) with a common world coordinate system.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(141862)xx1100000612_WorldCoordinateSystem" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/5/0/1/34)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/5/0/1/34" xsize="427" ysize="290" src="images/xx1100000612_WorldCoordinateSystem.jpg"/>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>User coordinate system<indexterm id="index216">
                        <primary>user coordinate system</primary>
                     </indexterm>
                  </title>
                  <paragraph>A robot can work with different fixtures or working surfaces having different positions and orientations. A user coordinate system can be defined for each fixture. If all positions are stored in object coordinates, you will not need to reprogram if a fixture must be moved or turned. By moving/turning the user coordinate system as much as the fixture has been moved/turned, all programmed positions will follow the fixture and no reprogramming will be required.</paragraph>
                  <paragraph>The user coordinate system is defined based on the world coordinate system.</paragraph>
                  <paragraph>The following figure shows two user coordinate systems that describe the position of two different fixtures.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(141866)xx1100000613_UserCoordinateSystem" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/5/0/1/35)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/5/0/1/35" xsize="463" ysize="361" src="images/xx1100000613_UserCoordinateSystem.jpg"/>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Object coordinate system<indexterm id="index217">
                        <primary>object coordinate system</primary>
                     </indexterm>
                  </title>
                  <paragraph>The user coordinate system is used to get different coordinate systems for different fixtures or working surfaces. A fixture, however, may include several work objects that are to be processed or handled by the robot. Thus, it often helps to define a coordinate system for each object in order to make it easier to adjust the program if the object is moved or if a new object, the same as the previous one, is to be programmed at a different location. A coordinate system referenced to an object is called an object coordinate system. This coordinate system is also very suited to off-line programming since the positions specified can usually be taken directly from a drawing of the work object. The object coordinate system can also be used when jogging the robot.</paragraph>
                  <paragraph>The object coordinate system is defined based on the user coordinate system.</paragraph>
                  <paragraph>The following figure shows two object coordinate systems that describe the position of two different work objects located in the same fixture.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(141870)xx1100000614_ObjectCoordinateSystem" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/5/0/1/36)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/5/0/1/36" xsize="383" ysize="309" src="images/xx1100000614_ObjectCoordinateSystem.jpg"/>
                  </wrapper>
                  <paragraph>The programmed positions are always defined relative to an object coordinate system. If a fixture is moved/turned, this can be compensated for by moving/turning the user coordinate system. Neither the programmed positions nor the defined object coordinate systems need to be changed. If the work object is moved/turned, this can be compensated for by moving/turning the object coordinate system.</paragraph>
                  <paragraph>If the user coordinate system is movable, that is, coordinated additional axes are used, then the object coordinate system moves with the user coordinate system. This makes it possible to move the robot in relation to the object even when the workbench is being manipulated.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Displacement coordinate system<indexterm id="index218">
                        <primary>displacement coordinate system</primary>
                     </indexterm>
                  </title>
                  <paragraph>Sometimes, the same path is to be performed at several places on the same object. To avoid having to re-program all positions each time, a coordinate system, known as the displacement coordinate system, is defined. This coordinate system can also be used in conjunction with searches, to compensate for differences in the positions of the individual parts.</paragraph>
                  <paragraph>The displacement coordinate system is defined based on the object coordinate system.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(141874)xx1100000615_DisplacementCoordinateSystem" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/5/0/1/37)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/5/0/1/37" xsize="317" ysize="142" src="images/xx1100000615_DisplacementCoordinateSystem.jpg"/>
                  </wrapper>
                  <paragraph>If program displacement is active, all positions are displaced.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Coordinated additional axes<indexterm id="index219">
                        <primary>coordinated additional axes</primary>
                     </indexterm>
                     <indexterm id="index220">
                        <primary>additional axes</primary>
                     </indexterm>
                  </title>
                  <wrapper class="titled-block">
                     <title>Coordination of user coordinate system<indexterm id="index221">
                           <primary>user coordinate system</primary>
                        </indexterm>
                     </title>
                     <paragraph>If a work object is placed on an external mechanical unit, that is moved whilst the robot is executing a path defined in the object coordinate system, a movable user coordinate system can be defined. The position and orientation of the user coordinate system will, in this case, be dependent on the axes rotations of the external unit. The programmed path and speed will thus be related to the work object and there is no need to consider the fact that the object is moved by the external unit.</paragraph>
                     <paragraph>The following figure shows a user coordinate system, defined to follow the movements of a 3-axis external mechanical unit.</paragraph>
                     <wrapper class="figure">
                        <image alt="id(141878)xx1100000616_Coordination_of_user_coordinate_system" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/5/0/1/38)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/5/0/1/38" xsize="373" ysize="302" src="images/xx1100000616_Coordination_of_user_coordinate_system.jpg"/>
                     </wrapper>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Coordination of base coordinate system<indexterm id="index222">
                           <primary>base coordinate system</primary>
                        </indexterm>
                     </title>
                     <paragraph>A movable coordinate system can also be defined for the base of the robot. This is of interest for the installation when the robot is mounted on a track or a gantry, for example. The position and orientation of the base coordinate system will, as for the moveable user coordinate system, be dependent on the movements of the external unit. The programmed path and speed will be related to the object coordinate system and there is no need to think about the fact that the robot base is moved by an external unit. A coordinated user coordinate system and a coordinated base coordinate system can both be defined at the same time.</paragraph>
                     <paragraph>The following figure shows coordinated interpolation with a track moving the base coordinate system of the robot.</paragraph>
                     <wrapper class="figure">
                        <image alt="id(141882)xx1100000617_Coordination_of_base_coordinate_system" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/5/0/1/39)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/5/0/1/39" xsize="414" ysize="260" src="images/xx1100000617_Coordination_of_base_coordinate_system.jpg"/>
                     </wrapper>
                     <paragraph>To be able to calculate the user and the base coordinate systems when involved units are moved, the robot must be aware of:</paragraph>
                     <list class="list-unordered">
                        <listitem>
                           <paragraph>The calibration positions of the user and the base coordinate systems .</paragraph>
                        </listitem>
                        <listitem>
                           <paragraph>The relations between the angles of the additional axes and the translation/ rotation of the user and the base coordinate systems.</paragraph>
                        </listitem>
                        <listitem>
                           <paragraph>These relations are defined in the system parameters.</paragraph>
                        </listitem>
                     </list>
                  </wrapper>
               </wrapper>
            </section>
            <section>
               <title>Coordinate systems used to determine the direction of the tool</title>
               <wrapper class="block">
                  <title>Description</title>
                  <paragraph>The orientation of a tool at a programmed position is given by the orientation of the tool coordinate system. The tool coordinate system is referenced to the wrist coordinated system, defined at the mounting flange on the wrist of the robot.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Wrist coordinate system<indexterm id="index223">
                        <primary>wrist coordinate system</primary>
                     </indexterm>
                  </title>
                  <paragraph>In a simple application, the wrist coordinate system can be used to define the orientation of the tool; here the z-axis is coincident with axis 6 of the robot.</paragraph>
                  <wrapper class="figure">
                     <image alt="" fileref="url(file:/F:/SkribentaFiles/FileRepository/5/4/9/6/03)" format="75%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/5/4/9/6/03" xsize="329" ysize="223" src="images/xx1600000580_The wrist coordinate system.png"/>
                  </wrapper>
                  <paragraph>The wrist coordinate system cannot be changed and is always the same as the mounting flange of the robot in the following respects:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>The <italic>origin</italic> is situated at the center of the mounting flange (on the mounting surface).</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The <italic>x-axis</italic> points in the opposite direction, towards the control hole of the mounting flange.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The <italic>z-axis</italic> points outwards, at right angles to the mounting flange.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block">
                  <title>Tool coordinate system<indexterm id="index224">
                        <primary>tool coordinate system</primary>
                     </indexterm>
                  </title>
                  <paragraph>The tool mounted on the mounting flange of the robot often requires its own coordinate system to enable definition of its TCP, which is the origin of the tool coordinate system. The tool coordinate system can also be used to get appropriate motion directions when jogging the robot.</paragraph>
                  <paragraph>If a tool is damaged or replaced, all you have to do is redefine the tool coordinate system. The program does not normally have to be changed.</paragraph>
                  <paragraph>The TCP (origin) is selected as the point on the tool that must be correctly positioned, for example the muzzle on a glue gun. The tool coordinate axes are defined as those natural for the tool in question.</paragraph>
                  <paragraph>The following figure shows a tool coordinate system, as usually defined for an arc-welding gun (left) and a spot welding gun (right).</paragraph>
                  <wrapper class="figure">
                     <image alt="" fileref="url(file:/F:/SkribentaFiles/FileRepository/4/4/9/6/98)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/4/4/9/6/98" xsize="806" ysize="372" src="images/xx1600000581_Tool coordinate system.png"/>
                  </wrapper>
                  <paragraph>The tool coordinate system is defined based on the wrist coordinate system.</paragraph>
                  <paragraph>The following figure shows the tool coordinate system defined relative to the wrist coordinate system, here for a gripper.</paragraph>
                  <wrapper class="figure">
                     <image alt="" fileref="url(file:/F:/SkribentaFiles/FileRepository/5/4/9/6/04)" format="75%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/5/4/9/6/04" xsize="445" ysize="404" src="images/xx1600000582_Tool coordinate system gripper.png"/>
                  </wrapper>
               </wrapper>
               <wrapper class="block" id="newid-35">
                  <title>Stationary TCPs<indexterm id="index225">
                        <primary>stationary TCP</primary>
                     </indexterm>
                     <indexterm id="index226">
                        <primary>TCP</primary>
                        <secondary>stationary</secondary>
                     </indexterm>
                  </title>
                  <paragraph>If the robot is holding a work object and working on a stationary tool, a stationary TCP is used. If that tool is active, the programmed path and speed are related to the work object held by the robot. This means that the coordinate systems will be reversed, as in the following figure.</paragraph>
                  <paragraph>The following figure shows a stationary TCP, where the object coordinate system is based on the wrist coordinate system.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163167)xx1100000635_Stationary_TCP1" fileref="url(file:/F:/SkribentaFiles/FileRepository/6/0/2/1/78)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/6/0/2/1/78" xsize="387" ysize="288" src="images/xx1100000635_Stationary_TCP1.jpg"/>
                  </wrapper>
                  <paragraph>In the following figure, neither the user coordinate system nor program displacement is used. It is, however, possible to use them and, if they are used, they will be related to each other.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163171)xx1100000636_Stationary_TCP2" fileref="url(file:/F:/SkribentaFiles/FileRepository/6/0/2/1/79)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/6/0/2/1/79" xsize="443" ysize="272" src="images/xx1100000636_Stationary_TCP2.jpg"/>
                  </wrapper>
                  <paragraph>Program displacement can also be used together with stationary TCPs</paragraph>
               </wrapper>
            </section>
         </section>
         <section>
            <title>Positioning during program execution</title>
            <section>
               <title>Introduction</title>
               <wrapper class="block">
                  <title>How movements are performed</title>
                  <paragraph>During program execution, positioning instructions in the robot program control all movements. The main task of the positioning instructions is to provide the following information on how to perform movements:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>The destination point of the movement (defined as the position of the tool center point, the orientation of the tool, the configuration of the robot and the position of the additional axes).</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The interpolation method used to reach the destination point, for example joint interpolation, linear interpolation or circle interpolation.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The velocity of the robot and additional axes.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The zone data (defines how the robot and the additional axes are to pass the destination point, for example stop point or fly-by point).</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The coordinate systems (tool, user and object) used for the movement.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>As an alternative to defining the velocity of the robot and the additional axes, the time for the movement can be programmed. This should, however, be avoided if the weaving function is used. Instead the velocities of the orientation and additional axes should be used to limit the speed, when small or no TCP-movements are made.</paragraph>
                  <wrapper class="warning" fileref="url(file:/E:/Skribenta/server/temp/file-8790743963052213589-ix-43626-xx0100000002.eps.pdf)">
                     <paragraph>In material handling and pallet applications with intensive and frequent movements, the drive system supervision may trip out and stop the robot in order to prevent overheating of drives or motors. If this occurs, the cycle time needs to be slightly increased by reducing programmed speed or acceleration.</paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Related information</title>
                  <table>
                     <col/>
                     <col/>
                     <thead>
                        <tr>
                           <td/>
                           <td>
                              <paragraph>
                                 <bold>Described in:</bold>
                              </paragraph>
                           </td>
                        </tr>
                     </thead>
                     <tbody>
                        <tr>
                           <td>
                              <paragraph>Definition of speed</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.RAPID">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Definition of zones (corner paths)</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.RAPID">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Instruction for joint interpolation</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.RAPID">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Instruction for linear interpolation</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.RAPID">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Instruction for circular interpolation</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.RAPID">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Instruction for modified interpolation</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.RAPID">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                    </phrase>
                                 </phrase> 
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Singularity</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <link type="Reference;" xlink:type="simple" xlink:href="#newid-40">Singularities</link>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>Concurrent program execution</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <link type="Reference;" xlink:type="simple" xlink:href="#newid-37">Synchronization with logical instructions</link>
                              </paragraph>
                           </td>
                        </tr>
                        <tr>
                           <td>
                              <paragraph>CPU Optimization</paragraph>
                           </td>
                           <td>
                              <paragraph>
                                 <phrase class="variable" type="Reference.TRM.SystemParameters">
                                    <phrase>
                                       <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                       <paragraph class="abb.maintitle">System parameters</paragraph>
                                    </phrase>
                                 </phrase>
                              </paragraph>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
            </section>
            <section>
               <title>Interpolation of the position and orientation of the tool<indexterm id="index227">
                     <primary>interpolation</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Joint interpolation<indexterm id="index228">
                        <primary>joint interpolation</primary>
                     </indexterm>
                     <indexterm id="index229">
                        <primary>joint movement</primary>
                     </indexterm>
                  </title>
                  <paragraph>When path accuracy is not too important, this type of motion is used to move the tool quickly from one position to another. Joint interpolation also allows an axis to move from any location to another within its working space, in a single movement.</paragraph>
                  <paragraph>All axes move from the start point to the destination point at constant axis velocity, see the following figure.</paragraph>
                  <paragraph>Joint interpolation is often the fastest way to move between two points as the robot axes follow the closest path between the start point and the destination point (from the perspective of the axis angles).</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163175)xx1100000637_Joint_Interpolation" fileref="url(file:/F:/SkribentaFiles/FileRepository/6/0/2/1/80)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/6/0/2/1/80" xsize="452" ysize="144" src="images/xx1100000637_Joint_Interpolation.jpg"/>
                  </wrapper>
                  <paragraph>The velocity of the tool center point is expressed in mm/s (in the object coordinate system). As interpolation takes place axis-by-axis, the velocity will not be exactly the programmed value.</paragraph>
                  <paragraph>During interpolation, the velocity of the limiting axis, that is the axis that travels fastest relative to its maximum velocity in order to carry out the movement, is determined. Then, the velocities of the remaining axes are calculated so that all axes reach the destination point at the same time.</paragraph>
                  <paragraph>All axes are coordinated in order to obtain a path that is independent of the velocity. Acceleration is automatically optimized to the max performance of the robot.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Linear interpolation<indexterm id="index230">
                        <primary>linear interpolation</primary>
                     </indexterm>
                     <indexterm id="index231">
                        <primary>linear movement</primary>
                     </indexterm>
                  </title>
                  <paragraph>During linear interpolation, the TCP travels along a straight line between the start and destination points.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163179)xx1100000638_Linear_Interpolation" fileref="url(file:/F:/SkribentaFiles/FileRepository/6/0/2/1/81)" format="75%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/6/0/2/1/81" xsize="498" ysize="98" src="images/xx1100000638_Linear_Interpolation.jpg"/>
                  </wrapper>
                  <paragraph>To obtain a linear path in the object coordinate system, the robot axes must follow a non-linear path in the axis space. The more non-linear the configuration of the robot is, the more accelerations and decelerations are required to make the tool move in a straight line and to obtain the desired tool orientation. If the configuration is extremely non-linear (for example in the proximity of wrist and arm singularities), one or more of the axes will require more torque than the motors can give. In this case, the velocity of all axes will automatically be reduced.</paragraph>
                  <paragraph>The orientation of the tool remains constant during the entire movement unless a reorientation has been programmed. If the tool is reorientated, it is rotated at constant velocity.</paragraph>
                  <paragraph>A maximum rotational velocity (in degrees per second) can be specified when rotating the tool. If this is set to a low value, reorientation will be smooth, irrespective of the velocity defined for the tool center point. If it is a high value, the reorientation velocity is only limited by the maximum motor speeds. As long as no motor exceeds the limit for the torque, the defined velocity will be maintained. If, on the other hand, one of the motors exceeds the current limit, the velocity of the entire movement (with respect to both the position and the orientation) will be reduced.</paragraph>
                  <paragraph>All axes are coordinated in order to obtain a path that is independent of the velocity. Acceleration is optimized automatically.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Circular interpolation<indexterm id="index232">
                        <primary>circular interpolation</primary>
                     </indexterm>
                     <indexterm id="index233">
                        <primary>circular movement</primary>
                     </indexterm>
                  </title>
                  <paragraph>A circular path is defined using three programmed positions that define a circle segment. The first point to be programmed is the start of the circle segment. The next point is a support point (circle point) used to define the curvature of the circle, and the third point denotes the end of the circle. The three programmed points should be dispersed at regular intervals along the arc of the circle to make this as accurate as possible.</paragraph>
                  <paragraph>The orientation defined for the support point is used to select between the short and the long twist for the orientation from start to destination point. If the programmed orientation is the same relative to the circle at the start and the destination points, and the orientation at the support is close to the same orientation relative to the circle, the orientation of the tool will remain constant relative to the path.</paragraph>
                  <paragraph>The following figure shows circular interpolation with a short twist for part of a circle (circle segment) with a start point, circle point and destination point.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163183)xx1100000639_Circular_Interpolation1" fileref="url(file:/F:/SkribentaFiles/FileRepository/6/0/2/1/82)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/6/0/2/1/82" xsize="403" ysize="169" src="images/xx1100000639_Circular_Interpolation1.jpg"/>
                  </wrapper>
                  <paragraph>However, if the orientation at the support point is programmed closer to the orientation rotated 180Â°, the alternative twist is selected, as shown in the following figure.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163187)xx1100000640_Circular_Interpolation2" fileref="url(file:/F:/SkribentaFiles/FileRepository/6/0/2/1/83)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/6/0/2/1/83" xsize="401" ysize="181" src="images/xx1100000640_Circular_Interpolation2.jpg"/>
                  </wrapper>
                  <paragraph>As long as all motor torques do not exceed the maximum permitted values, the tool will move at the programmed velocity along the arc of the circle. If the torque of any of the motors is insufficient, the velocity will automatically be reduced at those parts of the circular path where the motor performance is insufficient.</paragraph>
                  <paragraph>All axes are coordinated in order to obtain a path that is independent of the velocity. Acceleration is optimized automatically.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>
                     <phrase class="notranslate">SingArea\Wrist</phrase>
                     <indexterm id="index234">
                        <primary>singularities</primary>
                     </indexterm>
                     <indexterm id="index235">
                        <primary>modified linear interpolation</primary>
                     </indexterm>
                  </title>
                  <paragraph>During execution in the proximity of a singular point, linear or circular interpolation may be problematic. In this case, it is best to use modified interpolation, which means that the wrist axes are interpolated axis-by-axis, with the TCP following a linear or circular path. The orientation of the tool, however, will differ somewhat from the programmed orientation. The resulting orientation in the programmed point may also differ from the programmed orientation due to two singularities.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163191)xx1100000641_SingArea_Wrist" fileref="url(file:/F:/SkribentaFiles/FileRepository/6/0/2/1/84)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/6/0/2/1/84" xsize="206" ysize="184" src="images/xx1100000641_SingArea_Wrist.jpg"/>
                  </wrapper>
                  <paragraph>The first singularity is when TCP is straight ahead from axis 2 (a2 in the figure above). The TCP cannot pass to the other side of axis 2, instead will axis 2 and 3 fold a bit more to keep the TCP on the same side and the end orientation of the move will then be turned away from the programmed orientation with the same size.</paragraph>
                  <paragraph>The second singularity is when TCP will pass near the z-axis of axis 1 (z1 in the figure above). The axis 1 will in this case turn around with full speed and the tool reorientation will follow in the same way. The direction of the turn is dependent of what side the TCP will go. We recommend to change to joint interpolation (MoveJ) near the z-axis. Note that it is the TCP that makes the singularity, not the WCP as when <phrase class="notranslate">
                        <phrase class="script">SingArea\Off</phrase>
                     </phrase> is used.</paragraph>
                  <paragraph>In the <phrase class="notranslate">
                        <phrase class="script">SingArea\Wrist</phrase>
                     </phrase> case the orientation in the circle support point will be the same as programmed. However, the tool will not have a constant direction relative to the circle plane as for normal circular interpolation. If the circle path passes a singularity, the orientation in the programmed positions sometimes must be modified to avoid big wrist movements, which can occur if a complete wrist re-configuration is generated when the circle is executed (joints 4 and 6 moved 180 degrees each).</paragraph>
               </wrapper>
            </section>
            <section id="newid-36">
               <title>Interpolation of corner paths<indexterm id="index236">
                     <primary>interpolation</primary>
                  </indexterm>
                  <indexterm id="index237">
                     <primary>corner path</primary>
                  </indexterm>
                  <indexterm id="index238">
                     <primary>zone</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Description</title>
                  <paragraph>Corner paths are used to get continuous movements past programmed positions. In this way, positions can be passed at high speed without having to reduce the speed unnecessarily. A fly-by point<indexterm id="index239">
                        <primary>fly-by point</primary>
                     </indexterm> generates a corner path (parabola path) past the programmed position. The beginning and end of this corner path are defined by a zone around the programmed position.</paragraph>
                  <wrapper class="figure">
                     <image alt="" fileref="url(file:/F:/SkribentaFiles/ImageCache/1/8/7/8/14_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/1/8/7/8/14_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="270" ysize="118" src="images/xx1100000643_Interpolation_of_corner_paths.png"/>
                  </wrapper>
                  <paragraph>All axes are coordinated in order to obtain a path that is independent of the velocity. Speed and acceleration are optimized automatically.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Defining a corner path</title>
                  <paragraph>The size of the corner zone is defined in the data type <phrase class="notranslate">
                        <phrase class="script">zonedata</phrase>
                     </phrase>, which is used as an argument in move instructions. For more information, see <phrase class="notranslate">
                        <phrase class="script">zonedata</phrase>
                     </phrase> in <phrase class="variable" type="Reference.TRM.RAPID">
                        <phrase>
                           <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                           <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                        </phrase>
                     </phrase>.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Smooth transitions between different speeds</title>
                  <paragraph>If different TCP speeds have been programmed before and after the corner position, the transition will be smooth and take place within the corner path without affecting the actual path.</paragraph>
                  <paragraph>If different reorientation velocities are programmed before and after the corner position, and if the reorientation velocities limit the movement, the transition from one velocity to the other will take place smoothly within the corner path.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Fine-tuning the path</title>
                  <paragraph>If the tool is to carry out a process (such as arc-welding, gluing or water cutting) along the corner path, the size of the zone can be adjusted to get the desired path. If the shape of the parabolic corner path does not match the object geometry, the programmed positions can be placed closer together, making it possible to approximate the desired path using two or more smaller parabolic paths.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Corner paths with reorientation</title>
                  <paragraph>A fly-by point can have one zone size for TCP position (position zone) and one zone size for tool reorientation and movement of additional axes (reorientation and additional axis zone).</paragraph>
                  <paragraph>The reorientation and additional axis zone can be defined similar to the position zone. The reorientation and additional axis zone is usually set larger than the position zone. In this case, the reorientation will start interpolating towards the orientation of the next position before the corner path starts. The reorientation will then be smoother.</paragraph>
                  <paragraph>The tool will be reorientated so that the orientation at the end of the zone will be the same as if a stop point had been programmed, see the following figures. Note that the orientation outside the reorientation and additional axis zone is the same for both cases (position C - E) but the orientation inside the zone changes more smoothly than the programmed positions.</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <tbody>
                        <tr>
                           <td>
                              <wrapper class="figure">
                                 <image alt="id(980155)xx1100000647_Linear_interpolation_of_the_orientation_in_corner_paths_2" fileref="url(file:/F:/SkribentaFiles/ImageCache/0/1/6/8/32_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/0/1/6/8/32_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="357" ysize="106" src="images/xx1100000647_Linear_interpolation_of_the_orientation_in_corner_paths_2.png"/>
                                 <paragraph>If three positions with different tool orientations are programmed as stop points, program execution will look like this.</paragraph>
                              </wrapper>
                           </td>
                           <td>
                              <wrapper class="figure">
                                 <image alt="id(980159)xx1100000648_Linear_interpolation_of_the_orientation_in_corner_paths_3" fileref="url(file:/F:/SkribentaFiles/ImageCache/0/1/6/8/33_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/0/1/6/8/33_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="361" ysize="167" src="images/xx1100000648_Linear_interpolation_of_the_orientation_in_corner_paths_3.png"/>
                                 <paragraph>If the middle position is a fly-by point, program execution will look like this.</paragraph>
                              </wrapper>
                           </td>
                        </tr>
                     </tbody>
                  </table>
                  <paragraph>The reorientation and additional axis zone is normally expressed in mm. In this way, you can determine directly where on the path the zone begins and ends. If the tool is not moved, the size of the zone is expressed in angle of rotation degrees instead of TCP-mm.</paragraph>
                  <paragraph>The reorientation and additional axis zone is also used for additional axes, in the same manner as for orientation. If the reorientation and additional axis zone is set to be larger than the position zone, the interpolation of the additional axes towards the destination of the next programmed position, will be started before the TCP position corner path starts. This can be used for smoothing additional axes movements in the same way as the tool orientation is used for the smoothing of the wrist movements.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Corner paths when changing the interpolation method</title>
                  <paragraph>Corner paths are also generated when one interpolation method is exchanged for another. The interpolation method used in the actual corner paths is chosen in such a way as to make the transition from one method to another as smooth as possible. If the corner path zones for orientation and position are not the same size, more than one interpolation method may be used in the corner path (see <italic>Figure 30</italic>).</paragraph>
                  <paragraph>The following figure shows an example of interpolation when changing from one interpolation method to another. Linear interpolation has been programmed between p1 and p2; joint interpolation between p2 and p3; and <phrase class="notranslate">
                        <phrase class="script">Sing Area\Wrist</phrase>
                     </phrase> interpolation between p3 and p4.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163339)xx1100000649_Corner_paths_when_changing_the_interpolation_method" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/83)" format="90%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/83" xsize="419" ysize="216" src="images/xx1100000649_Corner_paths_when_changing_the_interpolation_method.jpg"/>
                  </wrapper>
                  <paragraph>If the interpolation is changed from a normal TCP-movement to a reorientation without a TCP-movement or vice versa, no corner zone will be generated. The same will be the case if the interpolation is changed to or from an external joint movement without TCP-movement.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Interpolation when changing coordinate system</title>
                  <paragraph>When there is a change of coordinate system in a corner path, for example a new TCP or a new work object, joint interpolation of the corner path is used. This is also applicable when changing from coordinated operation to non-coordinated operation, or vice versa.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Size reduction of programmed corner zones</title>
                  <paragraph>If programmed positions are located close to each other, it is not unusual for the programmed zones to overlap. To get a well-defined path and to achieve optimum velocity at all times, the robot reduces the size of the zone. As default, the robot reduces the size of the zone to half the distance from one programmed position to another.</paragraph>
                  <wrapper class="titled-block">
                     <title>Behavior between fly-by points</title>
                     <paragraph>Too big programmed zones result in the zones being cut off to half the distance from one overlapping programmed position to the other (see the following figure).</paragraph>
                     <wrapper class="figure">
                        <image alt="" fileref="url(file:/F:/SkribentaFiles/ImageCache/7/9/7/8/47_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/7/9/7/8/47_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="309" ysize="145" src="images/xx1800000783_Corner_paths_with_zone_limitation_RW7.png"/>
                     </wrapper>
                     <paragraph>Both the position zone and the reorientation and additional axis zone can overlap. As soon as one of these corner path zones is too big, that zone is reduced.</paragraph>
                  </wrapper>
                  <wrapper class="titled-block">
                     <title>Behavior between fly-by point and fine point</title>
                     <paragraph>For a movement from a fine point to a fly-by point, the optional argument <phrase class="notranslate">
                           <phrase class="script">\KeepStartPath</phrase>
                        </phrase> can be used in the move instruction. This sets a zone around the fine point in which the movement must follow the programmed path, and not enter any corner zone.</paragraph>
                     <paragraph>Example:</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>MoveL p1,v500,fine,tool1;</paragraph>
                        <paragraph>MoveL p2,v500 \KeepStartPath:=15,z40,tool1;</paragraph>
                        <paragraph>MoveL p3,v500,fine,tool1;</paragraph>
                     </wrapper>
                     <wrapper class="figure">
                        <image alt="" fileref="url(file:/F:/SkribentaFiles/ImageCache/7/9/7/8/48_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/7/9/7/8/48_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="261" ysize="163" src="images/xx1800000784_Corner path with StartZone.png"/>
                     </wrapper>
                     <paragraph>For a movement from a fly-by point to a fine point, the optional argument <phrase class="notranslate">
                           <phrase class="script">\KeepEndPath</phrase>
                        </phrase> can be used in the move instruction. This end zone is a distance from the fine point during which the movement must follow the programmed path, so any corner zone must end before entering the end zone.</paragraph>
                     <paragraph>Example:</paragraph>
                     <wrapper class="preformatted" xml:lang="en">
                        <paragraph>MoveL p1,v500,fine,tool1;</paragraph>
                        <paragraph>MoveL p2,v500,z30,tool1;</paragraph>
                        <paragraph>MoveL p3,v500 \KeepEndPath:=15,fine,tool1;</paragraph>
                     </wrapper>
                     <wrapper class="figure">
                        <image alt="id(979229)xx1800000944_Corner_path_towards_finepoint_RW7" fileref="url(file:/F:/SkribentaFiles/ImageCache/7/9/7/8/49_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/7/9/7/8/49_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="277" ysize="161" src="images/xx1800000944_Corner_path_towards_finepoint_RW7.png"/>
                     </wrapper>
                     <paragraph>The <phrase class="notranslate">
                           <phrase class="script">KeepStartPath</phrase>
                        </phrase> and <phrase class="notranslate">
                           <phrase class="script">KeepEndPath</phrase>
                        </phrase> are specified in mm of TCP movement. While the TCP is within this zone, the tool reorientation and additional axis movement must also follow it programmed movement, and not be part of any reorientation and additional axis corner zone.</paragraph>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Planning time for fly-by points</title>
                  <paragraph>Occasionally, if the next movement is not planned in time, programmed fly-by points can give rise to a stop point. This may happen when:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>A number of logical instructions with long program execution times are programmed between short movements.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>The points are very close together at high speeds.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>If stop points are a problem then use concurrent program execution.</paragraph>
                  <paragraph>To suppress warnings from corner path failures, use the instruction <phrase class="notranslate">
                        <phrase class="script">CornerPathWarning</phrase>
                     </phrase>.</paragraph>
                  <wrapper class="note" fileref="url(file:/E:/Skribenta/server/temp/file-7166463227813206592-ix-43622-xx010000.eps.pdf)">
                     <paragraph>If the fly-by point is changed into a finepoint, the path after the recalculated point can also be affected.</paragraph>
                     <paragraph>Path when p2 is a fly-by point:</paragraph>
                     <wrapper class="figure">
                        <image alt="" fileref="url(file:/F:/SkribentaFiles/ImageCache/9/2/8/8/01_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/9/2/8/8/01_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="353" ysize="176" src="images/xx1800002286_Corner_zone_between_fly-by-points RW7.png"/>
                     </wrapper>
                     <paragraph>Path when p2 is a finepoint:</paragraph>
                     <wrapper class="figure">
                        <image alt="id(1006162)xx1800001538_Zone size between fly-by and fine point" fileref="url(file:/F:/SkribentaFiles/ImageCache/3/2/8/8/04_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png)" format="80%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/ImageCache/3/2/8/8/04_HR0_VR0_W0_H0___CL0_CT0_CW0_CH0.png" xsize="297" ysize="129" src="images/xx1800001538_Zone size between fly-by and fine point.png"/>
                     </wrapper>
                  </wrapper>
               </wrapper>
            </section>
            <section>
               <title>Independent axes<indexterm id="index240">
                     <primary>independent axes</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Description</title>
                  <paragraph>An independent axis is an axis moving independently of other axes in the robot system. It is possible to change an axis to independent mode and later back to normal mode again.</paragraph>
                  <paragraph>A special set of instructions handles the independent axes. Four different move instructions specify the movement of the axis. For instance, the <phrase class="notranslate">
                        <phrase class="script">IndCMove</phrase>
                     </phrase> instruction starts the axis for continuous movement. The axis then keeps moving at a constant speed (regardless of what the robot does) until a new independent-instruction is executed.</paragraph>
                  <paragraph>To change back to normal mode a reset instruction, <phrase class="notranslate">
                        <phrase class="script">IndReset</phrase>
                     </phrase>, is used. The reset instruction can also set a new reference for the measurement system - a type of new synchronization of the axis. Once the axis is changed back to normal mode it is possible to run it as a normal axis.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Program execution</title>
                  <paragraph>An axis is immediately change to independent mode when an <phrase class="notranslate">
                        <phrase class="script">Ind_Move</phrase>
                     </phrase> instruction is executed. This takes place even if the axis is being moved at the time, such as when a previous point has been programmed as a fly-by point, or when simultaneous program execution is used.</paragraph>
                  <paragraph>If a new <phrase class="notranslate">
                        <phrase class="script">Ind_Move</phrase>
                     </phrase> instruction is executed before the last one is finished, the new instruction immediately overrides the old one.</paragraph>
                  <paragraph>If a program execution is stopped when an independent axis is moving, that axis will stop. When the program is restarted the independent axis starts automatically. No active coordination between independent and other axes in normal mode takes place.</paragraph>
                  <paragraph>If a loss of voltage occurs when an axis is in independent mode, the program cannot be restarted. An error message is then displayed, and the program must be started from the beginning.</paragraph>
                  <paragraph>Note that a mechanical unit may not be deactivated when one of its axes is in independent mode.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Stepwise execution</title>
                  <paragraph>During stepwise execution, an independent axis is executed only when another instruction is being executed. The movement of the axis will also be stepwise in line with the execution of other instruments.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163327)xx1100000652_Stepwise_execution" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/80)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/80" xsize="539" ysize="187" src="images/xx1100000652_Stepwise_execution.jpg"/>
                  </wrapper>
               </wrapper>
               <wrapper class="block">
                  <title>Jogging</title>
                  <paragraph>Axes in independent mode cannot be jogged. If an attempt is made to execute the axis manually, the axis does not move and an error message is displayed. Execute an <phrase class="notranslate">
                        <phrase class="script">IndReset</phrase>
                     </phrase> instruction or move the program pointer to main, in order to leave the independent mode.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Working range</title>
                  <paragraph>The physical working range is the total movement of the axis.</paragraph>
                  <paragraph>The logical working range is the range used by RAPID instructions and read in the jogging window.</paragraph>
                  <paragraph>After synchronization (updated revolution counter), the physical and logical working range coincide. By using the <phrase class="notranslate">
                        <phrase class="script">IndReset</phrase>
                     </phrase> instruction the logical working area can be moved, see the following figure.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163323)xx1100000653_WorkingRange" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/79)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/79" xsize="489" ysize="167" src="images/xx1100000653_WorkingRange.jpg"/>
                  </wrapper>
                  <paragraph>The resolution of positions is decreased when moving away from logical position 0. Low resolution together with stiff tuned controller can result in unacceptable torque, noise and controller instability. Check the controller tuning and axis performance close to the working range limit at installation. Also check if the position resolution and path performance are acceptable.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Speed and acceleration</title>
                  <paragraph>In manual mode with reduced speed, the speed is reduced to the same level as if the axis was running as non-independent. Note that the <phrase class="notranslate">
                        <phrase class="script">IndSpeed</phrase>
                     </phrase> function will not be <phrase class="notranslate">
                        <phrase class="script">TRUE</phrase>
                     </phrase> if the axis speed is reduced.</paragraph>
                  <paragraph>The <phrase class="notranslate">
                        <phrase class="script">VelSet</phrase>
                     </phrase> instruction and speed correction in percentage via the production window, are active for independent movement. Note that correction via the production window inhibits <phrase class="notranslate">
                        <phrase class="script">TRUE</phrase>
                     </phrase> value from the <phrase class="notranslate">
                        <phrase class="script">IndSpeed</phrase>
                     </phrase> function.</paragraph>
                  <paragraph>In independent mode, the lowest value of acceleration and deceleration, specified in the configuration file, is used both for acceleration and deceleration. This value can be reduced by the ramp value in the instruction (1 - 100%). The <phrase class="notranslate">
                        <phrase class="script">AccSet</phrase>
                     </phrase> instruction does not affect axes in independent mode.</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Robot axes</title>
                  <paragraph>Only robot axis 6 can be used as an independent axis. Normally the <phrase class="notranslate">
                        <phrase class="script">IndReset</phrase>
                     </phrase> instruction is used only for this axis. However, the <phrase class="notranslate">
                        <phrase class="script">IndReset</phrase>
                     </phrase> instruction can also be used for axis 4 on IRB 1600, 2600 and 4600 models (not for <phrase class="notranslate">ID</phrase> versions). If <phrase class="notranslate">
                        <phrase class="script">IndReset</phrase>
                     </phrase> is used for robot axis 4, then axis 6 must not be in the independent mode.</paragraph>
                  <paragraph>If axis 6 is used as an independent axis, singularity problems may occur because the normal 6-axes coordinate transform function is still used. If a problem occurs, execute the same program with axis 6 in normal mode. Modify the points or use <phrase class="notranslate">
                        <phrase class="script">SingArea\Wrist</phrase>
                     </phrase> or <phrase class="notranslate">
                        <phrase class="script">MoveJ</phrase>
                     </phrase> instructions.</paragraph>
                  <paragraph>The axis 6 is also internally active in the path performance calculation. A result of this is that an internal movement of axis 6 can reduce the speed of the other axes in the system.</paragraph>
                  <paragraph>The independent working range for axis 6 is defined with axis 4 and 5 in home position. If axis 4 or 5 is out of home position the working range for axis 6 is moved due to the gear coupling. However, the position read from FlexPendant for axis 6 is compensated with the positions of axis 4 and 5 via the gear coupling.</paragraph>
               </wrapper>
            </section>
            <section>
               <title>Soft Servo<indexterm id="index241">
                     <primary>soft servo</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Description</title>
                  <paragraph>In some applications there is a need for a servo, which acts like a mechanical spring. This means that the force from the robot on the work object will increase as a function of the distance between the programmed position (behind the work object) and the contact position (robot tool - work object).</paragraph>
               </wrapper>
               <wrapper class="block">
                  <title>Softness</title>
                  <paragraph>The relationship between the position deviation and the force, is defined by a parameter called <italic>softness</italic>. The higher the softness parameter, the larger the position deviation required to obtain the same force.</paragraph>
                  <paragraph>The softness parameter is set in the program and it is possible to change the softness values anywhere in the program. Different softness values can be set for different joints and it is also possible to mix joints having normal servo with joints having soft servo.</paragraph>
                  <paragraph>Activation and deactivation of soft servo as well as changing of softness values can be made when the robot is moving. When this is done, a tuning will be made between the different servo modes and between different softness values to achieve smooth transitions. The tuning time can be set from the program with the parameter ramp. With <phrase class="notranslate">
                        <italic>ramp = 1</italic>
                     </phrase>, the transitions will take 0.5 seconds, and in the general case the transition time will be <phrase class="notranslate">
                        <italic>ramp x 0.5</italic>
                     </phrase> in seconds.</paragraph>
               </wrapper>
               <wrapper class="note" fileref="url(file:/E:/Skribenta/server/temp/file-7166463227813206592-ix-43622-xx010000.eps.pdf)">
                  <title>Note</title>
                  <paragraph>Deactivation of soft servo should not be done when there is a force between the robot and the work object.</paragraph>
               </wrapper>
               <wrapper class="note" fileref="url(file:/E:/Skribenta/server/temp/file-7166463227813206592-ix-43622-xx010000.eps.pdf)">
                  <title>Note</title>
                  <paragraph>With high softness values there is a risk that the servo position deviations may be so big that the axes will move outside the working range of the robot.</paragraph>
               </wrapper>
            </section>
            <section>
               <title>Stop and restart<indexterm id="index242">
                     <primary>stop</primary>
                  </indexterm>
               </title>
               <wrapper class="block">
                  <title>Stopping movement</title>
                  <paragraph>A movement can be stopped in three different ways:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>For a program stop, soft stop or quick stop, the robot will stop on the path, which makes a restart easy.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>For a halt with motors off, the mechanical brakes are used to achieve a deceleration distance, which is as short as specified for safety reasons. The path deviation will usually be bigger for a halt with motors off than for a stiff stop.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="block">
                  <title>Starting movement</title>
                  <paragraph>After a stop (any of the types above) a restart can always be made on the interrupted path. If the robot has stopped outside the programmed path, the restart will begin with a return to the position on the path, where the robot should have stopped.</paragraph>
                  <paragraph>A restart following a power failure is equivalent to a restart after a halt with motors off. It should be noted that the robot will always return to the path before the interrupted program operation is restarted, even in cases when the power failure occurred while a logical instruction was running. When restarting, all times are counted from the beginning; for example, positioning on time or an interruption in the instruction <phrase class="notranslate">
                        <phrase class="script">WaitTime</phrase>
                     </phrase>.</paragraph>
               </wrapper>
            </section>
         </section>
         <section id="newid-37">
            <title>Synchronization with logical instructions<indexterm id="index243">
                  <primary>synchronization</primary>
               </indexterm>
               <indexterm id="index244">
                  <primary>I/O synchronization</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Logical instructions</title>
               <paragraph>Instructions are normally executed sequentially in the program. Nevertheless, logical instructions can also be executed at specific positions or during an ongoing movement.</paragraph>
               <paragraph>A logical instruction is any instruction that does not generate a robot movement or an additional axis movement, for example an I/O instruction.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Sequential program execution at stop points</title>
               <paragraph>If a positioning instruction has been programmed as a stop point, the next instruction is not executed until the robot and the additional axes have come to a standstill, that is, when the programmed position has been reached.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163319)xx1100000654_Sequential_program_execution_at_stop_points" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/78)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/78" xsize="440" ysize="125" src="images/xx1100000654_Sequential_program_execution_at_stop_points.jpg"/>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Sequential program execution at fly-by points<indexterm id="index245">
                     <primary>fly-by point</primary>
                  </indexterm>
               </title>
               <paragraph>If a positioning instruction has been programmed as a fly-by point, the next logical instructions are executed some time before reaching the largest zone (for position, orientation or additional axes). See the following figures. These instructions are then executed in order.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <tbody>
                     <tr>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163315)xx1100000655_Sequential_program_execution_at_fly-by points_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/77)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/77" xsize="527" ysize="158" src="images/xx1100000655_Sequential_program_execution_at_fly-by points_1.jpg"/>
                              <paragraph>A logical instruction following a fly-by point is executed before reaching the largest zone.</paragraph>
                           </wrapper>
                        </td>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163311)xx1100000656_Sequential_program_execution_at_fly-by_points_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/76)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/76" xsize="387" ysize="269" src="images/xx1100000656_Sequential_program_execution_at_fly-by_points_2.jpg"/>
                              <paragraph>A logical instruction following a fly-by point is executed before reaching the largest zone.</paragraph>
                           </wrapper>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <paragraph>The time at which they are executed (DT) comprises the following time components:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>The time it takes for the robot to plan the next move: approximately <phrase class="unit" type="DefaultConverter">0.1</phrase> seconds.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>The robot delay (servo lag) in seconds: <phrase class="unit" type="DefaultConverter">0</phrase>-<phrase class="unit" type="DefaultConverter">1.0</phrase> seconds depending on the velocity and the actual deceleration performance of the robot.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Concurrent program execution<indexterm id="index246">
                     <primary>concurrent execution</primary>
                  </indexterm>
               </title>
               <paragraph>Concurrent program execution can be programmed using the argument <phrase class="notranslate">
                     <phrase class="script">\Conc</phrase>
                  </phrase> in the positioning instruction. This argument is used to execute one or more logical instructions at the same time as the robot moves in order to reduce the cycle time (for example used when communicating via I/O device).</paragraph>
               <paragraph>When a positioning instruction with the argument <phrase class="notranslate">
                     <phrase class="script">\Conc</phrase>
                  </phrase> is executed, the following logical instructions are also executed (in sequence).</paragraph>
               <table>
                  <col/>
                  <col/>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>If the robot is not moving, or if the previous positioning instruction ended with a stop point, the logical instructions are executed as soon as the current positioning instruction starts (at the same time as the movement).</paragraph>
                           <wrapper class="figure">
                              <image alt="id(163307)xx1100000657_Concurrent_program_execution_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/75)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/75" xsize="305" ysize="165" src="images/xx1100000657_Concurrent_program_execution_1.jpg"/>
                           </wrapper>
                        </td>
                        <td>
                           <paragraph>If the previous positioning instruction ends at a fly-by point, the logical instructions are executed at a given time (<italic>DT</italic>) before reaching the largest zone (for position, orientation or additional axes).</paragraph>
                           <wrapper class="figure">
                              <image alt="id(163303)xx1100000658_Concurrent_program_execution_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/74)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/74" xsize="348" ysize="262" src="images/xx1100000658_Concurrent_program_execution_2.jpg"/>
                              <paragraph> </paragraph>
                           </wrapper>
                        </td>
                     </tr>
                  </tbody>
               </table>
               <paragraph>Instructions which indirectly affect movements, such as <phrase class="notranslate">
                     <phrase class="script">ConfL</phrase>
                  </phrase> and <phrase class="notranslate">
                     <phrase class="script">SingArea</phrase>
                  </phrase>, are executed in the same way as other logical instructions. They do not, however, affect the movements ordered by previous positioning instructions.</paragraph>
               <paragraph>If several positioning instructions with the argument <phrase class="notranslate">
                     <phrase class="script">\Conc</phrase>
                  </phrase> and several logical instructions in a long sequence are mixed, logical instructions are executed directly, in the order they were programmed. This takes place at the same time as the movement, which means that logical instructions are executed at an earlier stage on the path than they were programmed.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163299)xx1100000659_Concurrent_program_execution_3" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/73)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/73" xsize="371" ysize="286" src="images/xx1100000659_Concurrent_program_execution_3.jpg"/>
               </wrapper>
               <paragraph>During concurrent program execution, the following instructions are programmed to end the sequence and subsequently re-synchronize positioning instructions and logical instructions:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>a positioning instruction to a stop point without the argument <phrase class="notranslate">
                           <phrase class="script">\Conc</phrase>
                        </phrase>
                     </paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>the instruction <phrase class="notranslate">
                           <phrase class="script">WaitTime</phrase>
                        </phrase> or <phrase class="notranslate">
                           <phrase class="script">WaitUntil</phrase>
                        </phrase> with the argument <phrase class="notranslate">
                           <phrase class="script">\Inpos</phrase>
                        </phrase>.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Path synchronization<indexterm id="index247">
                     <primary>path synchronization</primary>
                  </indexterm>
                  <indexterm id="index248">
                     <primary>position fix I/O</primary>
                  </indexterm>
               </title>
               <paragraph>In order to synchronize process equipment (for applications such as gluing, painting and arc welding) with the robot movements, different types of path synchronization signals can be generated.</paragraph>
               <paragraph>With a so-called positions event, a trig signal will be generated when the robot passes a predefined position on the path. With a time event, a signal will be generated in a predefined time before the robot stops at a stop position. Moreover, the control system also handles weave events, which generate pulses at predefined phase angles of a weave motion.</paragraph>
               <paragraph>All the position synchronized signals can be achieved both before (look ahead time) and after (delay time) the time that the robot passes the predefined position. The position is defined by a programmed position and can be tuned as a path distance before the programmed position.</paragraph>
               <paragraph>Typical repeat accuracy for a set of digital outputs on the path is +/- 2 ms.</paragraph>
               <paragraph>In the event of a power failure and restart in a <phrase class="notranslate">
                     <phrase class="script">Trigg</phrase>
                  </phrase> instruction, all trigg events will be generated once again on the remaining movement path for the <phrase class="notranslate">
                     <phrase class="script">Trigg</phrase>
                  </phrase> instruction.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td/>
                        <td>
                           <paragraph>
                              <bold>Described in:</bold>
                           </paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>Positioning instructions</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <link type="Reference;" xlink:type="simple" xlink:href="#newid-18">Motion</link>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Definition of zone size</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.RAPID">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                 </phrase>
                              </phrase> 
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section id="newid-38">
            <title>Robot configuration<indexterm id="index249">
                  <primary>robot configuration</primary>
               </indexterm>
               <indexterm id="index250">
                  <primary>axis configuration</primary>
               </indexterm>
               <indexterm id="index251">
                  <primary>configuration</primary>
                  <secondary>robot</secondary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Different types of robot configurations</title>
               <paragraph>It is usually possible to attain the same robot tool position and orientation in several different ways, using different sets of axis angles. We call these different robot configurations.</paragraph>
               <paragraph>If, for example, a position is located approximately in the middle of a work cell, some robots can get to that position from above and below when using different axis 1 directions, as shown in the following figure where the configuration to the right is attained by rotating the arm backwards. Axis 1 is rotated 180 degrees.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163295)xx1100000660_Different_types_of_robot_configurations_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/72)" format="65%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/72" xsize="281" ysize="191" src="images/xx1100000660_Different_types_of_robot_configurations_1.jpg"/>
               </wrapper>
               <paragraph>Some robots may also get to that position from above and below while using the same axis 1 direction. This is possible for robot types with extended axis 3 working range. In the following figure, two different arm configurations are used to attain same position and orientation. The axis 1 angle is the same for both configurations. The configuration on the right is attained by rotating the lower arm forward and the upper arm backwards.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163291)xx1100000661_Different_types_of_robot_configurations_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/71)" format="65%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/71" xsize="260" ysize="140" src="images/xx1100000661_Different_types_of_robot_configurations_2.jpg"/>
               </wrapper>
               <paragraph>This can also be achieved by turning the front part of the robot upper arm (axis 4) upside down while rotating axes 5 and 6 to the desired position and orientation.</paragraph>
               <paragraph>The following figure shows two different wrist configurations used to attain the same position and orientation. In the configuration in which the front part of the upper arm points upwards (lower), axis 4 has been rotated 180 degrees, axis 5 through 180 degrees and axis 6 through 180 degrees in order to attain the configuration in which the front part of the upper arm points downwards (upper).</paragraph>
               <wrapper class="figure">
                  <image alt="id(163367)xx1100000662_Different_types_of_robot_configurations_3" fileref="url(file:/F:/SkribentaFiles/FileRepository/7/0/2/1/90)" format="65%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/7/0/2/1/90" xsize="215" ysize="158" src="images/xx1100000662_Different_types_of_robot_configurations_3.jpg"/>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Specifying robot configuration</title>
               <paragraph>
                  <indexterm id="index252">
                     <primary>confdata</primary>
                  </indexterm>When programming a robot position, also a robot configuration is specified with <phrase class="notranslate">
                     <phrase class="script">confdata cf1, cf4, cf6, cfx</phrase>
                  </phrase>.</paragraph>
               <paragraph>
                  <indexterm id="index253">
                     <primary>quarter revolutions</primary>
                  </indexterm>The way of specifying robot configuration differs for different kinds of robot types (see <phrase class="variable" type="Reference.TRM.RAPID">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                     </phrase>
                  </phrase> - <phrase class="notranslate">
                     <italic>confdata</italic>
                  </phrase>, for a complete description). However, for most robot types this includes defining the appropriate quarter revolutions of axes 1, 4 and 6. For example, if axis 1 is between 0 and 90 degrees, then <italic>cf1=0</italic>, see the following figures.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <tbody>
                     <tr>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163573)xx1100000663_Quarter_revolution_for_positive_joint_angle" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/77)" format="25%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/77" xsize="113" ysize="115" src="images/xx1100000663_Quarter_revolution_for_positive_joint_angle.jpg"/>
                              <paragraph>Quarter revolution for a positive joint angle</paragraph>
                           </wrapper>
                        </td>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163669)xx1100000664_Quarter_revolution_for_negative_angle" fileref="url(file:/F:/SkribentaFiles/FileRepository/1/1/2/1/01)" format="25%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/1/1/2/1/01" xsize="119" ysize="114" src="images/xx1100000664_Quarter_revolution_for_negative_angle.jpg"/>
                              <paragraph>Quarter revolution for a negative joint angle</paragraph>
                           </wrapper>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block" id="newid-39">
               <title>Configuration control and monitoring</title>
               <paragraph>
                  <indexterm id="index254">
                     <primary>robot configuration supervision</primary>
                  </indexterm>
                  <indexterm id="index255">
                     <primary>supervision</primary>
                     <secondary>robot configuration</secondary>
                  </indexterm>To achieve a well-defined robot movement it is usually desirable to let the robot attain the same configuration during program execution as the one specified in the program. To do this, configuration control and monitoring with <phrase class="notranslate">
                     <phrase class="script">ConfL\On</phrase>
                  </phrase> or <phrase class="notranslate">
                     <phrase class="script">ConfJ\On</phrase>
                  </phrase> should be used. The configuration monitoring involves comparing the configuration of the programmed position with that of the robot.</paragraph>
               <paragraph>During linear movement, the robot always moves to the closest possible configuration. If the configuration monitoring is active with <phrase class="notranslate">
                     <phrase class="script">ConfL\On</phrase>
                  </phrase>, a verification is made in advance to see if it is possible to achieve the programmed configuration. If it is not possible the program is stopped. When the movement is finished (in a zone or in a finepoint), it is also verified that the robot has reached the programmed configuration. If the configuration is different the program is stopped. For a detailed description of the configuration data for a specific robot type see the data type <phrase class="notranslate">
                     <phrase class="script">confdata</phrase>
                  </phrase> in <phrase class="variable" type="Reference.TRM.RAPID">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
               <paragraph>During axis-by-axis movement the robot always moves to the programmed configuration when <phrase class="notranslate">
                     <phrase class="script">ConfJ\On</phrase>
                  </phrase> is used. No supervision of the axis movements is performed when configuration control is enabled. Depending on the difference between the start point configuration and the end point configuration a large movement, of especially the wrist, can be a result. If the configuration supervision is not active, the robot moves to the specified position and orientation with the configuration that has the closest joint values compared to the start point.</paragraph>
               <paragraph>When the execution of a programmed position is stopped because of a configuration error, it may often be caused by some of the following reasons:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>The position is programmed offline with a faulty configuration.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>The robot tool has been changed causing the robot to take another configuration than was programmed.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>The position is subject to an active frame operation (displacement, user, object, base).</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>The correct configuration in the destination position can be found by positioning the robot near it and reading the configuration on the FlexPendant.</paragraph>
                  </listitem>
               </list>
               <paragraph>If the configuration parameters change because of active frame operation, the configuration check can be deactivated.</paragraph>
               <wrapper class="titled-block">
                  <title>Detailed information for <phrase class="notranslate">ConfJ</phrase>
                     <indexterm id="index256">
                        <primary>
                           <phrase class="notranslate">ConfJ</phrase>
                        </primary>
                     </indexterm>
                  </title>
                  <paragraph>
                     <phrase class="notranslate">
                        <phrase class="script">MoveJ</phrase>
                     </phrase> with <phrase class="notranslate">
                        <phrase class="script">ConfJ\Off</phrase>
                     </phrase>:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>The robot is moved to the programmed position, with an axis position that is closest to the axis position of the start. This means that the <phrase class="notranslate">
                              <phrase class="script">confdata</phrase>
                           </phrase> in the instruction is not used. No configuration supervision is done.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>
                     <phrase class="notranslate">
                        <phrase class="script">MoveJ</phrase>
                     </phrase> with <phrase class="notranslate">
                        <phrase class="script">ConfJ\On</phrase>
                     </phrase>:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>The robot is moved to the programmed position, with an axis position such that the corresponding configuration is equal to or close to the programmed configuration in the <phrase class="notranslate">
                              <phrase class="script">confdata</phrase>
                           </phrase>.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>If a program displacement or path correction is active, the risk is that the programmed configuration differs from the original position. As a result the robot can perform large movements of the wrist axis to achieve the programmed configuration.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
               <wrapper class="titled-block">
                  <title>Detailed information for <phrase class="notranslate">ConfL</phrase>
                     <indexterm id="index257">
                        <primary>
                           <phrase class="notranslate">ConfL</phrase>
                        </primary>
                     </indexterm>
                  </title>
                  <paragraph>
                     <phrase class="notranslate">
                        <phrase class="script">MoveL</phrase>
                     </phrase> with <phrase class="notranslate">
                        <phrase class="script">ConfL\Off</phrase>
                     </phrase>:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>The robot is moved along a straight line to the programmed position, with an axis position that is closest to the axis position of the start. This means that the <phrase class="notranslate">
                              <phrase class="script">confdata</phrase>
                           </phrase> in the instruction is not used and no configuration supervision is done.</paragraph>
                     </listitem>
                  </list>
                  <paragraph>
                     <phrase class="notranslate">
                        <phrase class="script">MoveL</phrase>
                     </phrase> with <phrase class="notranslate">
                        <phrase class="script">ConfL\On</phrase>
                     </phrase>:</paragraph>
                  <list class="list-unordered">
                     <listitem>
                        <paragraph>First the end position is calculated in joints, using the programmed <phrase class="notranslate">
                              <phrase class="script">confdata</phrase>
                           </phrase> to determine the solution. Then the joint values for the configuration axes in the end position are compared to the corresponding axes for the start position.</paragraph>
                        <paragraph>If the new configuration data is OK compared to the start point the movement will be permitted. In other cases the robot will stop in the start position with an error message. For details about the allowed configuration error for different robot types, see description of <phrase class="notranslate">
                              <phrase class="script">confdata</phrase>
                           </phrase>,  <phrase class="variable" type="Reference.TRM.RAPID">
                              <phrase>
                                 <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                 <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                              </phrase>
                           </phrase>.</paragraph>
                     </listitem>
                     <listitem>
                        <paragraph>If no error was reported before the movement started the system will check the configuration again when the movement is finished. If it is not the same as the programmed configuration the program will be stopped.</paragraph>
                     </listitem>
                  </list>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td/>
                        <td>
                           <paragraph>
                              <bold>Described in:</bold>
                           </paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>Definition of robot configuration</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.RAPID">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Activating/deactivating the configuration supervision</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <link type="Reference;" xlink:type="simple" xlink:href="#newid-18">Motion</link>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Robot kinematic models<indexterm id="index258">
                  <primary>kinematic models</primary>
               </indexterm>
               <indexterm id="index259">
                  <primary>robot kinematics</primary>
               </indexterm>
               <indexterm id="index260">
                  <primary>coordinate systems</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Robot kinematics</title>
               <paragraph>The position and orientation of a robot is determined from the kinematic model of its mechanical structure. The specific mechanical unit models must be defined for each installation. For standard ABB master and external robots, these models are predefined in the controller.</paragraph>
               <wrapper class="titled-block">
                  <title>Master robot</title>
                  <paragraph>The kinematic model of the master robot models the position and orientation of the tool of the robot relative to its base as function of the robot joint angles.</paragraph>
                  <paragraph>The kinematic parameters specifying the arm lengths, offsets and joint attitudes, are predefined in the configuration file for each robot type.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163661)xx1100000666_Master_robot_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/99)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/99" xsize="272" ysize="207" src="images/xx1100000666_Master_robot_1.jpg"/>
                  </wrapper>
                  <paragraph>A calibration procedure supports the definition of the base frame of the master robot relative to the world frame.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163657)xx1100000667_Master_robot_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/98)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/98" xsize="264" ysize="173" src="images/xx1100000667_Master_robot_2.jpg"/>
                  </wrapper>
               </wrapper>
               <wrapper class="titled-block">
                  <title>External robot</title>
                  <paragraph>Coordination with an external robot also requires a kinematic model for the external robot. A number of predefined classes of 2 and 3 dimensional mechanical structures are supported.</paragraph>
                  <paragraph>The following figure shows a kinematic structure of an ORBIT 160B robot using predefined model.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163653)xx1100000668_External_robot_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/97)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/97" xsize="290" ysize="191" src="images/xx1100000668_External_robot_1.jpg"/>
                  </wrapper>
                  <paragraph>Calibration procedures to define the base frame relative to the world frame are supplied for each class of structures.</paragraph>
                  <table>
                     <col/>
                     <col/>
                     <tbody>
                        <tr>
                           <td>
                              <wrapper class="figure">
                                 <image alt="id(163649)xx1100000669_External_robot_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/96)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/96" xsize="356" ysize="212" src="images/xx1100000669_External_robot_2.jpg"/>
                                 <paragraph>Base frame of an ORBIT_160B robot.</paragraph>
                              </wrapper>
                           </td>
                           <td>
                              <wrapper class="figure">
                                 <image alt="id(163645)xx1100000670_External_robot_3" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/95)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/95" xsize="244" ysize="158" src="images/xx1100000670_External_robot_3.jpg"/>
                                 <paragraph>Reference points on turntable for base frame calibration of an ORBIT_160B robot in the home position using predefined model.</paragraph>
                              </wrapper>
                           </td>
                        </tr>
                     </tbody>
                  </table>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>General kinematics</title>
               <paragraph>Mechanical structures not supported by the predefined structures may be modelled by using a general kinematic model. This is possible for external robots.</paragraph>
               <paragraph>Modelling is based on the <phrase class="notranslate">
                     <italic>Denavit-Hartenberg</italic>
                  </phrase> convention according to <phrase class="notranslate">
                     <italic>Introduction to Robotics, Mechanics &amp; Control</italic>
                  </phrase>, by <phrase class="notranslate">John J. Craigh</phrase> (<phrase class="notranslate">Addison-Wesley 1986</phrase>).</paragraph>
               <paragraph>The following figure shows a kinematic structure of an ORBIT 160B robot using general kinematics model.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163641)xx1100000671_General_kinematics_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/94)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/94" xsize="300" ysize="187" src="images/xx1100000671_General_kinematics_1.jpg"/>
               </wrapper>
               <paragraph>A calibration procedure supports the definition of the base frame of the external robot relative to the world frame.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <tbody>
                     <tr>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163637)xx1100000672_General_kinematics_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/93)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/93" xsize="338" ysize="218" src="images/xx1100000672_General_kinematics_2.jpg"/>
                              <paragraph>Base frame of an ORBIT_160B robot using general kinematics model.</paragraph>
                           </wrapper>
                        </td>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163633)xx1100000673_General_kinematics_3" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/92)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/92" xsize="287" ysize="190" src="images/xx1100000673_General_kinematics_3.jpg"/>
                              <paragraph>Reference points on turntable for base frame calibration of an ORBIT_160B robot in the home position (joints = 0 degrees).</paragraph>
                           </wrapper>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td/>
                        <td>
                           <paragraph>
                              <bold>Described in:</bold>
                           </paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>Definition of general kinematics of an external robot</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.SystemParameters">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">System parameters</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Motion supervision/collision detection<indexterm id="index261">
                  <primary>motion supervision</primary>
               </indexterm>
               <indexterm id="index262">
                  <primary>collision detection</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Introduction</title>
               <paragraph>Motion supervision is the name of a collection of functions for high sensitivity, model-based supervision of the robotâs movements. Motion supervision includes functionality for the detection of collision, jamming, and incorrect load definition. This functionality is called collision detection (option <phrase class="notranslate">
                     <italic>Collision Detection</italic>
                  </phrase>).</paragraph>
               <paragraph>The collision detection may trig if the data for the loads mounted on the robot are not correct. This includes load data for tools, payloads and arm loads. If the tool data or payload data are not known, the load identification functionality can be used to define it. Arm load data cannot be identified.</paragraph>
               <paragraph>When the collision detection is triggered, the robot is stopped as quickly as possible. By default, the torques are reversed and the brakes are applied, but it is also possible to configure a stop that does not use the brakes.</paragraph>
               <paragraph>The motion supervision is by default active only when at least one axis (including additional axes) is in motion. When all axes are standing still, the function is deactivated. This is to avoid unnecessary triggering due to external process forces. The system parameter <phrase class="notranslate">
                     <italic>Collision detection at standstill</italic>
                  </phrase> enables the detection of any collision even at standstill, see <phrase class="variable" type="Reference.TRM.SystemParameters">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">System parameters</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Tuning of collision detection levels</title>
               <paragraph>The collision detection uses a variable supervision level. At low speeds it is more sensitive than during high speeds. For this reason, no tuning of the function should be required by the user during normal operating conditions. However, it is possible to turn the function on and off and to tune the supervision levels. Separate tuning parameters are available for jogging and program execution. The different tuning parameters are described in <phrase class="variable" type="Reference.TRM.SystemParameters">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">System parameters</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
               <paragraph>There is a RAPID instruction called <phrase class="notranslate">
                     <phrase class="script">MotionSup</phrase>
                  </phrase> which turns the function on and off and modifies the supervision level. This is useful in applications where external process forces act on the robot in certain parts of the cycle. The <phrase class="notranslate">
                     <phrase class="script">MotionSup</phrase>
                  </phrase> instruction is described in <phrase class="variable" type="Reference.TRM.RAPID">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
               <paragraph>The tune values are set in percent of the basic tuning where 100% corresponds to the basic values. Increasing the percentage gives a less sensitive system and decreasing gives the opposite effect. It is important to note that if tune values are set in the system parameters and in the <phrase class="notranslate">RAPID</phrase> instruction both values are taken into consideration. Example: If the tune value in the system parameters is set to 150% and the tune value is set to 200% in the RAPID instruction the resulting tune level will be 300%.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163629)xx1100000674_Typical_Collision" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/91)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/91" xsize="279" ysize="428" src="images/xx1100000674_Typical_Collision.jpg"/>
               </wrapper>
               <paragraph>There is a maximum level to which the total collision detection tune level can be changed. This value is set by default to 300% but it can be modified via the system parameter <phrase class="notranslate">
                     <italic>motion_sup_max_level</italic>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Modifying motion supervision</title>
               <paragraph>To modify modify the motion supervision, open the tasks.</paragraph>
               <list class="list-ordered">
                  <listitem>
                     <paragraph>Tap the <bold>Task</bold> list and select a task. If you have more than one task, you need to set the desired values for each task separately.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Tap <bold>OFF/ON</bold> to remove or activate path supervision. Tap -/+ to adjust sensitivity. The sensitivity can be set between 0 and 300. Unless you have the option <italic>
                           <phrase class="notranslate">Collision Detection</phrase>
                        </italic> installed, path supervision only affects the robot in auto and manually full speed mode.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Tap <bold>OFF/ON</bold> to remove or activate jog supervision. Tap -/+ to adjust sensitivity. The sensitivity can be set between 0 and 300. This setting has no effect, unless you have the option <italic>
                           <phrase class="notranslate">Collision Detection</phrase>
                        </italic> installed.</paragraph>
                  </listitem>
               </list>
               <paragraph>For more information on <italic>
                     <phrase class="notranslate">Collision Detection</phrase>
                  </italic>, see <phrase class="variable" type="Reference.AM.ControllerSoftware">
                     <phrase>
                        <paragraph class="abb.subtitle">Application manual</paragraph>
                        <paragraph class="abb.maintitle">Controller software OmniCore</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Digital outputs</title>
               <paragraph>The digital output <phrase class="notranslate">
                     <phrase class="script">MotSupOn</phrase>
                  </phrase> is high when the collision detection function is active and low when it is not active. Note that a change in the state of the function takes effect when a motion starts. Thus, if the collision detection is active and the robot is moving, <phrase class="notranslate">
                     <phrase class="script">MotSupOn</phrase>
                  </phrase> is high. If the robot is stopped and the function turned off, <phrase class="notranslate">
                     <phrase class="script">MotSupOn</phrase>
                  </phrase> is still high. When the robot starts to move, <phrase class="notranslate">
                     <phrase class="script">MotSupOn</phrase>
                  </phrase> switches to low.</paragraph>
               <paragraph>The digital output <phrase class="notranslate">
                     <phrase class="script">MotSupTrigg</phrase>
                  </phrase> goes high when the collision detection triggers. It stays high until the error code is acknowledged, either from the FlexPendant or through the digital input <phrase class="notranslate">
                     <phrase class="script">AckErrDialog</phrase>
                  </phrase>.</paragraph>
               <paragraph>The digital outputs are described in more detail in the <phrase class="variable" type="Reference.OM.Controller">
                     <phrase>
                        <paragraph class="abb.subtitle">Operating manual</paragraph>
                        <paragraph class="abb.maintitle">OmniCore</paragraph>
                     </phrase>
                  </phrase> and <phrase class="variable" type="Reference.TRM.SystemParameters">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">System parameters</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Limitations</title>
               <paragraph>The motion supervision is only available for the robot axes. It is not available for track motions, orbit stations, or any other external manipulators.</paragraph>
               <paragraph>The collision detection is deactivated when at least one axis is run in independent joint mode. This is also the case even when it is an additional axis which is run as an independent joint.</paragraph>
               <paragraph>The collision detection may trigger when the robot is used in soft servo mode. Therefore, it is advisable to turn the collision detection off when the robot is in soft servo mode.</paragraph>
               <paragraph>If the <phrase class="notranslate">RAPID</phrase> instruction <phrase class="notranslate">
                     <phrase class="script">MotionSup</phrase>
                  </phrase> is used to turn off the collision detection, this will only take effect once the robot starts to move. As a result, the digital output <phrase class="notranslate">
                     <phrase class="script">MotSupOn</phrase>
                  </phrase> may temporarily be high at program start before the robot starts to move.</paragraph>
               <paragraph>The distance the robot backs up after a collision is proportional to the speed of the motion before the collision. If repeated low speed collisions occur, the robot may not back up sufficiently to relieve the stress of the collision. As a result, it may not be possible to jog the robot without the supervision triggering. In this case use the jog menu to turn off the collision detection temporarily and jog the robot away from the obstacle.</paragraph>
               <paragraph>In the event of a stiff collision during program execution, it may take a few seconds before the robot starts to back up.</paragraph>
               <paragraph>If the robot is mounted on a track the collision detection should be set to off when the track is moving. If it is not turned off the collision detection may trigger when the track moves, even if there is no collision.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td/>
                        <td>
                           <paragraph>
                              <bold>Described in:</bold>
                           </paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">RAPID</phrase> instruction <phrase class="notranslate">MotionSup</phrase>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <link type="Reference;" xlink:type="simple" xlink:href="#newid-18">Motion</link>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>System parameters for tuning</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.SystemParameters">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">System parameters</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Motion supervision I/O signals</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.SystemParameters">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">System parameters</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Collision detection at standstill</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.SystemParameters">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">System parameters</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Independent collision stop without brake</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.SystemParameters">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">System parameters</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Load identification</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.OM.Controller">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Operating manual</paragraph>
                                    <paragraph class="abb.maintitle">OmniCore</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section id="newid-40">
            <title>Singularities<indexterm id="index263">
                  <primary>singularities</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>Some positions in the robot working space can be attained using an infinite number of robot configurations to position and orient the tool. These positions, known as singular points (singularities), constitute a problem when calculating the robot arm angles based on the position and orientation of the tool.</paragraph>
               <paragraph>Generally speaking, a robot has two types of singularities; arm singularities or wrist singularities.</paragraph>
               <paragraph>Arm singularities are all configurations where the wrist center (the intersection of axes 4, 5, and 6) ends up directly above axis 1. Wrist singularities are configurations where axis 4 and axis 6 are on the same line, that is axis 5 has an angle equal to 0.</paragraph>
               <table>
                  <col/>
                  <col/>
                  <tbody>
                     <tr>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163625)xx1100000675_Singularities_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/90)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/90" xsize="272" ysize="182" src="images/xx1100000675_Singularities_1.jpg"/>
                              <paragraph>Arm singularity occurs where the wrist center and axis 1 intersect.</paragraph>
                           </wrapper>
                        </td>
                        <td>
                           <wrapper class="figure">
                              <image alt="id(163621)xx1100000676_Singularities_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/89)" format="65%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/89" xsize="242" ysize="142" src="images/xx1100000676_Singularities_2.jpg"/>
                              <paragraph>Wrist singularity occurs when axis 5 is at 0 degrees.</paragraph>
                           </wrapper>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Singularity points of robots without parallel rod<indexterm id="index264">
                     <primary>serial link robot</primary>
                  </indexterm>
               </title>
               <paragraph>Robots without parallel rod (serial link robots) have the wrist singularity and the arm singularity, and in addition, they have a third kind of singularity. This singularity occurs at robot positions where the wrist center and the rotation centers of axes 2 and 3 are all in a straight line, see the following figure.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163617)xx1100000677_Singularity_points_of_robots_without_parallel_rod" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/88)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/88" xsize="216" ysize="173" src="images/xx1100000677_Singularity_points_of_robots_without_parallel_rod.jpg"/>
               </wrapper>
            </wrapper>
            <wrapper class="block" id="newid-41">
               <title>Singularity points of serial link robots with 7 axes<indexterm id="index265">
                     <primary>7 axes robots</primary>
                  </indexterm>
               </title>
               <paragraph>Serial link robots with 7 axes, such as the <phrase class="value">IRB 14000/14050</phrase>, have all the singularities of 6-axis robots but also have two additional singularities.</paragraph>
               <paragraph>The first of these is when axis 2 has an angle equal to zero so that axis 1 and axis 7 are on the same line. This is similar to the wrist singularity.</paragraph>
               <paragraph>The second singularity is related to the calculation of the arm angle and varies depending on which reference direction is configured, since the singularity occurs when the <phrase class="value">WCP</phrase> is on the reference direction. For more information, see <phrase class="value">
                     <italic>Arm-Angle Reference Direction</italic>
                  </phrase> in <phrase class="variable" type="Reference.TRM.SystemParameters">
                     <phrase>
                        <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                        <paragraph class="abb.maintitle">System parameters</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Program execution through singularities</title>
               <paragraph>During joint interpolation, problems do not occur when the robot passes singular points.</paragraph>
               <paragraph>When executing a linear or circular path close to a singularity, the velocities in some joints (1 and 6/4 and 6) may be very high. In order not to exceed the maximum joint velocities, the linear path velocity is reduced.</paragraph>
               <paragraph>The high joint velocities may be reduced by using the mode (<phrase class="notranslate">
                     <phrase class="script">SingArea\Wrist</phrase>
                  </phrase>) when the wrist axes are interpolated in joint angles, while still maintaining the linear path of the robot tool. An orientation error compared to the full linear interpolation is however introduced.</paragraph>
               <paragraph>Note that the robot configuration changes dramatically when the robot passes close to a singularity with linear or circular interpolation. To avoid the re-configuration, the first position on the other side of the singularity should be programmed with an orientation that makes the re-configuration unnecessary.</paragraph>
               <paragraph>Also, it should be noted that the robot must not be in its singularity when only external joints are moved. This may cause robot joints to make unnecessary movements.</paragraph>
               <paragraph>For robots with 7 axes or more, the robot may be able to automatically adjust the arm angle in order to avoid some singularities, see <phrase class="variable" type="Reference.OM.Controller">
                     <phrase>
                        <paragraph class="abb.subtitle">Operating manual</paragraph>
                        <paragraph class="abb.maintitle">OmniCore</paragraph>
                     </phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Jogging through singularities</title>
               <paragraph>During joint interpolation, problems do not occur when the robot passes singular points.</paragraph>
               <paragraph>During linear interpolation, the robot cannot pass singular points. Moving close to singularities may lead to a lower TCP speed while having large joint movements.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td/>
                        <td>
                           <paragraph>
                              <bold>Described in:</bold>
                           </paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>Controlling how the robot is to act on execution near singular points</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.RAPID">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>Optimized acceleration limitation</title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>The acceleration and speed of the robot is continuously controlled so that the defined limits are not exceeded.</paragraph>
               <paragraph>The limits are defined by the user program (for example programmed speed or <phrase class="notranslate">
                     <phrase class="script">AccSet</phrase>
                  </phrase>) or defined by the system itself (for example maximum torque in gearbox or motor, maximum torque or force in robot structure).</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Load data</title>
               <paragraph>As long as the load data (mass, center of gravity, and inertia) is within the limits on the load diagram and correctly entered into the tool data, then no user defined acceleration limits are needed and the service life of the robot is automatically ensured.</paragraph>
               <paragraph>If the load data lies outside the limits on the load diagram, then special restrictions may be necessary, that is <phrase class="notranslate">
                     <phrase class="script">AccSet</phrase>
                  </phrase> or lower speed, as specified on request from ABB.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>TCP acceleration</title>
               <paragraph>TCP acceleration and speed are controlled by the path planner with the help of a complete dynamic model of the robot arms, including the user defined loads.</paragraph>
               <paragraph>The TCP acceleration and speed depends on the position, speed, and acceleration of all the axes at any instant in time and thus the actual acceleration varies continuously. In this way the optimal cycle time is obtained, that is one or more of the limits is at its maximum value at every instant. This means that the robot motors and structure are utilized to their maximum capability at all times.</paragraph>
            </wrapper>
         </section>
         <section>
            <title>World Zones<indexterm id="index266">
                  <primary>world zones</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description of World Zones</title>
               <paragraph>When using world zones (option <phrase class="notranslate">
                     <italic>World Zones</italic>
                  </phrase>), the robot stops or an output is automatically set if the robot is inside a special user-defined area. Here are some examples of applications:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>When two robots share a part of their respective work areas. The possibility of the two robots colliding can be safely eliminated by the supervision of these signals.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>When external equipment is located inside the robotâs work area. A forbidden work area can be created to prevent the robot colliding with this equipment.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Indication that the robot is at a position where it is permissible to start program execution from a PLC.</paragraph>
                  </listitem>
               </list>
               <wrapper class="warning" fileref="url(file:/E:/Skribenta/server/temp/file-8790743963052213589-ix-43626-xx0100000002.eps.pdf)">
                  <paragraph>For safety reasons, this software shall not be used for protection of personnel. Use hardware protection equipment for that.</paragraph>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Using World Zones</title>
               <paragraph>Use World Zones:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>To indicate that the tool center point is in a specific part of the working area.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>To limit the working area of the robot in order to avoid collision with the tool.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>To make a common work area for two robots available to only one robot at a time.</paragraph>
                  </listitem>
               </list>
            </wrapper>
            <wrapper class="block">
               <title>Definition of World Zones in the world coordinate system</title>
               <paragraph>World Zones are defined in the world coordinate system. The sides of the boxes are parallel to the coordinate axes and the cylinder axis is parallel to the z-axis of the world coordinate system.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163613)xx1100000678_World_Zone" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/87)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/87" xsize="488" ysize="289" src="images/xx1100000678_World_Zone.jpg"/>
               </wrapper>
               <paragraph>A World Zone can be defined to be inside or outside the shape of the box, sphere, or the cylinder.</paragraph>
               <paragraph>World Zone can also be defined in joints. The zone is to be defined between (inside) or not between (outside) two joint values for any robot or additional axes.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Supervision of the robot TCP</title>
               <wrapper class="figure">
                  <image alt="id(163609)xx1100000679_Supervision_of_the_robot_TCP" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/86)" format="50%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/86" xsize="235" ysize="155" src="images/xx1100000679_Supervision_of_the_robot_TCP.jpg"/>
               </wrapper>
               <paragraph>The movement of the tool center point is supervised and not any other points on the robot.</paragraph>
               <paragraph>The TCP is always supervised irrespective of the mode of operation, for example, program execution and jogging.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Stationary TCPs</title>
               <paragraph>If the robot is holding a work object and working on a stationary tool, a stationary TCP is used. If that tool is active, the tool will not move and if it is inside a World Zone then it is always inside.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Actions</title>
               <wrapper class="titled-block">
                  <title>Set a digital output when the TCP is inside a World Zone</title>
                  <paragraph>This action sets a digital output when the TCP is inside a World Zone. It is useful to indicate that the robot has stopped in a specified area.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163605)xx1100000680_Digital_output_when_tcp_is_inside_WorldZone" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/85)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/85" xsize="365" ysize="103" src="images/xx1100000680_Digital_output_when_tcp_is_inside_WorldZone.jpg"/>
                  </wrapper>
               </wrapper>
               <wrapper class="titled-block">
                  <title>Set a digital output before the TCP reaches a World Zone</title>
                  <paragraph>This action sets a digital output before the TCP reaches a World Zone. It can be used to stop the robot just inside a World Zone.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163601)xx1100000681_Digital_output_before_tcp_reaches_WorldZone" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/84)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/84" xsize="494" ysize="121" src="images/xx1100000681_Digital_output_before_tcp_reaches_WorldZone.jpg"/>
                  </wrapper>
               </wrapper>
               <wrapper class="titled-block">
                  <title>Stop the robot before the TCP reaches a World Zone</title>
                  <paragraph>A World Zone can be defined to be outside the work area. The robot will then stop with the Tool Center Point just outside the World Zone, when heading towards the Zone.</paragraph>
                  <wrapper class="figure">
                     <image alt="id(163597)xx1100000682_Stop_the_robot_before_tcp_reaches_WorldZone" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/83)" format="100%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/83" xsize="501" ysize="119" src="images/xx1100000682_Stop_the_robot_before_tcp_reaches_WorldZone.jpg"/>
                  </wrapper>
                  <paragraph>When the robot has been moved into a World Zone defined as an outside work area, for example, by releasing the brakes and manually pushing, then the only ways to get out of the Zone are by jogging or by manual pushing with the brakes released.</paragraph>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Minimum size of World Zones</title>
               <paragraph>Supervision of the movement of the tool center points is done at discrete points with a time interval between them that depends on the path resolution. It is up to the user to make the zones large enough so the robot cannot move right through a zone without being checked inside the Zone.</paragraph>
               <paragraph>Make sure that the zones are a bit larger than the minimum size.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163593)xx1100000683_Minimum_size_of_World_Zones_1" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/82)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/82" xsize="279" ysize="162" src="images/xx1100000683_Minimum_size_of_World_Zones_1.jpg"/>
               </wrapper>
               <paragraph>If the same digital output is used for more than one World Zone, the distance between the Zones must exceed the minimum size, as shown in the table above, to avoid an incorrect status for the output.</paragraph>
               <paragraph>It is possible that the robot can pass right through a corner of a zone without it being noticed, if the time that the robot is inside the zone is too short. Therefore, make the size of the zone larger than the dangerous area.</paragraph>
               <wrapper class="figure">
                  <image alt="id(163589)xx1100000684_Minimum_size_of_World_Zones_2" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/81)" format="60%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/81" xsize="209" ysize="125" src="images/xx1100000684_Minimum_size_of_World_Zones_2.jpg"/>
               </wrapper>
               <paragraph>If World Zones are used in combination soft servo, the zone size must be additional increased to compensate for the lag from soft servo. The soft servo lag is the distance between the TCP of the robot and supervision of world zone at interpolation time. The soft servo lag will be increased with higher softness defined with the instruction <phrase class="notranslate">
                     <phrase class="script">SoftAct</phrase>
                  </phrase>.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Maximum number of World Zones</title>
               <paragraph>A maximum of 20 World Zones can be defined at the same time.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Power failure, restart, and run on</title>
               <paragraph>
                  <italic>Stationary World Zones</italic> will be deleted at power off and must be reinserted at power on by an event routine connected to the event POWER ON.</paragraph>
               <paragraph>
                  <italic>Temporary World Zones</italic> will survive a power failure but will be erased when a new program is loaded or when a program is started from the main program (<italic>PP to Main</italic> or <italic>PP to routine</italic>).</paragraph>
               <paragraph>The digital outputs for the World Zones will be updated first at <italic>Motors on</italic>. That is, when the controller is restarted the World Zone status will be set to outside during start. At first MOTORS ON after restart the World Zone status will be updated correctly.</paragraph>
               <paragraph>If the robot is moved during MOTORS OFF the World Zone status will not be updated until next MOTORS ON order.</paragraph>
               <paragraph>A hard emergency stop (not SoftAS, SoftGS, or SoftES) can result in an incorrect World Zone status since the robot can move in or out of a Zone during the stopping movement without the World Zone signals being updated. The World Zone signals will be correctly updated after a MOTORS ON order.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>
                              <bold>Motion and I/O principles</bold>
                           </paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <bold>Coordinate Systems</bold>
                           </paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>Data types:</paragraph>
                           <list class="list-unordered">
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">wztemporary</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">wzstationary</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">shapedata</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                           </list>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.RAPID">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Instructions:</paragraph>
                           <list class="list-unordered">
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZBoxDef</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZSphDef</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZCylDef</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZHomeJointDef</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZLimJointDef</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZLimSup</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZDOSet</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZDisable</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZEnable</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                              <listitem>
                                 <paragraph>
                                    <phrase class="notranslate">
                                       <phrase class="script">WZFree</phrase>
                                    </phrase>
                                 </paragraph>
                              </listitem>
                           </list>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.RAPID">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">RAPID Instructions, Functions and Data types</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
         <section>
            <title>I/O principles<indexterm id="index267">
                  <primary>I/O principles</primary>
               </indexterm>
               <indexterm id="index268">
                  <primary>signals</primary>
               </indexterm>
            </title>
            <wrapper class="block">
               <title>Description</title>
               <paragraph>The robot generally has one or more I/O boards. Each of the boards has several digital and/or analog channels which must be connected to logical signals before they can be used. This is carried out in the system parameters and has usually already been done using standard names before the robot is delivered. Logical signals must always be used during programming.</paragraph>
               <paragraph>A physical channel can be connected to several logical signals, but can also have no logical connections, as shown in the following figure.</paragraph>
               <paragraph>
                  <phrase class="superscript">To be able to use an I/O board, its channels must be given logical signals. In the following figure, the physical output 2 is connected to two different logical signals. IN16, on the other hand, has no logical signal and thus cannot be used.</phrase>
               </paragraph>
               <wrapper class="figure">
                  <image alt="id(163585)xx1100000685_IO_principles" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/80)" format="70%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/80" xsize="311" ysize="248" src="images/xx1100000685_IO_principles.jpg"/>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Signal characteristics</title>
               <paragraph>The characteristics of a signal are depend on the physical channel used as well as how the channel is defined in the system parameters. The physical channel determines time delays and voltage levels (see the product specification for the robot controller). The characteristics, filter times and scaling between programmed and physical values, are defined in the system parameters.</paragraph>
               <paragraph>When the power supply to the robot is switched on, all signals are set to zero. They are not, however, affected by emergency stops or similar events.</paragraph>
               <paragraph>An output can be set to one or zero from within the program. This can also be done using a delay or in the form of a pulse. If a pulse or a delayed change is ordered for an output, the program execution continues. The change is then carried out without affecting the rest of the program execution. If, on the other hand, a new change is ordered for the same output before the given time elapses, the first change is not carried out.</paragraph>
               <paragraph>
                  <phrase class="superscript">The following figure shows an example where the instruction <phrase class="notranslate">
                        <phrase class="script">SetDO</phrase>
                     </phrase> is not carried out at all because a new command is given before the time delay has elapsed.</phrase>
               </paragraph>
               <wrapper class="figure">
                  <image alt="id(163581)xx1100000686_Signal_characteristics" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/79)" format="85%" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/79" xsize="299" ysize="164" src="images/xx1100000686_Signal_characteristics.jpg"/>
               </wrapper>
            </wrapper>
            <wrapper class="block">
               <title>Signals connected to interrupt</title>
               <paragraph>RAPID interrupt functions can be connected to digital signal changes. The function can be called on a raising or falling edge of the signal. However, if the digital signal changes very quickly, the interrupt can be missed.</paragraph>
               <paragraph>For example, if a function is connected to a signal called <italic>
                     <phrase class="notranslate">do1</phrase>
                  </italic> and the program code is as follows:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">SetDO do1,1;</phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">SetDO do1,0;</phrase> 
                  </paragraph>
               </wrapper>
               <paragraph>The signal will first go to high (1) and then low (0) in a few milliseconds. In this case the interrupt may be lost. To be sure that the interrupt is not lost, make sure that the output is set before resetting it.</paragraph>
               <paragraph>For example:</paragraph>
               <wrapper class="preformatted" xml:lang="en">
                  <paragraph>
                     <phrase class="notranslate">SetDO do1,1; </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">WaitDO do1 ,1; </phrase>
                  </paragraph>
                  <paragraph>
                     <phrase class="notranslate">SetDO do1,0; </phrase>
                  </paragraph>
               </wrapper>
               <paragraph>With this method, no interrupts will be lost.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>System signals</title>
               <paragraph>Logical signals can be interconnected by means of special system functions. If, for example, an input is connected to the system function <phrase class="notranslate">
                     <phrase class="script">Start</phrase>
                  </phrase>, a program start is automatically generated as soon as this input is enabled. These system functions are generally only enabled in automatic mode.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Cross connections<indexterm id="index269">
                     <primary>cross connections</primary>
                  </indexterm>
               </title>
               <paragraph>Digital signals can be interconnected in such a way that they automatically affect one another:</paragraph>
               <list class="list-unordered">
                  <listitem>
                     <paragraph>An output signal can be connected to one or more input or output signals.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>An input signal can be connected to one or more input or output signals.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>If the same signal is used in several cross connections, the value of that signal is the same as the value that was last enabled (changed).</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Cross connections can be interlinked, in other words, one cross connection can affect another. They must not, however, be connected in such a way so as to form a "vicious circle", for example cross-connecting <phrase class="notranslate">
                           <phrase class="script">di1</phrase>
                        </phrase> to <phrase class="notranslate">
                           <phrase class="script">di2</phrase>
                        </phrase> whilst <phrase class="notranslate">
                           <phrase class="script">di2</phrase>
                        </phrase> is cross-connected to <phrase class="notranslate">
                           <phrase class="script">di1</phrase>
                        </phrase>.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>If there is a cross connection on an input signal, the corresponding physical connection is automatically disabled. Any changes to that physical channel will thus not be detected.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Pulses or delays are not transmitted over cross connections.</paragraph>
                  </listitem>
                  <listitem>
                     <paragraph>Logical conditions can be defined using <phrase class="notranslate">
                           <phrase class="script">NOT</phrase>
                        </phrase>, <phrase class="notranslate">
                           <phrase class="script">AND</phrase>
                        </phrase>, and <phrase class="notranslate">
                           <phrase class="script">OR</phrase>
                        </phrase>.</paragraph>
                  </listitem>
               </list>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td>
                           <paragraph>Examples</paragraph>
                        </td>
                        <td>
                           <paragraph>Description</paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">di2=di1</phrase>
                              </paragraph>
                              <paragraph>
                                 <phrase class="notranslate">di3=di2</phrase>
                              </paragraph>
                              <paragraph>
                                 <phrase class="notranslate">do4=di2</phrase>
                              </paragraph>
                           </wrapper>
                        </td>
                        <td>
                           <paragraph>If <phrase class="notranslate">
                                 <phrase class="script">di1</phrase>
                              </phrase> changes, then <phrase class="notranslate">
                                 <phrase class="script">di2</phrase>
                              </phrase>, <phrase class="notranslate">
                                 <phrase class="script">di3</phrase>
                              </phrase>, and <phrase class="notranslate">
                                 <phrase class="script">do4</phrase>
                              </phrase> will be changed to the corresponding value.</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">do8=do7</phrase>
                              </paragraph>
                              <paragraph>
                                 <phrase class="notranslate">do8=di5</phrase>
                              </paragraph>
                           </wrapper>
                        </td>
                        <td>
                           <paragraph>If <phrase class="notranslate">
                                 <phrase class="script">do7</phrase>
                              </phrase> is set to 1, <phrase class="notranslate">
                                 <phrase class="script">do8</phrase>
                              </phrase> will also be set to 1. If <phrase class="notranslate">
                                 <phrase class="script">di5</phrase>
                              </phrase> is then set to 0, <phrase class="notranslate">
                                 <phrase class="script">do8</phrase>
                              </phrase> will also be changed (in spite of the fact that do7 is still 1).</paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <wrapper class="preformatted" xml:lang="en">
                              <paragraph>
                                 <phrase class="notranslate">do5 = di6 AND do1</phrase>
                              </paragraph>
                           </wrapper>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="notranslate">
                                 <phrase class="script">do5</phrase>
                              </phrase> is set to 1 if both <phrase class="notranslate">
                                 <phrase class="script">di6</phrase>
                              </phrase> and <phrase class="notranslate">
                                 <phrase class="script">do1</phrase>
                              </phrase> are set to 1.</paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
            <wrapper class="block">
               <title>Limitations</title>
               <paragraph>A maximum of 10 signals can be pulsed at the same time and a maximum of 20 signals can be delayed at the same time.</paragraph>
            </wrapper>
            <wrapper class="block">
               <title>Related information</title>
               <table>
                  <col/>
                  <col/>
                  <thead>
                     <tr>
                        <td/>
                        <td>
                           <paragraph>
                              <bold>Described in</bold>
                           </paragraph>
                        </td>
                     </tr>
                  </thead>
                  <tbody>
                     <tr>
                        <td>
                           <paragraph>Definition of I/O boards and signals</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.TRM.SystemParameters">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Technical reference manual</paragraph>
                                    <paragraph class="abb.maintitle">System parameters</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Instructions for handling I/O</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <link type="Reference;" xlink:type="simple" xlink:href="#newid-21">Input and output signals</link>
                           </paragraph>
                        </td>
                     </tr>
                     <tr>
                        <td>
                           <paragraph>Manual manipulation of I/O</paragraph>
                        </td>
                        <td>
                           <paragraph>
                              <phrase class="variable" type="Reference.OM.Controller">
                                 <phrase>
                                    <paragraph class="abb.subtitle">Operating manual</paragraph>
                                    <paragraph class="abb.maintitle">OmniCore</paragraph>
                                 </phrase>
                              </phrase>
                           </paragraph>
                        </td>
                     </tr>
                  </tbody>
               </table>
            </wrapper>
         </section>
      </section>
      <section>
         <title>Glossary<indexterm id="index270">
               <primary>glossary</primary>
            </indexterm>
         </title>
         <wrapper class="block">
            <title>Glossary</title>
            <table>
               <col/>
               <col/>
               <thead>
                  <tr>
                     <td>
                        <paragraph>
                           <bold>Term</bold>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>
                           <bold>Description</bold>
                        </paragraph>
                     </td>
                  </tr>
               </thead>
               <tbody>
                  <tr>
                     <td>
                        <paragraph>Argument<indexterm id="index271">
                              <primary>argument</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The parts of an instruction that can be changed, that is everything except the name of the instruction.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Automatic mode<indexterm id="index272">
                              <primary>automatic mode</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The applicable mode when the operating mode selector is set to</paragraph>
                        <wrapper class="figure">
                           <image alt="id(164622)xx1100000688_AutomaticMode" fileref="url(file:/F:/SkribentaFiles/FileRepository/9/1/2/1/59)" format="25mm" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/9/1/2/1/59" xsize="56" ysize="53" src="images/xx1100000688_AutomaticMode.jpg"/>
                        </wrapper>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Component<indexterm id="index273">
                              <primary>component of a record</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>One part of a record.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Configuration<indexterm id="index274">
                              <primary>configuration</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The position of the robot axes at a particular location.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Constant<indexterm id="index275">
                              <primary>constant</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Data that can only be changed manually.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Corner path<indexterm id="index276">
                              <primary>corner path</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The path generated when passing a fly-by point.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Declaration<indexterm id="index277">
                              <primary>declaration</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The part of a routine or data that defines its properties.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Dialog/Dialog box<indexterm id="index278">
                              <primary>dialog box</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Dialog boxes on the FlexPendant must always be acknowledged (usually by tapping <bold>OK</bold> or <bold>Cancel</bold>) before they can be closed.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Error handler<indexterm id="index279">
                              <primary>error handler</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A separate part of a routine where an error can be taken care of. Normal execution can then be restarted automatically.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Expression<indexterm id="index280">
                              <primary>expression</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A sequence of data and associated operands; for example <phrase class="notranslate">
                              <phrase class="script">reg1+5</phrase>
                           </phrase> or <phrase class="notranslate">
                              <phrase class="script">reg1&gt;5</phrase>
                           </phrase>.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Fly-by point<indexterm id="index281">
                              <primary>fly-by point</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A point which the robot only passes in the vicinity of â without stopping. The distance to that point depends on the size of the programmed zone.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Function<indexterm id="index282">
                              <primary>function</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A routine that returns a value.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Group signal<indexterm id="index283">
                              <primary>group signal</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A number of digital signals that are grouped together and handled as one signal.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Interrupt<indexterm id="index284">
                              <primary>interrupt</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>An event that temporarily interrupts program execution and executes a trap routine.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>I/O<indexterm id="index285">
                              <primary>I/O</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Electrical inputs and outputs.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Main routine<indexterm id="index286">
                              <primary>main routine</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The routine that usually starts when the start button is pressed.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Manual mode<indexterm id="index287">
                              <primary>manual mode</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The applicable mode when the operating mode switch is set to</paragraph>
                        <wrapper class="figure">
                           <image alt="id(163577)xx1100000687_manualmode" fileref="url(file:/F:/SkribentaFiles/FileRepository/0/1/2/1/78)" format="25mm" xlink:type="simple" xlink:href="file:/F:/SkribentaFiles/FileRepository/0/1/2/1/78" xsize="44" ysize="40" src="images/xx1100000687_manualmode.jpg"/>
                        </wrapper>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Mechanical unit<indexterm id="index288">
                              <primary>mechanical unit</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A group of additional axes.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Module<indexterm id="index289">
                              <primary>module</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A group of routines and data, that is a part of the program.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Motors On/Off<indexterm id="index290">
                              <primary>motors on/off</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The state of the robot, that is whether or not the power supply to the motors is switched on.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Operator panel<indexterm id="index291">
                              <primary>operator panel</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The panel located on the front of the controller.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Orientation<indexterm id="index292">
                              <primary>orientation</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The direction of an end effector.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Parameter<indexterm id="index293">
                              <primary>parameter</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The input data of a routine, sent with the routine call. It corresponds to the argument of an instruction.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Persistent<indexterm id="index294">
                              <primary>persistent</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A variable, the value of which is persistent.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Procedure<indexterm id="index295">
                              <primary>procedure</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A routine which, when called, can independently form an instruction.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Program<indexterm id="index296">
                              <primary>program</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The set of instructions and data which define the task of the robot.</paragraph>
                        <paragraph>Programs do not, however, contain system modules.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Program data<indexterm id="index297">
                              <primary>program data</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Data that can be accessed in a complete module or in the complete program.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Program module<indexterm id="index298">
                              <primary>program module</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A module included in the robotâs program and which is transferred when copying the program to a diskette.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Record<indexterm id="index299">
                              <primary>record</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A compound data type.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Routine<indexterm id="index300">
                              <primary>routine</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A subprogram.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Routine data<indexterm id="index301">
                              <primary>routine data</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Local data that can only be used in a routine.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Start point<indexterm id="index302">
                              <primary>start point</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The instruction that will be executed first when starting program execution.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Stop point<indexterm id="index303">
                              <primary>stop point</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A point at which the robot stops before it continues on to the next point.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>System module<indexterm id="index304">
                              <primary>system module</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>A module that is always present in the program memory. When a new program is read, the system modules remain in the program memory.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>System parameters<indexterm id="index305">
                              <primary>system parameters</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The settings which define the robot equipment and properties; configuration data in other words.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Tool Center Point (TCP)<indexterm id="index306">
                              <primary>tool center point</primary>
                           </indexterm>
                           <indexterm id="index307">
                              <primary>TCP</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The point, generally at the tip of a tool, that moves along the programmed path at the programmed velocity.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Trap routine<indexterm id="index308">
                              <primary>trap routine</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The routine that defines what is to be done when a specific interrupt occurs.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Variable<indexterm id="index309">
                              <primary>variable</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>Data that can be changed from within a program, but which loses its value (returns to its initial value) when a program is started from the beginning.</paragraph>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <paragraph>Zone<indexterm id="index310">
                              <primary>zone</primary>
                           </indexterm>
                        </paragraph>
                     </td>
                     <td>
                        <paragraph>The spherical space that surrounds a fly-by point. As soon as the robot enters this zone, it starts to move to the next position.</paragraph>
                     </td>
                  </tr>
               </tbody>
            </table>
         </wrapper>
      </section>
   </part>
   <part class="endmatter"/>
   <part class="FO">
      <wrapper class="FrontCover">
         <wrapper class="MainTitle"/>
         <wrapper class="SubTitle"/>
         <wrapper class="Category"/>
         <wrapper class="Image" fileref="url(file:/E:/Skribenta/server/temp/file-2008883021876403976-ix-969175-general-image.jpg)"/>
         <wrapper class="Logo" fileref="url(file:/E:/Skribenta/server/temp/file-2319168723047955921-ix-894875-ABB_Logo_Print_CMYK.eps.pdf)"/>
      </wrapper>
      <wrapper class="BackCover">
         <wrapper class="Address"/>
         <wrapper class="Contact"/>
         <wrapper class="URL"/>
         <wrapper class="Logo" fileref="url(file:/E:/Skribenta/server/temp/file-3530783086722954665-ix-894875-ABB_Logo_Print_CMYK.eps.pdf)"/>
         <wrapper class="DocId"/>
         <wrapper class="Copyright"/>
      </wrapper>
      <wrapper class="BlankPage"/>
      <wrapper class="WarningsForOngoing"/>
      <wrapper class="TableOfContents"/>
      <wrapper class="Differences" id="differences-likely-to-be-unique">
         <title>Differences</title>
      </wrapper>
      <wrapper class="indexregister" id="index-likely-to-be-unique">
         <link xlink:type="simple" xlink:href="#index21"/>.modx<link xlink:type="simple" xlink:href="#index22"/>.sysx7<link xlink:type="simple" xlink:href="#index265"/>7 axes robotsA<link xlink:type="simple" xlink:href="#index147"/>
         <link xlink:type="simple" xlink:href="#index220"/>additional axes<link xlink:type="simple" xlink:href="#index54"/>aggregateaggregates<link xlink:type="simple" xlink:href="#index112"/>expressions<link xlink:type="simple" xlink:href="#index63"/>alias data types<link xlink:type="simple" xlink:href="#index103"/>
         <phrase class="notranslate">AND</phrase>
         <link xlink:type="simple" xlink:href="#index271"/>argument<link xlink:type="simple" xlink:href="#index115"/>conditionalarguments<link xlink:type="simple" xlink:href="#index3"/>description<link xlink:type="simple" xlink:href="#index97"/>arithmetic expressions<link xlink:type="simple" xlink:href="#index184"/>arithmetic functionsarrays<link xlink:type="simple" xlink:href="#index110"/>expressions<link xlink:type="simple" xlink:href="#index83"/>variables<link xlink:type="simple" xlink:href="#index123"/>assigning value to data<link xlink:type="simple" xlink:href="#index50"/>atomic data type<link xlink:type="simple" xlink:href="#index272"/>automatic mode<link xlink:type="simple" xlink:href="#index250"/>axis configurationB<link xlink:type="simple" xlink:href="#index209"/>backward execution<link xlink:type="simple" xlink:href="#index210"/>backward handler<link xlink:type="simple" xlink:href="#index214"/>
         <link xlink:type="simple" xlink:href="#index222"/>base coordinate system<link xlink:type="simple" xlink:href="#index167"/>binary communication<link xlink:type="simple" xlink:href="#index185"/>bit functions<link xlink:type="simple" xlink:href="#index128"/>
         <phrase class="notranslate">bool</phrase>C<link xlink:type="simple" xlink:href="#index201"/>calibration<link xlink:type="simple" xlink:href="#index6"/>case sensitivity<link xlink:type="simple" xlink:href="#index232"/>circular interpolation<link xlink:type="simple" xlink:href="#index141"/>
         <link xlink:type="simple" xlink:href="#index233"/>circular movement<link xlink:type="simple" xlink:href="#index182"/>clock<link xlink:type="simple" xlink:href="#index155"/>
         <link xlink:type="simple" xlink:href="#index262"/>collision detection<link xlink:type="simple" xlink:href="#index14"/>comment<link xlink:type="simple" xlink:href="#index126"/>comments<link xlink:type="simple" xlink:href="#index15"/>comments in UTF-8<link xlink:type="simple" xlink:href="#index164"/>communication instructions<link xlink:type="simple" xlink:href="#index56"/>
         <link xlink:type="simple" xlink:href="#index273"/>component of a record<link xlink:type="simple" xlink:href="#index246"/>concurrent execution<link xlink:type="simple" xlink:href="#index114"/>conditional argument<link xlink:type="simple" xlink:href="#index252"/>confdata<link xlink:type="simple" xlink:href="#index274"/>configuration<link xlink:type="simple" xlink:href="#index251"/>robot<link xlink:type="simple" xlink:href="#index191"/>
         <link xlink:type="simple" xlink:href="#index192"/>
         <link xlink:type="simple" xlink:href="#index193"/>configuration data<link xlink:type="simple" xlink:href="#index256"/>
         <phrase class="notranslate">ConfJ</phrase>
         <link xlink:type="simple" xlink:href="#index257"/>
         <phrase class="notranslate">ConfL</phrase>
         <link xlink:type="simple" xlink:href="#index90"/>
         <phrase class="notranslate">CONST</phrase>
         <link xlink:type="simple" xlink:href="#index70"/>
         <link xlink:type="simple" xlink:href="#index275"/>constant<link xlink:type="simple" xlink:href="#index88"/>constants<link xlink:type="simple" xlink:href="#index93"/>initialization values<link xlink:type="simple" xlink:href="#index204"/>conversion<link xlink:type="simple" xlink:href="#index133"/>conversions<link xlink:type="simple" xlink:href="#index151"/>conveyor tracking<link xlink:type="simple" xlink:href="#index219"/>coordinated additional axes<link xlink:type="simple" xlink:href="#index211"/>
         <link xlink:type="simple" xlink:href="#index260"/>coordinate systems<link xlink:type="simple" xlink:href="#index237"/>
         <link xlink:type="simple" xlink:href="#index276"/>corner path<link xlink:type="simple" xlink:href="#index269"/>cross connectionsD<link xlink:type="simple" xlink:href="#index48"/>data<link xlink:type="simple" xlink:href="#index124"/>assigning values<link xlink:type="simple" xlink:href="#index71"/>constant<link xlink:type="simple" xlink:href="#index65"/>declarations<link xlink:type="simple" xlink:href="#index5"/>description<link xlink:type="simple" xlink:href="#index92"/>initiating<link xlink:type="simple" xlink:href="#index69"/>persistent<link xlink:type="simple" xlink:href="#index77"/>program<link xlink:type="simple" xlink:href="#index79"/>routine<link xlink:type="simple" xlink:href="#index75"/>scope<link xlink:type="simple" xlink:href="#index96"/>storage class<link xlink:type="simple" xlink:href="#index109"/>used in expressions<link xlink:type="simple" xlink:href="#index67"/>variable<link xlink:type="simple" xlink:href="#index49"/>data types<link xlink:type="simple" xlink:href="#index55"/>aggregates<link xlink:type="simple" xlink:href="#index64"/>alias<link xlink:type="simple" xlink:href="#index51"/>atomic<link xlink:type="simple" xlink:href="#index57"/>components<link xlink:type="simple" xlink:href="#index59"/>non-value<link xlink:type="simple" xlink:href="#index53"/>record<link xlink:type="simple" xlink:href="#index61"/>semi value<link xlink:type="simple" xlink:href="#index277"/>declaration<link xlink:type="simple" xlink:href="#index27"/>module<link xlink:type="simple" xlink:href="#index42"/>routinedeclarations<link xlink:type="simple" xlink:href="#index89"/>constants<link xlink:type="simple" xlink:href="#index86"/>persistents<link xlink:type="simple" xlink:href="#index81"/>variables<link xlink:type="simple" xlink:href="#index278"/>dialog box<link xlink:type="simple" xlink:href="#index218"/>displacement coordinate system<link xlink:type="simple" xlink:href="#index99"/>
         <phrase class="notranslate">DIV</phrase>
         <link xlink:type="simple" xlink:href="#index130"/>
         <phrase class="notranslate">dnum</phrase>E<link xlink:type="simple" xlink:href="#index62"/>equal data types<link xlink:type="simple" xlink:href="#index178"/>
         <phrase class="notranslate">ERRNO</phrase>
         <link xlink:type="simple" xlink:href="#index279"/>error handler<link xlink:type="simple" xlink:href="#index177"/>error handlers<link xlink:type="simple" xlink:href="#index175"/>
         <link xlink:type="simple" xlink:href="#index176"/>error numbers<link xlink:type="simple" xlink:href="#index174"/>error recovery<link xlink:type="simple" xlink:href="#index179"/>event log<link xlink:type="simple" xlink:href="#index196"/>event type<link xlink:type="simple" xlink:href="#index197"/>execution handler<link xlink:type="simple" xlink:href="#index198"/>execution level<link xlink:type="simple" xlink:href="#index280"/>expressionexpressions<link xlink:type="simple" xlink:href="#index98"/>arithmetic<link xlink:type="simple" xlink:href="#index102"/>logical<link xlink:type="simple" xlink:href="#index108"/>stringF<link xlink:type="simple" xlink:href="#index17"/>file header<link xlink:type="simple" xlink:href="#index166"/>file instructions<link xlink:type="simple" xlink:href="#index186"/>file operation functions<link xlink:type="simple" xlink:href="#index239"/>
         <link xlink:type="simple" xlink:href="#index245"/>
         <link xlink:type="simple" xlink:href="#index281"/>fly-by point<link xlink:type="simple" xlink:href="#index31"/>
         <link xlink:type="simple" xlink:href="#index282"/>function<link xlink:type="simple" xlink:href="#index113"/>function calls<link xlink:type="simple" xlink:href="#index44"/>function declarationGglobal<link xlink:type="simple" xlink:href="#index73"/>data<link xlink:type="simple" xlink:href="#index34"/>routine<link xlink:type="simple" xlink:href="#index270"/>glossary<link xlink:type="simple" xlink:href="#index283"/>group signalI<link xlink:type="simple" xlink:href="#index285"/>I/O<link xlink:type="simple" xlink:href="#index165"/>I/O device communication<link xlink:type="simple" xlink:href="#index267"/>I/O principles<link xlink:type="simple" xlink:href="#index163"/>I/O signals<link xlink:type="simple" xlink:href="#index244"/>I/O synchronization<link xlink:type="simple" xlink:href="#index7"/>identifiers<link xlink:type="simple" xlink:href="#index148"/>
         <link xlink:type="simple" xlink:href="#index240"/>independent axes<link xlink:type="simple" xlink:href="#index153"/>indexing conveyor<link xlink:type="simple" xlink:href="#index91"/>initiating data<link xlink:type="simple" xlink:href="#index37"/>INOUT<link xlink:type="simple" xlink:href="#index161"/>input signalsinstructions<link xlink:type="simple" xlink:href="#index2"/>description<link xlink:type="simple" xlink:href="#index119"/>pick lists<link xlink:type="simple" xlink:href="#index121"/>program flow<link xlink:type="simple" xlink:href="#index227"/>
         <link xlink:type="simple" xlink:href="#index236"/>interpolation<link xlink:type="simple" xlink:href="#index284"/>interrupt<link xlink:type="simple" xlink:href="#index157"/>interrupted path<link xlink:type="simple" xlink:href="#index145"/>
         <link xlink:type="simple" xlink:href="#index171"/>interruptsJ<link xlink:type="simple" xlink:href="#index228"/>joint interpolation<link xlink:type="simple" xlink:href="#index142"/>
         <link xlink:type="simple" xlink:href="#index229"/>joint movementK<link xlink:type="simple" xlink:href="#index258"/>kinematic modelsL<link xlink:type="simple" xlink:href="#index230"/>linear interpolation<link xlink:type="simple" xlink:href="#index143"/>
         <link xlink:type="simple" xlink:href="#index231"/>linear movement<link xlink:type="simple" xlink:href="#index154"/>load identification<link xlink:type="simple" xlink:href="#index127"/>loading moduleslocal<link xlink:type="simple" xlink:href="#index74"/>data<link xlink:type="simple" xlink:href="#index35"/>routine<link xlink:type="simple" xlink:href="#index101"/>logical expressions<link xlink:type="simple" xlink:href="#index10"/>logical valuesM<link xlink:type="simple" xlink:href="#index24"/>
         <link xlink:type="simple" xlink:href="#index286"/>main routine<link xlink:type="simple" xlink:href="#index287"/>manual mode<link xlink:type="simple" xlink:href="#index183"/>mathematical instructions<link xlink:type="simple" xlink:href="#index288"/>mechanical unit<link xlink:type="simple" xlink:href="#index190"/>memory<link xlink:type="simple" xlink:href="#index100"/>
         <phrase class="notranslate">MOD</phrase>
         <link xlink:type="simple" xlink:href="#index235"/>modified linear interpolation<link xlink:type="simple" xlink:href="#index289"/>module<link xlink:type="simple" xlink:href="#index26"/>module declaration<link xlink:type="simple" xlink:href="#index18"/>modules<link xlink:type="simple" xlink:href="#index20"/>description<link xlink:type="simple" xlink:href="#index137"/>motion<link xlink:type="simple" xlink:href="#index159"/>motion data<link xlink:type="simple" xlink:href="#index139"/>motion instructionsmotion settings<link xlink:type="simple" xlink:href="#index134"/>instructions<link xlink:type="simple" xlink:href="#index261"/>motion supervision<link xlink:type="simple" xlink:href="#index290"/>motors on/off<link xlink:type="simple" xlink:href="#index140"/>move instructions<link xlink:type="simple" xlink:href="#index146"/>
         <link xlink:type="simple" xlink:href="#index207"/>MultiMove<link xlink:type="simple" xlink:href="#index205"/>MultitaskingN<link xlink:type="simple" xlink:href="#index58"/>non-value data types<link xlink:type="simple" xlink:href="#index106"/>
         <phrase class="notranslate">NOT</phrase>
         <link xlink:type="simple" xlink:href="#index129"/>
         <phrase class="notranslate">num</phrase>
         <link xlink:type="simple" xlink:href="#index9"/>numeric valuesO<link xlink:type="simple" xlink:href="#index217"/>object coordinate system<link xlink:type="simple" xlink:href="#index291"/>operator panel<link xlink:type="simple" xlink:href="#index116"/>operator priority<link xlink:type="simple" xlink:href="#index38"/>optional parameter<link xlink:type="simple" xlink:href="#index189"/>options<link xlink:type="simple" xlink:href="#index105"/>
         <phrase class="notranslate">OR</phrase>
         <link xlink:type="simple" xlink:href="#index292"/>orientation<link xlink:type="simple" xlink:href="#index162"/>output signalsP<link xlink:type="simple" xlink:href="#index36"/>
         <link xlink:type="simple" xlink:href="#index293"/>parameter<link xlink:type="simple" xlink:href="#index149"/>path correction<link xlink:type="simple" xlink:href="#index150"/>path recorder<link xlink:type="simple" xlink:href="#index247"/>path synchronization<link xlink:type="simple" xlink:href="#index87"/>
         <phrase class="notranslate">PERS</phrase>
         <link xlink:type="simple" xlink:href="#index68"/>
         <link xlink:type="simple" xlink:href="#index294"/>persistent<link xlink:type="simple" xlink:href="#index85"/>persistents<link xlink:type="simple" xlink:href="#index95"/>initialization values<link xlink:type="simple" xlink:href="#index118"/>pick lists<link xlink:type="simple" xlink:href="#index16"/>placeholders<link xlink:type="simple" xlink:href="#index248"/>position fix I/O<link xlink:type="simple" xlink:href="#index156"/>position functions<link xlink:type="simple" xlink:href="#index138"/>positioning instructions<link xlink:type="simple" xlink:href="#index28"/>predefined datapriority<link xlink:type="simple" xlink:href="#index117"/>operators<link xlink:type="simple" xlink:href="#index208"/>tasks<link xlink:type="simple" xlink:href="#index30"/>
         <link xlink:type="simple" xlink:href="#index295"/>procedure<link xlink:type="simple" xlink:href="#index46"/>procedure call<link xlink:type="simple" xlink:href="#index43"/>procedure declaration<link xlink:type="simple" xlink:href="#index19"/>
         <link xlink:type="simple" xlink:href="#index296"/>program<link xlink:type="simple" xlink:href="#index47"/>
         <link xlink:type="simple" xlink:href="#index76"/>
         <link xlink:type="simple" xlink:href="#index297"/>program data<link xlink:type="simple" xlink:href="#index120"/>program flow instructions<link xlink:type="simple" xlink:href="#index23"/>
         <link xlink:type="simple" xlink:href="#index298"/>program moduleQ<link xlink:type="simple" xlink:href="#index253"/>quarter revolutionsR<link xlink:type="simple" xlink:href="#index170"/>RAPID Message Queues<link xlink:type="simple" xlink:href="#index168"/>rawbytes communication<link xlink:type="simple" xlink:href="#index52"/>
         <link xlink:type="simple" xlink:href="#index299"/>recordrecords<link xlink:type="simple" xlink:href="#index111"/>expressions<link xlink:type="simple" xlink:href="#index8"/>reserved words<link xlink:type="simple" xlink:href="#index194"/>restart the controller<link xlink:type="simple" xlink:href="#index249"/>robot configuration<link xlink:type="simple" xlink:href="#index254"/>robot configuration supervision<link xlink:type="simple" xlink:href="#index259"/>robot kinematics<link xlink:type="simple" xlink:href="#index29"/>
         <link xlink:type="simple" xlink:href="#index300"/>routine<link xlink:type="simple" xlink:href="#index78"/>
         <link xlink:type="simple" xlink:href="#index301"/>routine data<link xlink:type="simple" xlink:href="#index41"/>routine declarationroutines<link xlink:type="simple" xlink:href="#index4"/>descriptionSscope<link xlink:type="simple" xlink:href="#index72"/>data<link xlink:type="simple" xlink:href="#index33"/>routine<link xlink:type="simple" xlink:href="#index144"/>search instructions<link xlink:type="simple" xlink:href="#index60"/>semi value data types<link xlink:type="simple" xlink:href="#index264"/>serial link robot<link xlink:type="simple" xlink:href="#index202"/>service<link xlink:type="simple" xlink:href="#index200"/>service information<link xlink:type="simple" xlink:href="#index152"/>servo tracking<link xlink:type="simple" xlink:href="#index160"/>
         <link xlink:type="simple" xlink:href="#index268"/>signals<link xlink:type="simple" xlink:href="#index234"/>
         <link xlink:type="simple" xlink:href="#index263"/>singularities<link xlink:type="simple" xlink:href="#index169"/>socket communication<link xlink:type="simple" xlink:href="#index135"/>
         <link xlink:type="simple" xlink:href="#index241"/>soft servo<link xlink:type="simple" xlink:href="#index302"/>start point<link xlink:type="simple" xlink:href="#index225"/>stationary TCP<link xlink:type="simple" xlink:href="#index158"/>status functions<link xlink:type="simple" xlink:href="#index242"/>stop<link xlink:type="simple" xlink:href="#index122"/>stopping program execution<link xlink:type="simple" xlink:href="#index303"/>stop point<link xlink:type="simple" xlink:href="#index11"/>
         <link xlink:type="simple" xlink:href="#index131"/>string<link xlink:type="simple" xlink:href="#index107"/>string expressions<link xlink:type="simple" xlink:href="#index203"/>string functionssupervision<link xlink:type="simple" xlink:href="#index255"/>robot configuration<link xlink:type="simple" xlink:href="#index39"/>
         <link xlink:type="simple" xlink:href="#index132"/>
         <phrase class="notranslate">switch</phrase>
         <link xlink:type="simple" xlink:href="#index13"/>symbols<link xlink:type="simple" xlink:href="#index243"/>synchronization<link xlink:type="simple" xlink:href="#index1"/>syntax rules<link xlink:type="simple" xlink:href="#index187"/>system data<link xlink:type="simple" xlink:href="#index188"/>system information<link xlink:type="simple" xlink:href="#index25"/>
         <link xlink:type="simple" xlink:href="#index304"/>system module<link xlink:type="simple" xlink:href="#index305"/>system parametersT<link xlink:type="simple" xlink:href="#index195"/>
         <link xlink:type="simple" xlink:href="#index206"/>tasks<link xlink:type="simple" xlink:href="#index199"/>task selection panel<link xlink:type="simple" xlink:href="#index213"/>
         <link xlink:type="simple" xlink:href="#index307"/>TCP<link xlink:type="simple" xlink:href="#index226"/>stationary<link xlink:type="simple" xlink:href="#index40"/>terminating routine<link xlink:type="simple" xlink:href="#index181"/>time instructions<link xlink:type="simple" xlink:href="#index212"/>
         <link xlink:type="simple" xlink:href="#index306"/>tool center point<link xlink:type="simple" xlink:href="#index224"/>tool coordinate system<link xlink:type="simple" xlink:href="#index45"/>trap declaration<link xlink:type="simple" xlink:href="#index32"/>
         <link xlink:type="simple" xlink:href="#index308"/>trap routine<link xlink:type="simple" xlink:href="#index172"/>
         <link xlink:type="simple" xlink:href="#index173"/>trap routinesU<link xlink:type="simple" xlink:href="#index180"/>
         <phrase class="notranslate">UNDO</phrase>
         <link xlink:type="simple" xlink:href="#index216"/>
         <link xlink:type="simple" xlink:href="#index221"/>user coordinate system<link xlink:type="simple" xlink:href="#index12"/>UTF-8V<link xlink:type="simple" xlink:href="#index82"/>
         <phrase class="notranslate">VAR</phrase>
         <link xlink:type="simple" xlink:href="#index66"/>
         <link xlink:type="simple" xlink:href="#index309"/>variable<link xlink:type="simple" xlink:href="#index80"/>variables<link xlink:type="simple" xlink:href="#index84"/>arrays<link xlink:type="simple" xlink:href="#index94"/>initialization valuesW<link xlink:type="simple" xlink:href="#index125"/>wait instructions<link xlink:type="simple" xlink:href="#index215"/>world coordinate system<link xlink:type="simple" xlink:href="#index136"/>
         <link xlink:type="simple" xlink:href="#index266"/>world zones<link xlink:type="simple" xlink:href="#index223"/>wrist coordinate systemX<link xlink:type="simple" xlink:href="#index104"/>
         <phrase class="notranslate">XOR</phrase>Z<link xlink:type="simple" xlink:href="#index238"/>
         <link xlink:type="simple" xlink:href="#index310"/>zone</wrapper>
      <wrapper class="PS">
         <wrapper class="PS-FrontCover"/>
         <wrapper class="PS-TableOfContents"/>
         <wrapper class="PS-FrontmatterSections"/>
         <wrapper class="PS-Body"/>
         <wrapper class="PS-Endmatter"/>
         <wrapper class="PS-IndexRegister"/>
         <wrapper class="PS-Differences"/>
         <wrapper class="PS-Warnings"/>
         <wrapper class="PS-WarningsForOngoing"/>
         <wrapper class="PS-BackCover"/>
      </wrapper>
   </part>
</document>